{"version":3,"file":"index.js","sources":["node_modules/svelte/internal/index.mjs","node_modules/svelte/store/index.mjs","../typhonjs/_dist/svelte/util/index.js","../typhonjs/_dist/svelte/store/index.js","node_modules/svelte/easing/index.mjs","../typhonjs/_dist/svelte/math/index.js","../typhonjs/_dist/svelte/application/position/animation/AnimationControl.js","../typhonjs/_dist/svelte/application/position/animation/AnimationManager.js","../typhonjs/_dist/svelte/application/position/constants.js","../typhonjs/_dist/svelte/application/position/convertRelative.js","../typhonjs/_dist/svelte/application/position/animation/AnimationAPI.js","../typhonjs/_dist/svelte/application/position/animation/AnimationGroupControl.js","../typhonjs/_dist/svelte/application/position/animation/AnimationGroupAPI.js","../typhonjs/_dist/svelte/application/position/initial/Centered.js","../typhonjs/_dist/svelte/application/position/initial/index.js","../typhonjs/_dist/svelte/application/position/PositionChangeSet.js","../typhonjs/_dist/svelte/application/position/PositionData.js","../typhonjs/_dist/svelte/application/position/PositionStateAPI.js","../typhonjs/_dist/svelte/application/position/StyleCache.js","../typhonjs/_dist/svelte/application/position/transform/TransformData.js","../typhonjs/_dist/svelte/application/position/validators/AdapterValidators.js","../typhonjs/_dist/svelte/application/position/validators/BasicBounds.js","../typhonjs/_dist/svelte/application/position/validators/TransformBounds.js","../typhonjs/_dist/svelte/application/position/validators/index.js","../typhonjs/_dist/svelte/application/position/transform/Transforms.js","../typhonjs/_dist/svelte/application/position/update/UpdateElementData.js","../typhonjs/_dist/svelte/animate/index.js","../typhonjs/_dist/svelte/application/position/update/UpdateElementManager.js","../typhonjs/_dist/svelte/application/position/Position.js","../typhonjs/_dist/svelte/application/internal/ApplicationState.js","../typhonjs/_dist/svelte/application/internal/GetSvelteData.js","../typhonjs/_dist/svelte/application/internal/loadSvelteConfig.js","../typhonjs/_dist/svelte/application/internal/SvelteReactive.js","../typhonjs/_dist/svelte/application/SvelteApplication.js","../typhonjs/_dist/svelte/transition/index.js","../typhonjs/_dist/svelte/action/index.js","../typhonjs/_dist/svelte/helper/index.js","../typhonjs/_dist/svelte/component/core/index.js","src/view/BasicAppShell.svelte","src/view/BasicApplication.js","src/index.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { group_outros, transition_out, check_outros } from 'svelte/internal';\n\n/**\r\n * Provides a solid string hashing algorithm.\r\n *\r\n * Sourced from: https://stackoverflow.com/a/52171480\r\n *\r\n * @param {string}   str - String to hash.\r\n *\r\n * @param {number}   seed - A seed value altering the hash.\r\n *\r\n * @returns {number} Hash code.\r\n */\r\nfunction hashCode(str, seed = 0)\r\n{\r\n   if (typeof str !== 'string') { return 0; }\r\n\r\n   let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\r\n\r\n   for (let ch, i = 0; i < str.length; i++)\r\n   {\r\n      ch = str.charCodeAt(i);\r\n      h1 = Math.imul(h1 ^ ch, 2654435761);\r\n      h2 = Math.imul(h2 ^ ch, 1597334677);\r\n   }\r\n\r\n   h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\r\n   h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\r\n\r\n   return 4294967296 * (2097151 & h2) + (h1 >>> 0);\r\n}\n\nconst s_UUIDV4_REGEX = /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\r\n\r\n/**\r\n * Generates a UUID v4 compliant ID. Please use a complete UUID generation package for guaranteed compliance.\r\n *\r\n * This code is an evolution of the following Gist.\r\n * https://gist.github.com/jed/982883\r\n *\r\n * There is a public domain / free copy license attached to it that is not a standard OSS license...\r\n * https://gist.github.com/jed/982883#file-license-txt\r\n *\r\n * @returns {string} UUIDv4\r\n */\r\nfunction uuidv4()\r\n{\r\n   return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\r\n    (c ^ (globalThis.crypto || globalThis.msCrypto).getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\r\n}\r\n\r\n/**\r\n * Validates that the given string is formatted as a UUIDv4 string.\r\n *\r\n * @param {string}   uuid - UUID string to test.\r\n *\r\n * @returns {boolean} Is UUIDv4 string.\r\n */\r\nuuidv4.isValid = (uuid) => s_UUIDV4_REGEX.test(uuid);\n\n/**\r\n * Normalizes a string.\r\n *\r\n * @param {string}   query - A string to normalize for comparisons.\r\n *\r\n * @returns {string} Cleaned string.\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\r\n */\r\nfunction normalizeString(query)\r\n{\r\n   return query.trim().normalize('NFD').replace(/[\\x00-\\x1F]/gm, '');\r\n}\n\n/**\r\n * Recursive function that finds the closest parent stacking context.\r\n * See also https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\r\n *\r\n * Original author: Kerry Liu / https://github.com/gwwar\r\n * @see: https://github.com/gwwar/z-context/blob/master/content-script.js\r\n * @see: https://github.com/gwwar/z-context/blob/master/LICENSE\r\n *\r\n * @param {Element} node -\r\n *\r\n * @returns {StackingContext} The closest parent stacking context\r\n */\r\nfunction getStackingContext(node)\r\n{\r\n   // the root element (HTML).\r\n   if (!node || node.nodeName === 'HTML')\r\n   {\r\n      return { node: document.documentElement, reason: 'root' };\r\n   }\r\n\r\n   // handle shadow root elements.\r\n   if (node.nodeName === '#document-fragment')\r\n   {\r\n      return getStackingContext(node.host);\r\n   }\r\n\r\n   const computedStyle = globalThis.getComputedStyle(node);\r\n\r\n   // position: fixed or sticky.\r\n   if (computedStyle.position === 'fixed' || computedStyle.position === 'sticky')\r\n   {\r\n      return { node: node, reason: `position: ${computedStyle.position}` };\r\n   }\r\n\r\n   // positioned (absolutely or relatively) with a z-index value other than \"auto\".\r\n   if (computedStyle.zIndex !== 'auto' && computedStyle.position !== 'static')\r\n   {\r\n      return { node: node, reason: `position: ${computedStyle.position}; z-index: ${computedStyle.zIndex}` };\r\n   }\r\n\r\n   // elements with an opacity value less than 1.\r\n   if (computedStyle.opacity !== '1')\r\n   {\r\n      return { node: node, reason: `opacity: ${computedStyle.opacity}` };\r\n   }\r\n\r\n   // elements with a transform value other than \"none\".\r\n   if (computedStyle.transform !== 'none')\r\n   {\r\n      return { node: node, reason: `transform: ${computedStyle.transform}` };\r\n   }\r\n\r\n   // elements with a mix-blend-mode value other than \"normal\".\r\n   if (computedStyle.mixBlendMode !== 'normal')\r\n   {\r\n      return { node: node, reason: `mixBlendMode: ${computedStyle.mixBlendMode}` };\r\n   }\r\n\r\n   // elements with a filter value other than \"none\".\r\n   if (computedStyle.filter !== 'none')\r\n   {\r\n      return { node: node, reason: `filter: ${computedStyle.filter}` };\r\n   }\r\n\r\n   // elements with a perspective value other than \"none\".\r\n   if (computedStyle.perspective !== 'none')\r\n   {\r\n      return { node: node, reason: `perspective: ${computedStyle.perspective}` };\r\n   }\r\n\r\n   // elements with a clip-path value other than \"none\".\r\n   if (computedStyle.clipPath !== 'none')\r\n   {\r\n      return { node: node, reason: `clip-path: ${computedStyle.clipPath} ` };\r\n   }\r\n\r\n   // elements with a mask value other than \"none\".\r\n   const mask = computedStyle.mask || computedStyle.webkitMask;\r\n   if (mask !== 'none' && mask !== undefined)\r\n   {\r\n      return { node: node, reason: `mask:  ${mask}` };\r\n   }\r\n\r\n   // elements with a mask-image value other than \"none\".\r\n   const maskImage = computedStyle.maskImage || computedStyle.webkitMaskImage;\r\n   if (maskImage !== 'none' && maskImage !== undefined)\r\n   {\r\n      return { node: node, reason: `mask-image: ${maskImage}` };\r\n   }\r\n\r\n   // elements with a mask-border value other than \"none\".\r\n   const maskBorder = computedStyle.maskBorder || computedStyle.webkitMaskBorder;\r\n   if (maskBorder !== 'none' && maskBorder !== undefined)\r\n   {\r\n      return { node: node, reason: `mask-border: ${maskBorder}` };\r\n   }\r\n\r\n   // elements with isolation set to \"isolate\".\r\n   if (computedStyle.isolation === 'isolate')\r\n   {\r\n      return { node: node, reason: `isolation: ${computedStyle.isolation}` };\r\n   }\r\n\r\n   // transform or opacity in will-change even if you don't specify values for these attributes directly.\r\n   if (computedStyle.willChange === 'transform' || computedStyle.willChange === 'opacity')\r\n   {\r\n      return { node: node, reason: `willChange: ${computedStyle.willChange}` };\r\n   }\r\n\r\n   // elements with -webkit-overflow-scrolling set to \"touch\".\r\n   if (computedStyle.webkitOverflowScrolling === 'touch')\r\n   {\r\n      return { node: node, reason: '-webkit-overflow-scrolling: touch' };\r\n   }\r\n\r\n   // an item with a z-index value other than \"auto\".\r\n   if (computedStyle.zIndex !== 'auto')\r\n   {\r\n      const parentStyle = globalThis.getComputedStyle(node.parentNode);\r\n      // with a flex|inline-flex parent.\r\n      if (parentStyle.display === 'flex' || parentStyle.display === 'inline-flex')\r\n      {\r\n         return {\r\n            node: node,\r\n            reason: `flex-item; z-index: ${computedStyle.zIndex}`,\r\n         };\r\n         // with a grid parent.\r\n      }\r\n      else if (parentStyle.grid !== 'none / none / none / row / auto / auto')\r\n      {\r\n         return {\r\n            node: node,\r\n            reason: `child of grid container; z-index: ${computedStyle.zIndex}`,\r\n         };\r\n      }\r\n   }\r\n\r\n   // contain with a value of layout, or paint, or a composite value that includes either of them\r\n   const contain = computedStyle.contain;\r\n   if (['layout', 'paint', 'strict', 'content'].indexOf(contain) > -1 ||\r\n    contain.indexOf('paint') > -1 ||\r\n    contain.indexOf('layout') > -1\r\n   )\r\n   {\r\n      return {\r\n         node: node,\r\n         reason: `contain: ${contain}`,\r\n      };\r\n   }\r\n\r\n   return getStackingContext(node.parentNode);\r\n}\r\n\r\n/**\r\n * @typedef {Object} StackingContext\r\n *\r\n * @property {Element} node          A DOM Element\r\n * @property {string}  reason        Reason for why a stacking context was created\r\n */\n\nconst s_REGEX = /(\\d+)\\s*px/;\r\n\r\n/**\r\n * Parses a pixel string / computed styles. Ex. `100px` returns `100`.\r\n *\r\n * @param {string}   value - Value to parse.\r\n *\r\n * @returns {number|undefined} The integer component of a pixel string.\r\n */\r\nfunction styleParsePixels(value)\r\n{\r\n   if (typeof value !== 'string') { return void 0; }\r\n\r\n   const isPixels = s_REGEX.test(value);\r\n   const number = parseInt(value);\r\n\r\n   return isPixels && Number.isFinite(number) ? number : void 0;\r\n}\n\n/**\r\n * Defines the application shell contract. If Svelte components export getter / setters for the following properties\r\n * then that component is considered an application shell.\r\n *\r\n * @type {string[]}\r\n */\r\nconst applicationShellContract = ['elementRoot'];\r\n\r\nObject.freeze(applicationShellContract);\n\n/**\r\n * Provides a method to determine if the passed in object / Svelte component follows the application shell contract.\r\n * This involves ensuring that the accessors defined in `applicationShellContract`.\r\n *\r\n * Note: A caveat is that when using Vite in a developer build components are wrapped in a proxy / ProxyComponent that\r\n * defines instance accessors versus on the prototype, so the check below ensures that all accessors in the contract are\r\n * either available on the prototype or directly on the instance.\r\n *\r\n * @param {*}  component - Object / component to test.\r\n *\r\n * @returns {boolean} Whether the component is a ApplicationShell or TJSApplicationShell.\r\n */\r\nfunction isApplicationShell(component)\r\n{\r\n   if (component === null || component === void 0) { return false; }\r\n\r\n   let compHasContract = true;\r\n   let protoHasContract = true;\r\n\r\n   // Check for accessors on the instance.\r\n   for (const accessor of applicationShellContract)\r\n   {\r\n      const descriptor = Object.getOwnPropertyDescriptor(component, accessor);\r\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { compHasContract = false; }\r\n   }\r\n\r\n   // Get the prototype which is the parent SvelteComponent that has any getter / setters.\r\n   const prototype = Object.getPrototypeOf(component);\r\n\r\n   // Verify the application shell contract. If the accessors (getters / setters) are defined for\r\n   // `applicationShellContract`.\r\n   for (const accessor of applicationShellContract)\r\n   {\r\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, accessor);\r\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { protoHasContract = false; }\r\n   }\r\n\r\n   return compHasContract || protoHasContract;\r\n}\n\n/**\r\n * Provides basic duck typing to determine if the provided object is a HMR ProxyComponent instance or class.\r\n *\r\n * @param {*}  comp - Data to check as a HMR proxy component.\r\n *\r\n * @returns {boolean} Whether basic duck typing succeeds.\r\n */\r\nfunction isHMRProxy(comp)\r\n{\r\n   const instanceName = comp?.constructor?.name;\r\n   if (typeof instanceName === 'string' && (instanceName.startsWith('Proxy<') || instanceName === 'ProxyComponent'))\r\n   {\r\n      return true;\r\n   }\r\n\r\n   const prototypeName = comp?.prototype?.constructor?.name;\r\n   return typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') ||\r\n    prototypeName === 'ProxyComponent');\r\n}\n\n/**\r\n * Provides basic duck typing to determine if the provided function is a constructor function for a Svelte component.\r\n *\r\n * @param {*}  comp - Data to check as a Svelte component.\r\n *\r\n * @returns {boolean} Whether basic duck typing succeeds.\r\n */\r\nfunction isSvelteComponent(comp)\r\n{\r\n   if (comp === null || comp === void 0 || typeof comp !== 'function') { return false; }\r\n\r\n   // When using Vite in a developer build the SvelteComponent is wrapped in a ProxyComponent class.\r\n   // This class doesn't define methods on the prototype, so we must check if the constructor name\r\n   // starts with `Proxy<` as it provides the wrapped component as `Proxy<_wrapped component name_>`.\r\n   const prototypeName = comp?.prototype?.constructor?.name;\r\n   if (typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') || prototypeName === 'ProxyComponent'))\r\n   {\r\n      return true;\r\n   }\r\n\r\n   return typeof window !== void 0 ?\r\n    typeof comp.prototype.$destroy === 'function' && typeof comp.prototype.$on === 'function' : // client-side\r\n     typeof comp.render === 'function'; // server-side\r\n}\n\n/**\r\n * Runs outro transition then destroys Svelte component.\r\n *\r\n * Workaround for https://github.com/sveltejs/svelte/issues/4056\r\n *\r\n * @param {*}  instance - A Svelte component.\r\n */\r\nasync function outroAndDestroy(instance)\r\n{\r\n   return new Promise((resolve) =>\r\n   {\r\n      if (instance.$$.fragment && instance.$$.fragment.o)\r\n      {\r\n         group_outros();\r\n         transition_out(instance.$$.fragment, 0, 0, () =>\r\n         {\r\n            instance.$destroy();\r\n            resolve();\r\n         });\r\n         check_outros();\r\n      }\r\n      else\r\n      {\r\n         instance.$destroy();\r\n         resolve();\r\n      }\r\n   });\r\n}\n\n/**\r\n * Parses a TyphonJS Svelte config object ensuring that classes specified are Svelte components and props are set\r\n * correctly.\r\n *\r\n * @param {object}   config - Svelte config object.\r\n *\r\n * @param {*}        [thisArg] - `This` reference to set for invoking any props function.\r\n *\r\n * @returns {object} The processed Svelte config object.\r\n */\r\nfunction parseSvelteConfig(config, thisArg = void 0)\r\n{\r\n   if (typeof config !== 'object')\r\n   {\r\n      throw new TypeError(`parseSvelteConfig - 'config' is not an object:\\n${JSON.stringify(config)}.`);\r\n   }\r\n\r\n   if (!isSvelteComponent(config.class))\r\n   {\r\n      throw new TypeError(\r\n       `parseSvelteConfig - 'class' is not a Svelte component constructor for config:\\n${JSON.stringify(config)}.`);\r\n   }\r\n\r\n   if (config.hydrate !== void 0 && typeof config.hydrate !== 'boolean')\r\n   {\r\n      throw new TypeError(\r\n       `parseSvelteConfig - 'hydrate' is not a boolean for config:\\n${JSON.stringify(config)}.`);\r\n   }\r\n\r\n   if (config.intro !== void 0 && typeof config.intro !== 'boolean')\r\n   {\r\n      throw new TypeError(\r\n       `parseSvelteConfig - 'intro' is not a boolean for config:\\n${JSON.stringify(config)}.`);\r\n   }\r\n\r\n   if (config.target !== void 0 && typeof config.target !== 'string' && !(config.target instanceof HTMLElement) &&\r\n    !(config.target instanceof ShadowRoot) && !(config.target instanceof DocumentFragment))\r\n   {\r\n      throw new TypeError(\r\n       `parseSvelteConfig - 'target' is not a string, HTMLElement, ShadowRoot, or DocumentFragment for config:\\n${\r\n        JSON.stringify(config)}.`);\r\n   }\r\n\r\n   if (config.anchor !== void 0 && typeof config.anchor !== 'string' && !(config.anchor instanceof HTMLElement) &&\r\n    !(config.anchor instanceof ShadowRoot) && !(config.anchor instanceof DocumentFragment))\r\n   {\r\n      throw new TypeError(\r\n       `parseSvelteConfig - 'anchor' is not a string, HTMLElement, ShadowRoot, or DocumentFragment for config:\\n${\r\n        JSON.stringify(config)}.`);\r\n   }\r\n\r\n   if (config.context !== void 0 && typeof config.context !== 'function' && !(config.context instanceof Map) &&\r\n    typeof config.context !== 'object')\r\n   {\r\n      throw new TypeError(\r\n       `parseSvelteConfig - 'context' is not a Map, function or object for config:\\n${JSON.stringify(config)}.`);\r\n   }\r\n\r\n   // Validate extra TyphonJS options --------------------------------------------------------------------------------\r\n\r\n   // `selectorTarget` optionally stores a target element found in main element.\r\n   if (config.selectorTarget !== void 0 && typeof config.selectorTarget !== 'string')\r\n   {\r\n      throw new TypeError(\r\n       `parseSvelteConfig - 'selectorTarget' is not a string for config:\\n${JSON.stringify(config)}.`);\r\n   }\r\n\r\n   // `options` stores `injectApp`, `injectEventbus`, and `selectorElement`.\r\n   if (config.options !== void 0 && typeof config.options !== 'object')\r\n   {\r\n      throw new TypeError(\r\n       `parseSvelteConfig - 'options' is not an object for config:\\n${JSON.stringify(config)}.`);\r\n   }\r\n\r\n   // Validate TyphonJS standard options.\r\n   if (config.options !== void 0)\r\n   {\r\n      if (config.options.injectApp !== void 0 && typeof config.options.injectApp !== 'boolean')\r\n      {\r\n         throw new TypeError(\r\n          `parseSvelteConfig - 'options.injectApp' is not a boolean for config:\\n${JSON.stringify(config)}.`);\r\n      }\r\n\r\n      if (config.options.injectEventbus !== void 0 && typeof config.options.injectEventbus !== 'boolean')\r\n      {\r\n         throw new TypeError(\r\n          `parseSvelteConfig - 'options.injectEventbus' is not a boolean for config:\\n${JSON.stringify(config)}.`);\r\n      }\r\n\r\n      // `selectorElement` optionally stores a main element selector to be found in a HTMLElement target.\r\n      if (config.options.selectorElement !== void 0 && typeof config.options.selectorElement !== 'string')\r\n      {\r\n         throw new TypeError(\r\n          `parseSvelteConfig - 'selectorElement' is not a string for config:\\n${JSON.stringify(config)}.`);\r\n      }\r\n   }\r\n\r\n   const svelteConfig = { ...config };\r\n\r\n   // Delete extra Svelte options.\r\n   delete svelteConfig.options;\r\n\r\n   let externalContext = {};\r\n\r\n   // If a context callback function is provided then invoke it with `this` being the Foundry app.\r\n   // If an object is returned it adds the entries to external context.\r\n   if (typeof svelteConfig.context === 'function')\r\n   {\r\n      const contextFunc = svelteConfig.context;\r\n      delete svelteConfig.context;\r\n\r\n      const result = contextFunc.call(thisArg);\r\n      if (typeof result === 'object')\r\n      {\r\n         externalContext = { ...result };\r\n      }\r\n      else\r\n      {\r\n         throw new Error(`parseSvelteConfig - 'context' is a function that did not return an object for config:\\n${\r\n          JSON.stringify(config)}`);\r\n      }\r\n   }\r\n   else if (svelteConfig.context instanceof Map)\r\n   {\r\n      externalContext = Object.fromEntries(svelteConfig.context);\r\n      delete svelteConfig.context;\r\n   }\r\n   else if (typeof svelteConfig.context === 'object')\r\n   {\r\n      externalContext = svelteConfig.context;\r\n      delete svelteConfig.context;\r\n   }\r\n\r\n   // If a props is a function then invoke it with `this` being the Foundry app.\r\n   // If an object is returned set it as the props.\r\n   svelteConfig.props = s_PROCESS_PROPS(svelteConfig.props, thisArg, config);\r\n\r\n   // Process children components attaching to external context.\r\n   if (Array.isArray(svelteConfig.children))\r\n   {\r\n      const children = [];\r\n\r\n      for (let cntr = 0; cntr < svelteConfig.children.length; cntr++)\r\n      {\r\n         const child = svelteConfig.children[cntr];\r\n\r\n         if (!isSvelteComponent(child.class))\r\n         {\r\n            throw new Error(`parseSvelteConfig - 'class' is not a Svelte component for child[${cntr}] for config:\\n${\r\n             JSON.stringify(config)}`);\r\n         }\r\n\r\n         child.props = s_PROCESS_PROPS(child.props, thisArg, config);\r\n\r\n         children.push(child);\r\n      }\r\n\r\n      if (children.length > 0)\r\n      {\r\n         externalContext.children = children;\r\n      }\r\n\r\n      delete svelteConfig.children;\r\n   }\r\n   else if (typeof svelteConfig.children === 'object')\r\n   {\r\n      if (!isSvelteComponent(svelteConfig.children.class))\r\n      {\r\n         throw new Error(`parseSvelteConfig - 'class' is not a Svelte component for children object for config:\\n${\r\n          JSON.stringify(config)}`);\r\n      }\r\n\r\n      svelteConfig.children.props = s_PROCESS_PROPS(svelteConfig.children.props, thisArg, config);\r\n\r\n      externalContext.children = [svelteConfig.children];\r\n      delete svelteConfig.children;\r\n   }\r\n\r\n   if (!(svelteConfig.context instanceof Map))\r\n   {\r\n      svelteConfig.context = new Map();\r\n   }\r\n\r\n   svelteConfig.context.set('external', externalContext);\r\n\r\n   return svelteConfig;\r\n}\r\n\r\n/**\r\n * Processes Svelte props. Potentially props can be a function to invoke with `thisArg`.\r\n *\r\n * @param {object|Function}   props - Svelte props.\r\n *\r\n * @param {*}                 thisArg - `This` reference to set for invoking any props function.\r\n *\r\n * @param {object}            config - Svelte config\r\n *\r\n * @returns {object|void}     Svelte props.\r\n */\r\nfunction s_PROCESS_PROPS(props, thisArg, config)\r\n{\r\n   // If a props is a function then invoke it with `this` being the Foundry app.\r\n   // If an object is returned set it as the props.\r\n   if (typeof props === 'function')\r\n   {\r\n      const result = props.call(thisArg);\r\n      if (typeof result === 'object')\r\n      {\r\n         return result;\r\n      }\r\n      else\r\n      {\r\n         throw new Error(`parseSvelteConfig - 'props' is a function that did not return an object for config:\\n${\r\n          JSON.stringify(config)}`);\r\n      }\r\n   }\r\n   else if (typeof props === 'object')\r\n   {\r\n      return props;\r\n   }\r\n   else if (props !== void 0)\r\n   {\r\n      throw new Error(\r\n       `parseSvelteConfig - 'props' is not a function or an object for config:\\n${JSON.stringify(config)}`);\r\n   }\r\n\r\n   return {};\r\n}\n\n/**\r\n * Wraps a callback in a debounced timeout.\r\n *\r\n * Delay execution of the callback function until the function has not been called for the given delay in milliseconds.\r\n *\r\n * @param {Function} callback - A function to execute once the debounced threshold has been passed.\r\n *\r\n * @param {number}   delay - An amount of time in milliseconds to delay.\r\n *\r\n * @return {Function} A wrapped function that can be called to debounce execution.\r\n */\r\nfunction debounce(callback, delay)\r\n{\r\n   let timeoutId;\r\n\r\n   return function(...args)\r\n   {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = setTimeout(() => { callback.apply(this, args); }, delay);\r\n   }\r\n}\n\n/**\r\n * Provides a method to determine if the passed in Svelte component has a getter accessor.\r\n *\r\n * @param {*}        object - An object.\r\n *\r\n * @param {string}   accessor - Accessor to test.\r\n *\r\n * @returns {boolean} Whether the component has the getter for accessor.\r\n */\r\nfunction hasGetter(object, accessor)\r\n{\r\n   if (object === null || object === void 0) { return false; }\r\n\r\n   // Check for instance accessor.\r\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\r\n   if (iDescriptor !== void 0 && iDescriptor.get !== void 0) { return true; }\r\n\r\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\r\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\r\n   {\r\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\r\n      if (descriptor !== void 0 && descriptor.get !== void 0) { return true; }\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Provides a method to determine if the passed in Svelte component has a getter & setter accessor.\r\n *\r\n * @param {*}        object - An object.\r\n *\r\n * @param {string}   accessor - Accessor to test.\r\n *\r\n * @returns {boolean} Whether the component has the getter and setter for accessor.\r\n */\r\nfunction hasAccessor(object, accessor)\r\n{\r\n   if (object === null || object === void 0) { return false; }\r\n\r\n   // Check for instance accessor.\r\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\r\n   if (iDescriptor !== void 0 && iDescriptor.get !== void 0 && iDescriptor.set !== void 0) { return true; }\r\n\r\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\r\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\r\n   {\r\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\r\n      if (descriptor !== void 0 && descriptor.get !== void 0 && descriptor.set !== void 0) { return true; }\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Provides a method to determine if the passed in Svelte component has a setter accessor.\r\n *\r\n * @param {*}        object - An object.\r\n *\r\n * @param {string}   accessor - Accessor to test.\r\n *\r\n * @returns {boolean} Whether the component has the setter for accessor.\r\n */\r\nfunction hasSetter(object, accessor)\r\n{\r\n   if (object === null || object === void 0) { return false; }\r\n\r\n   // Check for instance accessor.\r\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\r\n   if (iDescriptor !== void 0 && iDescriptor.set !== void 0) { return true; }\r\n\r\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\r\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\r\n   {\r\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\r\n      if (descriptor !== void 0 && descriptor.set !== void 0) { return true; }\r\n   }\r\n\r\n   return false;\r\n}\n\nfunction set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nfunction klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n\n/**\r\n * Provides common object manipulation utilities including depth traversal, obtaining accessors, safely setting values /\r\n * equality tests, and validation.\r\n */\r\n\r\nconst s_TAG_OBJECT = '[object Object]';\r\n\r\n/**\r\n * Recursively deep merges all source objects into the target object in place. Like `Object.assign` if you provide `{}`\r\n * as the target a copy is produced. If the target and source property are object literals they are merged.\r\n * Deleting keys is supported by specifying a property starting with `-=`.\r\n *\r\n * @param {object}      target - Target object.\r\n *\r\n * @param {...object}   sourceObj - One or more source objects.\r\n *\r\n * @returns {object}    Target object.\r\n */\r\nfunction deepMerge(target = {}, ...sourceObj)\r\n{\r\n   if (Object.prototype.toString.call(target) !== s_TAG_OBJECT)\r\n   {\r\n      throw new TypeError(`deepMerge error: 'target' is not an 'object'.`);\r\n   }\r\n\r\n   for (let cntr = 0; cntr < sourceObj.length; cntr++)\r\n   {\r\n      if (Object.prototype.toString.call(sourceObj[cntr]) !== s_TAG_OBJECT)\r\n      {\r\n         throw new TypeError(`deepMerge error: 'sourceObj[${cntr}]' is not an 'object'.`);\r\n      }\r\n   }\r\n\r\n   return _deepMerge(target, ...sourceObj);\r\n}\r\n\r\n/**\r\n * Tests for whether an object is iterable.\r\n *\r\n * @param {*} value - Any value.\r\n *\r\n * @returns {boolean} Whether object is iterable.\r\n */\r\nfunction isIterable(value)\r\n{\r\n   if (value === null || value === void 0 || typeof value !== 'object') { return false; }\r\n\r\n   return typeof value[Symbol.iterator] === 'function';\r\n}\r\n\r\n/**\r\n * Tests for whether an object is async iterable.\r\n *\r\n * @param {*} value - Any value.\r\n *\r\n * @returns {boolean} Whether value is async iterable.\r\n */\r\nfunction isIterableAsync(value)\r\n{\r\n   if (value === null || value === void 0 || typeof value !== 'object') { return false; }\r\n\r\n   return typeof value[Symbol.asyncIterator] === 'function';\r\n}\r\n\r\n/**\r\n * Tests for whether object is not null and a typeof object.\r\n *\r\n * @param {*} value - Any value.\r\n *\r\n * @returns {boolean} Is it an object.\r\n */\r\nfunction isObject(value)\r\n{\r\n   return value !== null && typeof value === 'object';\r\n}\r\n\r\n/**\r\n * Tests for whether the given value is a plain object.\r\n *\r\n * An object is plain if it is created by either: {}, new Object() or Object.create(null).\r\n *\r\n * @param {*} value - Any value\r\n *\r\n * @returns {boolean} Is it a plain object.\r\n */\r\nfunction isPlainObject(value)\r\n{\r\n   if (Object.prototype.toString.call(value) !== s_TAG_OBJECT) { return false; }\r\n\r\n   const prototype = Object.getPrototypeOf(value);\r\n   return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Provides a way to safely access an objects data / entries given an accessor string which describes the\r\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\r\n * to walk.\r\n *\r\n * @param {object}   data - An object to access entry data.\r\n *\r\n * @param {string}   accessor - A string describing the entries to access.\r\n *\r\n * @param {*}        defaultValue - (Optional) A default value to return if an entry for accessor is not found.\r\n *\r\n * @returns {object} The data object.\r\n */\r\nfunction safeAccess(data, accessor, defaultValue = void 0)\r\n{\r\n   if (typeof data !== 'object') { return defaultValue; }\r\n   if (typeof accessor !== 'string') { return defaultValue; }\r\n\r\n   const access = accessor.split('.');\r\n\r\n   // Walk through the given object by the accessor indexes.\r\n   for (let cntr = 0; cntr < access.length; cntr++)\r\n   {\r\n      // If the next level of object access is undefined or null then return the empty string.\r\n      if (typeof data[access[cntr]] === 'undefined' || data[access[cntr]] === null) { return defaultValue; }\r\n\r\n      data = data[access[cntr]];\r\n   }\r\n\r\n   return data;\r\n}\r\n\r\n/**\r\n * Provides a way to safely set an objects data / entries given an accessor string which describes the\r\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\r\n * to walk.\r\n *\r\n * @param {object}   data - An object to access entry data.\r\n *\r\n * @param {string}   accessor - A string describing the entries to access.\r\n *\r\n * @param {*}        value - A new value to set if an entry for accessor is found.\r\n *\r\n * @param {string}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\r\n *                                       'set-undefined', 'sub'.\r\n *\r\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects\r\n *                                          automatically.\r\n *\r\n * @returns {boolean} True if successful.\r\n */\r\nfunction safeSet(data, accessor, value, operation = 'set', createMissing = true)\r\n{\r\n   if (typeof data !== 'object') { throw new TypeError(`safeSet Error: 'data' is not an 'object'.`); }\r\n   if (typeof accessor !== 'string') { throw new TypeError(`safeSet Error: 'accessor' is not a 'string'.`); }\r\n\r\n   const access = accessor.split('.');\r\n\r\n   // Walk through the given object by the accessor indexes.\r\n   for (let cntr = 0; cntr < access.length; cntr++)\r\n   {\r\n      // If data is an array perform validation that the accessor is a positive integer otherwise quit.\r\n      if (Array.isArray(data))\r\n      {\r\n         const number = (+access[cntr]);\r\n\r\n         if (!Number.isInteger(number) || number < 0) { return false; }\r\n      }\r\n\r\n      if (cntr === access.length - 1)\r\n      {\r\n         switch (operation)\r\n         {\r\n            case 'add':\r\n               data[access[cntr]] += value;\r\n               break;\r\n\r\n            case 'div':\r\n               data[access[cntr]] /= value;\r\n               break;\r\n\r\n            case 'mult':\r\n               data[access[cntr]] *= value;\r\n               break;\r\n\r\n            case 'set':\r\n               data[access[cntr]] = value;\r\n               break;\r\n\r\n            case 'set-undefined':\r\n               if (typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = value; }\r\n               break;\r\n\r\n            case 'sub':\r\n               data[access[cntr]] -= value;\r\n               break;\r\n         }\r\n      }\r\n      else\r\n      {\r\n         // If createMissing is true and the next level of object access is undefined then create a new object entry.\r\n         if (createMissing && typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = {}; }\r\n\r\n         // Abort if the next level is null or not an object and containing a value.\r\n         if (data[access[cntr]] === null || typeof data[access[cntr]] !== 'object') { return false; }\r\n\r\n         data = data[access[cntr]];\r\n      }\r\n   }\r\n\r\n   return true;\r\n}\r\n\r\n/**\r\n * Internal implementation for `deepMerge`.\r\n *\r\n * @param {object}      target - Target object.\r\n *\r\n * @param {...object}   sourceObj - One or more source objects.\r\n *\r\n * @returns {object}    Target object.\r\n */\r\nfunction _deepMerge(target = {}, ...sourceObj)\r\n{\r\n   // Iterate and merge all source objects into target.\r\n   for (let cntr = 0; cntr < sourceObj.length; cntr++)\r\n   {\r\n      const obj = sourceObj[cntr];\r\n\r\n      for (const prop in obj)\r\n      {\r\n         if (Object.prototype.hasOwnProperty.call(obj, prop))\r\n         {\r\n            // Handle the special property starting with '-=' to delete keys.\r\n            if (prop.startsWith('-='))\r\n            {\r\n               delete target[prop.slice(2)];\r\n               continue;\r\n            }\r\n\r\n            // If target already has prop and both target[prop] and obj[prop] are object literals then merge them\r\n            // otherwise assign obj[prop] to target[prop].\r\n            target[prop] = Object.prototype.hasOwnProperty.call(target, prop) && target[prop]?.constructor === Object &&\r\n            obj[prop]?.constructor === Object ? _deepMerge({}, target[prop], obj[prop]) : obj[prop];\r\n         }\r\n      }\r\n   }\r\n\r\n   return target;\r\n}\n\n/**\r\n * Attempts to create a Foundry UUID from standard drop data. This may not work for all systems.\r\n *\r\n * @param {object}   data - Drop transfer data.\r\n *\r\n * @param {ParseDataTransferOptions}   opts - Optional parameters.\r\n *\r\n * @returns {string|undefined} Foundry UUID for drop data.\r\n */\r\nfunction getUUIDFromDataTransfer(data, { actor = true, compendium = true, world = true, types = void 0 } = {})\r\n{\r\n   if (typeof data !== 'object') { return void 0; }\r\n   if (Array.isArray(types) && !types.includes(data.type)) { return void 0; }\r\n\r\n   let uuid = void 0;\r\n\r\n   // TODO: v10 will change the `data.data._id` relationship possibly.\r\n   if (actor && world && data.actorId && data.type)\r\n   {\r\n      uuid = `Actor.${data.actorId}.${data.type}.${data.data._id}`;\r\n   }\r\n   else if (data.id)\r\n   {\r\n      if (compendium && typeof data.pack === 'string')\r\n      {\r\n         uuid = `Compendium.${data.pack}.${data.id}`;\r\n      }\r\n      else if (world)\r\n      {\r\n         uuid = `${data.type}.${data.id}`;\r\n      }\r\n   }\r\n\r\n   return uuid;\r\n}\n\nexport { debounce, deepMerge, getStackingContext, getUUIDFromDataTransfer, hasAccessor, hasGetter, hasSetter, hashCode, isApplicationShell, isHMRProxy, isIterable, isIterableAsync, isObject, isPlainObject, isSvelteComponent, klona, normalizeString, outroAndDestroy, parseSvelteConfig, safeAccess, safeSet, styleParsePixels, uuidv4 };\n//# sourceMappingURL=index.js.map\n","import { writable as writable$2, derived, get } from 'svelte/store';\nimport { noop, run_all, is_function } from 'svelte/internal';\nimport { uuidv4, isPlainObject, getUUIDFromDataTransfer, isObject, isIterable } from '@typhonjs-fvtt/runtime/svelte/util';\n\n/**\r\n * Provides the storage and sequencing of managed filters. Each filter added may be a bespoke function or a\r\n * {@link FilterData} object containing an `id`, `filter`, and `weight` attributes; `filter` is the only required\r\n * attribute.\r\n *\r\n * The `id` attribute can be anything that creates a unique ID for the filter; recommended strings or numbers. This\r\n * allows filters to be removed by ID easily.\r\n *\r\n * The `weight` attribute is a number between 0 and 1 inclusive that allows filters to be added in a\r\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted filter always runs\r\n * before a higher weighted filter. For speed and efficiency always set the heavier / more inclusive filter with a\r\n * lower weight; an example of this is a keyword / name that will filter out many entries making any further filtering\r\n * faster. If no weight is specified the default of '1' is assigned and it is appended to the end of the filters list.\r\n *\r\n * This class forms the public API which is accessible from the `.filters` getter in the main DynArrayReducer instance.\r\n * ```\r\n * const dynArray = new DynArrayReducer([...]);\r\n * dynArray.filters.add(...);\r\n * dynArray.filters.clear();\r\n * dynArray.filters.length;\r\n * dynArray.filters.remove(...);\r\n * dynArray.filters.removeBy(...);\r\n * dynArray.filters.removeById(...);\r\n * ```\r\n *\r\n * @template T\r\n */\r\nclass AdapterFilters\r\n{\r\n   #filtersAdapter;\r\n   #indexUpdate;\r\n   #mapUnsubscribe = new Map();\r\n\r\n   /**\r\n    * @param {Function} indexUpdate - update function for the indexer.\r\n    *\r\n    * @returns {[AdapterFilters<T>, {filters: FilterData<T>[]}]} Returns this and internal storage for filter adapters.\r\n    */\r\n   constructor(indexUpdate)\r\n   {\r\n      this.#indexUpdate = indexUpdate;\r\n\r\n      this.#filtersAdapter = { filters: [] };\r\n\r\n      Object.seal(this);\r\n\r\n      return [this, this.#filtersAdapter];\r\n   }\r\n\r\n   /**\r\n    * @returns {number} Returns the length of the\r\n    */\r\n   get length() { return this.#filtersAdapter.filters.length; }\r\n\r\n   /**\r\n    * Provides an iterator for filters.\r\n    *\r\n    * @returns {Generator<number|undefined, FilterData<T>, *>} Generator / iterator of filters.\r\n    * @yields {FilterData<T>}\r\n    */\r\n   *[Symbol.iterator]()\r\n   {\r\n      if (this.#filtersAdapter.filters.length === 0) { return; }\r\n\r\n      for (const entry of this.#filtersAdapter.filters)\r\n      {\r\n         yield { ...entry };\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {...(FilterFn<T>|FilterData<T>)}   filters -\r\n    */\r\n   add(...filters)\r\n   {\r\n      /**\r\n       * Tracks the number of filters added that have subscriber functionality.\r\n       *\r\n       * @type {number}\r\n       */\r\n      let subscribeCount = 0;\r\n\r\n      for (const filter of filters)\r\n      {\r\n         const filterType = typeof filter;\r\n\r\n         if (filterType !== 'function' && filterType !== 'object' || filter === null)\r\n         {\r\n            throw new TypeError(`DynArrayReducer error: 'filter' is not a function or object.`);\r\n         }\r\n\r\n         let data = void 0;\r\n         let subscribeFn = void 0;\r\n\r\n         switch (filterType)\r\n         {\r\n            case 'function':\r\n               data = {\r\n                  id: void 0,\r\n                  filter,\r\n                  weight: 1\r\n               };\r\n\r\n               subscribeFn = filter.subscribe;\r\n               break;\r\n\r\n            case 'object':\r\n               if (typeof filter.filter !== 'function')\r\n               {\r\n                  throw new TypeError(`DynArrayReducer error: 'filter' attribute is not a function.`);\r\n               }\r\n\r\n               if (filter.weight !== void 0 && typeof filter.weight !== 'number' ||\r\n                (filter.weight < 0 || filter.weight > 1))\r\n               {\r\n                  throw new TypeError(\r\n                   `DynArrayReducer error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\r\n               }\r\n\r\n               data = {\r\n                  id: filter.id !== void 0 ? filter.id : void 0,\r\n                  filter: filter.filter,\r\n                  weight: filter.weight || 1\r\n               };\r\n\r\n               subscribeFn = filter.filter.subscribe ?? filter.subscribe;\r\n               break;\r\n         }\r\n\r\n         // Find the index to insert where data.weight is less than existing values weight.\r\n         const index = this.#filtersAdapter.filters.findIndex((value) =>\r\n         {\r\n            return data.weight < value.weight;\r\n         });\r\n\r\n         // If an index was found insert at that location.\r\n         if (index >= 0)\r\n         {\r\n            this.#filtersAdapter.filters.splice(index, 0, data);\r\n         }\r\n         else // push to end of filters.\r\n         {\r\n            this.#filtersAdapter.filters.push(data);\r\n         }\r\n\r\n         if (typeof subscribeFn === 'function')\r\n         {\r\n            const unsubscribe = subscribeFn(this.#indexUpdate);\r\n\r\n            // Ensure that unsubscribe is a function.\r\n            if (typeof unsubscribe !== 'function')\r\n            {\r\n               throw new TypeError(\r\n                'DynArrayReducer error: Filter has subscribe function, but no unsubscribe function is returned.');\r\n            }\r\n\r\n            // Ensure that the same filter is not subscribed to multiple times.\r\n            if (this.#mapUnsubscribe.has(data.filter))\r\n            {\r\n               throw new Error(\r\n                'DynArrayReducer error: Filter added already has an unsubscribe function registered.');\r\n            }\r\n\r\n            this.#mapUnsubscribe.set(data.filter, unsubscribe);\r\n            subscribeCount++;\r\n         }\r\n      }\r\n\r\n      // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\r\n      // subscriber count is less than the amount of filters added then automatically trigger an index update manually.\r\n      if (subscribeCount < filters.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   clear()\r\n   {\r\n      this.#filtersAdapter.filters.length = 0;\r\n\r\n      // Unsubscribe from all filters with subscription support.\r\n      for (const unsubscribe of this.#mapUnsubscribe.values())\r\n      {\r\n         unsubscribe();\r\n      }\r\n\r\n      this.#mapUnsubscribe.clear();\r\n\r\n      this.#indexUpdate();\r\n   }\r\n\r\n   /**\r\n    * @param {...(FilterFn<T>|FilterData<T>)}   filters -\r\n    */\r\n   remove(...filters)\r\n   {\r\n      const length = this.#filtersAdapter.filters.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      for (const data of filters)\r\n      {\r\n         // Handle the case that the filter may either be a function or a filter entry / object.\r\n         const actualFilter = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\r\n          data.filter : void 0;\r\n\r\n         if (!actualFilter) { continue; }\r\n\r\n         for (let cntr = this.#filtersAdapter.filters.length; --cntr >= 0;)\r\n         {\r\n            if (this.#filtersAdapter.filters[cntr].filter === actualFilter)\r\n            {\r\n               this.#filtersAdapter.filters.splice(cntr, 1);\r\n\r\n               // Invoke any unsubscribe function for given filter then remove from tracking.\r\n               let unsubscribe = void 0;\r\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualFilter)) === 'function')\r\n               {\r\n                  unsubscribe();\r\n                  this.#mapUnsubscribe.delete(actualFilter);\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      // Update the index a filter was removed.\r\n      if (length !== this.#filtersAdapter.filters.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   /**\r\n    * Remove filters by the provided callback. The callback takes 3 parameters: `id`, `filter`, and `weight`.\r\n    * Any truthy value returned will remove that filter.\r\n    *\r\n    * @param {function(*, FilterFn<T>, number): boolean} callback - Callback function to evaluate each filter entry.\r\n    */\r\n   removeBy(callback)\r\n   {\r\n      const length = this.#filtersAdapter.filters.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      if (typeof callback !== 'function')\r\n      {\r\n         throw new TypeError(`DynArrayReducer error: 'callback' is not a function.`);\r\n      }\r\n\r\n      this.#filtersAdapter.filters = this.#filtersAdapter.filters.filter((data) =>\r\n      {\r\n         const remove = callback.call(callback, { ...data });\r\n\r\n         if (remove)\r\n         {\r\n            let unsubscribe;\r\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function')\r\n            {\r\n               unsubscribe();\r\n               this.#mapUnsubscribe.delete(data.filter);\r\n            }\r\n         }\r\n\r\n         // Reverse remove boolean to properly filter / remove this filter.\r\n         return !remove;\r\n      });\r\n\r\n      if (length !== this.#filtersAdapter.filters.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   removeById(...ids)\r\n   {\r\n      const length = this.#filtersAdapter.filters.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      this.#filtersAdapter.filters = this.#filtersAdapter.filters.filter((data) =>\r\n      {\r\n         let remove = false;\r\n\r\n         for (const id of ids) { remove |= data.id === id; }\r\n\r\n         // If not keeping invoke any unsubscribe function for given filter then remove from tracking.\r\n         if (remove)\r\n         {\r\n            let unsubscribe;\r\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function')\r\n            {\r\n               unsubscribe();\r\n               this.#mapUnsubscribe.delete(data.filter);\r\n            }\r\n         }\r\n\r\n         return !remove; // Swap here to actually remove the item via array filter method.\r\n      });\r\n\r\n      if (length !== this.#filtersAdapter.filters.length) { this.#indexUpdate(); }\r\n   }\r\n}\n\n/**\r\n * @template T\r\n */\r\nclass AdapterSort\r\n{\r\n   #sortAdapter;\r\n   #indexUpdate;\r\n   #unsubscribe;\r\n\r\n   /**\r\n    * @param {Function} indexUpdate - Function to update indexer.\r\n    *\r\n    * @returns {[AdapterSort<T>, {compareFn: CompareFn<T>}]} This and the internal sort adapter data.\r\n    */\r\n   constructor(indexUpdate)\r\n   {\r\n      this.#indexUpdate = indexUpdate;\r\n\r\n      this.#sortAdapter = { compareFn: null };\r\n\r\n      Object.seal(this);\r\n\r\n      return [this, this.#sortAdapter];\r\n   }\r\n\r\n   /**\r\n    * @param {CompareFn<T>|SortData<T>}  data -\r\n    *\r\n    * A callback function that compares two values. Return > 0 to sort b before a;\r\n    * < 0 to sort a before b; or 0 to keep original order of a & b.\r\n    *\r\n    * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#parameters\r\n    */\r\n   set(data)\r\n   {\r\n      if (typeof this.#unsubscribe === 'function')\r\n      {\r\n         this.#unsubscribe();\r\n         this.#unsubscribe = void 0;\r\n      }\r\n\r\n      let compareFn = void 0;\r\n      let subscribeFn = void 0;\r\n\r\n      switch (typeof data)\r\n      {\r\n         case 'function':\r\n            compareFn = data;\r\n            subscribeFn = data.subscribe;\r\n            break;\r\n\r\n         case 'object':\r\n            // Early out if data is null / noop.\r\n            if (data === null) { break; }\r\n\r\n            if (typeof data.compare !== 'function')\r\n            {\r\n               throw new TypeError(`DynArrayReducer error: 'compare' attribute is not a function.`);\r\n            }\r\n\r\n            compareFn = data.compare;\r\n            subscribeFn = data.compare.subscribe ?? data.subscribe;\r\n            break;\r\n      }\r\n\r\n      if (typeof compareFn === 'function')\r\n      {\r\n         this.#sortAdapter.compareFn = compareFn;\r\n      }\r\n      else\r\n      {\r\n         const oldCompareFn = this.#sortAdapter.compareFn;\r\n         this.#sortAdapter.compareFn = null;\r\n\r\n         // Update index if the old compare function exists.\r\n         if (typeof oldCompareFn === 'function') { this.#indexUpdate(); }\r\n         return;\r\n      }\r\n\r\n      if (typeof subscribeFn === 'function')\r\n      {\r\n         this.#unsubscribe = subscribeFn(this.#indexUpdate);\r\n\r\n         // Ensure that unsubscribe is a function.\r\n         if (typeof this.#unsubscribe !== 'function')\r\n         {\r\n            throw new Error(\r\n             `DynArrayReducer error: sort has 'subscribe' function, but no 'unsubscribe' function is returned.`);\r\n         }\r\n      }\r\n      else\r\n      {\r\n         // A sort function with subscriber functionality are assumed to immediately invoke the `subscribe` callback.\r\n         // Only manually update the index if there is no subscriber functionality.\r\n         this.#indexUpdate();\r\n      }\r\n   }\r\n\r\n   reset()\r\n   {\r\n      const oldCompareFn = this.#sortAdapter.compareFn;\r\n\r\n      this.#sortAdapter.compareFn = null;\r\n\r\n      if (typeof this.#unsubscribe === 'function')\r\n      {\r\n         this.#unsubscribe();\r\n         this.#unsubscribe = void 0;\r\n      }\r\n\r\n      // Only update index if an old compare function is set.\r\n      if (typeof oldCompareFn === 'function') { this.#indexUpdate(); }\r\n   }\r\n}\n\nclass Indexer\r\n{\r\n   constructor(host, hostItems, hostUpdate)\r\n   {\r\n      this.hostItems = hostItems;\r\n      this.hostUpdate = hostUpdate;\r\n\r\n      const indexAdapter = { index: null, hash: null };\r\n\r\n      const publicAPI = {\r\n         update: this.update.bind(this),\r\n\r\n         /**\r\n          * Provides an iterator over the index array.\r\n          *\r\n          * @returns {Generator<any, void, *>} Iterator.\r\n          * @yields\r\n          */\r\n         [Symbol.iterator]: function *()\r\n         {\r\n            if (!indexAdapter.index) { return; }\r\n\r\n            const reversed = host.reversed;\r\n            const length = indexAdapter.index.length;\r\n\r\n            if (reversed)\r\n            {\r\n               for (let cntr = length; --cntr >= 0;) { yield indexAdapter.index[cntr]; }\r\n            }\r\n            else\r\n            {\r\n               for (let cntr = 0; cntr < length; cntr++) { yield indexAdapter.index[cntr]; }\r\n            }\r\n         }\r\n      };\r\n\r\n      // Define a getter on the public API to get the length / count of index array.\r\n      Object.defineProperties(publicAPI, {\r\n         hash: { get: () => indexAdapter.hash },\r\n         isActive: { get: () => this.isActive() },\r\n         length: { get: () => Array.isArray(indexAdapter.index) ? indexAdapter.index.length : 0 }\r\n      });\r\n\r\n      Object.freeze(publicAPI);\r\n\r\n      indexAdapter.publicAPI = publicAPI;\r\n\r\n      this.indexAdapter = indexAdapter;\r\n\r\n      return [this, indexAdapter];\r\n   }\r\n\r\n   /**\r\n    * Calculates a new hash value for the new index array if any. If the new index array is null then the hash value\r\n    * is set to null. Set calculated new hash value to the index adapter hash value.\r\n    *\r\n    * After hash generation compare old and new hash values and perform an update if they are different. If they are\r\n    * equal check for array equality between the old and new index array and perform an update if they are not equal.\r\n    *\r\n    * @param {number[]}    oldIndex - Old index array.\r\n    *\r\n    * @param {number|null} oldHash - Old index hash value.\r\n    *\r\n    * @param {boolean}     [force=false] - When true forces an update to subscribers.\r\n    */\r\n   calcHashUpdate(oldIndex, oldHash, force = false)\r\n   {\r\n      // Use force if a boolean otherwise default to false.\r\n      const actualForce = typeof force === 'boolean' ? force : /* c8 ignore next */ false;\r\n\r\n      let newHash = null;\r\n      const newIndex = this.indexAdapter.index;\r\n\r\n      if (newIndex)\r\n      {\r\n         for (let cntr = newIndex.length; --cntr >= 0;)\r\n         {\r\n            newHash ^= newIndex[cntr] + 0x9e3779b9 + (newHash << 6) + (newHash >> 2);\r\n         }\r\n      }\r\n\r\n      this.indexAdapter.hash = newHash;\r\n\r\n      if (actualForce || (oldHash === newHash ? !s_ARRAY_EQUALS(oldIndex, newIndex) : true)) { this.hostUpdate(); }\r\n   }\r\n\r\n   initAdapters(filtersAdapter, sortAdapter)\r\n   {\r\n      this.filtersAdapter = filtersAdapter;\r\n      this.sortAdapter = sortAdapter;\r\n\r\n      this.sortFn = (a, b) =>\r\n      {\r\n         return this.sortAdapter.compareFn(this.hostItems[a], this.hostItems[b]);\r\n      };\r\n   }\r\n\r\n   isActive()\r\n   {\r\n      return this.filtersAdapter.filters.length > 0 || this.sortAdapter.compareFn !== null;\r\n   }\r\n\r\n   /**\r\n    * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\r\n    *\r\n    * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\r\n    * but the maintenance factor is not worth the extra complication.\r\n    *\r\n    * @returns {number[]} New filtered index array.\r\n    */\r\n   reduceImpl()\r\n   {\r\n      const data = [];\r\n\r\n      const filters = this.filtersAdapter.filters;\r\n\r\n      let include = true;\r\n\r\n      for (let cntr = 0, length = this.hostItems.length; cntr < length; cntr++)\r\n      {\r\n         include = true;\r\n\r\n         for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++)\r\n         {\r\n            if (!filters[filCntr].filter(this.hostItems[cntr]))\r\n            {\r\n               include = false;\r\n               break;\r\n            }\r\n         }\r\n\r\n         if (include) { data.push(cntr); }\r\n      }\r\n\r\n      return data;\r\n   }\r\n\r\n   /**\r\n    * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\r\n    * pass in true to force an update to subscribers.\r\n    *\r\n    * @param {boolean}  [force=false] - When true forces an update to subscribers.\r\n    */\r\n   update(force = false)\r\n   {\r\n      const oldIndex = this.indexAdapter.index;\r\n      const oldHash = this.indexAdapter.hash;\r\n\r\n      // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\r\n      if ((this.filtersAdapter.filters.length === 0 && !this.sortAdapter.compareFn) ||\r\n       (this.indexAdapter.index && this.hostItems.length !== this.indexAdapter.index.length))\r\n      {\r\n         this.indexAdapter.index = null;\r\n      }\r\n\r\n      // If there are filters build new index.\r\n      if (this.filtersAdapter.filters.length > 0) { this.indexAdapter.index = this.reduceImpl(); }\r\n\r\n      if (this.sortAdapter.compareFn)\r\n      {\r\n         // If there is no index then create one with keys matching host item length.\r\n         if (!this.indexAdapter.index) { this.indexAdapter.index = [...Array(this.hostItems.length).keys()]; }\r\n\r\n         this.indexAdapter.index.sort(this.sortFn);\r\n      }\r\n\r\n      this.calcHashUpdate(oldIndex, oldHash, force);\r\n   }\r\n}\r\n\r\n/**\r\n * Checks for array equality between two arrays of numbers.\r\n *\r\n * @param {number[]} a - Array A\r\n *\r\n * @param {number[]} b - Array B\r\n *\r\n * @returns {boolean} Arrays equal\r\n */\r\nfunction s_ARRAY_EQUALS(a, b)\r\n{\r\n   if (a === b) { return true; }\r\n   if (a === null || b === null) { return false; }\r\n\r\n   /* c8 ignore next */\r\n   if (a.length !== b.length) { return false; }\r\n\r\n   for (let cntr = a.length; --cntr >= 0;)\r\n   {\r\n      /* c8 ignore next */\r\n      if (a[cntr] !== b[cntr]) { return false; }\r\n   }\r\n\r\n   return true;\r\n}\n\n/**\r\n * Provides a managed array with non-destructive reducing / filtering / sorting capabilities with subscription /\r\n * Svelte store support.\r\n *\r\n * @template T\r\n */\r\nclass DynArrayReducer\r\n{\r\n   #items;\r\n\r\n   #index;\r\n   #indexAdapter;\r\n\r\n   /**\r\n    * @type {AdapterFilters<T>}\r\n    */\r\n   #filters;\r\n\r\n   /**\r\n    * @type {{filters: FilterFn<T>[]}}\r\n    */\r\n   #filtersAdapter;\r\n\r\n   /**\r\n    * @type {boolean}\r\n    */\r\n   #reversed = false;\r\n\r\n   /**\r\n    * @type {AdapterSort<T>}\r\n    */\r\n   #sort;\r\n\r\n   /**\r\n    * @type {{compareFn: CompareFn<T>}}\r\n    */\r\n   #sortAdapter;\r\n\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * Initializes DynArrayReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\r\n    * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\r\n    *\r\n    * @param {Iterable<T>|DynData<T>}   [data=[]] - Data iterable to store if array or copy otherwise.\r\n    */\r\n   constructor(data = [])\r\n   {\r\n      let dataIterable = void 0;\r\n      let filters = void 0;\r\n      let sort = void 0;\r\n\r\n      // Potentially working with DynData.\r\n      if (!DynArrayReducer.#isIterable(data) && data !== null && typeof data === 'object')\r\n      {\r\n         if (!DynArrayReducer.#isIterable(data.data))\r\n         {\r\n            throw new TypeError(`DynArrayReducer error (DynData): 'data' attribute is not iterable.`);\r\n         }\r\n\r\n         dataIterable = data.data;\r\n\r\n         if (data.filters !== void 0)\r\n         {\r\n            if (DynArrayReducer.#isIterable(data.filters))\r\n            {\r\n               filters = data.filters;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(`DynArrayReducer error (DynData): 'filters' attribute is not iterable.`);\r\n            }\r\n         }\r\n\r\n         if (data.sort !== void 0)\r\n         {\r\n            if (typeof data.sort === 'function')\r\n            {\r\n               sort = data.sort;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(`DynArrayReducer error (DynData): 'sort' attribute is not a function.`);\r\n            }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         if (!DynArrayReducer.#isIterable(data)) { throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`); }\r\n\r\n         dataIterable = data;\r\n      }\r\n\r\n      // In the case of the main data being an array directly use the array otherwise create a copy.\r\n      this.#items = Array.isArray(dataIterable) ? dataIterable : [...dataIterable];\r\n\r\n      [this.#index, this.#indexAdapter] = new Indexer(this, this.#items, this.#notify.bind(this));\r\n\r\n      [this.#filters, this.#filtersAdapter] = new AdapterFilters(this.#indexAdapter.publicAPI.update);\r\n      [this.#sort, this.#sortAdapter] = new AdapterSort(this.#indexAdapter.publicAPI.update);\r\n\r\n      this.#index.initAdapters(this.#filtersAdapter, this.#sortAdapter);\r\n\r\n      // Add any filters and sort function defined by DynData.\r\n      if (filters) { this.filters.add(...filters); }\r\n      if (sort) { this.sort.set(sort); }\r\n   }\r\n\r\n   /**\r\n    * Provides a utility method to determine if the given data is iterable / implements iterator protocol.\r\n    *\r\n    * @param {*}  data - Data to verify as iterable.\r\n    *\r\n    * @returns {boolean} Is data iterable.\r\n    */\r\n   static #isIterable(data)\r\n   {\r\n      return data !== null && data !== void 0 && typeof data === 'object' && typeof data[Symbol.iterator] === 'function';\r\n   }\r\n\r\n   /**\r\n    * Returns the internal data of this instance. Be careful!\r\n    *\r\n    * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\r\n    * performed to the data externally do invoke {@link index.update} with `true` to recalculate the index and notify\r\n    * all subscribers.\r\n    *\r\n    * @returns {T[]} The internal data.\r\n    */\r\n   get data() { return this.#items; }\r\n\r\n   /**\r\n    * @returns {AdapterFilters<T>} The filters adapter.\r\n    */\r\n   get filters() { return this.#filters; }\r\n\r\n   /**\r\n    * Returns the Indexer public API.\r\n    *\r\n    * @returns {IndexerAPI & Iterable<number>} Indexer API - is also iterable.\r\n    */\r\n   get index() { return this.#indexAdapter.publicAPI; }\r\n\r\n   /**\r\n    * Gets the main data / items length.\r\n    *\r\n    * @returns {number} Main data / items length.\r\n    */\r\n   get length() { return this.#items.length; }\r\n\r\n   /**\r\n    * Gets current reversed state.\r\n    *\r\n    * @returns {boolean} Reversed state.\r\n    */\r\n   get reversed() { return this.#reversed; }\r\n\r\n   /**\r\n    * @returns {AdapterSort<T>} The sort adapter.\r\n    */\r\n   get sort() { return this.#sort; }\r\n\r\n   /**\r\n    * Sets reversed state and notifies subscribers.\r\n    *\r\n    * @param {boolean} reversed - New reversed state.\r\n    */\r\n   set reversed(reversed)\r\n   {\r\n      if (typeof reversed !== 'boolean')\r\n      {\r\n         throw new TypeError(`DynArrayReducer.reversed error: 'reversed' is not a boolean.`);\r\n      }\r\n\r\n      this.#reversed = reversed;\r\n\r\n      // Recalculate index and force an update to any subscribers.\r\n      this.index.update(true);\r\n   }\r\n\r\n   /**\r\n    * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\r\n    * `replace` is set to true.\r\n    *\r\n    * @param {T[] | Iterable<T>} data - New data to set to internal data.\r\n    *\r\n    * @param {boolean} [replace=false] - New data to set to internal data.\r\n    */\r\n   setData(data, replace = false)\r\n   {\r\n      if (!DynArrayReducer.#isIterable(data))\r\n      {\r\n         throw new TypeError(`DynArrayReducer.setData error: 'data' is not iterable.`);\r\n      }\r\n\r\n      if (typeof replace !== 'boolean')\r\n      {\r\n         throw new TypeError(`DynArrayReducer.setData error: 'replace' is not a boolean.`);\r\n      }\r\n\r\n      // Replace internal data with new array or create an array from an iterable.\r\n      if (replace)\r\n      {\r\n         this.#items = Array.isArray(data) ? data : [...data];\r\n      }\r\n      else\r\n      {\r\n         // Remove all entries in internal data. This will not replace any initially set array.\r\n         this.#items.length = 0;\r\n\r\n         // Add all new data.\r\n         this.#items.push(...data);\r\n      }\r\n\r\n      // Recalculate index and force an update to any subscribers.\r\n      this.index.update(true);\r\n   }\r\n\r\n   /**\r\n    *\r\n    * @param {function(DynArrayReducer<T>): void} handler - Callback function that is invoked on update / changes.\r\n    *                                                       Receives `this` reference.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(this);                     // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    *\r\n    */\r\n   #notify()\r\n   {\r\n      // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\r\n      // support until 2023. IE not doing this will require several extra method calls otherwise.\r\n      const subscriptions = this.#subscriptions;\r\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this); }\r\n   }\r\n\r\n   /**\r\n    * Provides an iterator for data stored in DynArrayReducer.\r\n    *\r\n    * @returns {Generator<*, T, *>} Generator / iterator of all data.\r\n    * @yields {T}\r\n    */\r\n   *[Symbol.iterator]()\r\n   {\r\n      const items = this.#items;\r\n\r\n      if (items.length === 0) { return; }\r\n\r\n      if (this.#index.isActive())\r\n      {\r\n         for (const entry of this.index) { yield items[entry]; }\r\n      }\r\n      else\r\n      {\r\n         if (this.reversed)\r\n         {\r\n            for (let cntr = items.length; --cntr >= 0;) { yield items[cntr]; }\r\n         }\r\n         else\r\n         {\r\n            for (let cntr = 0; cntr < items.length; cntr++) { yield items[cntr]; }\r\n         }\r\n      }\r\n   }\r\n}\n\n/**\r\n * Provides a basic test for a given variable to test if it has the shape of a readable store by having a `subscribe`\r\n * function.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nfunction isReadableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\r\n * function and an `update` function.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nfunction isUpdatableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function' && typeof store.update === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\r\n * `set`, and `update` functions.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe` & `set` functions.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nfunction isWritableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function' && typeof store.set === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Subscribes to the given store with the update function provided and ignores the first automatic\r\n * update. All future updates are dispatched to the update function.\r\n *\r\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\r\n *  Store to subscribe to...\r\n *\r\n * @param {import('svelte/store').Updater} update - function to receive future updates.\r\n *\r\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\r\n */\r\nfunction subscribeIgnoreFirst(store, update)\r\n{\r\n   let firedFirst = false;\r\n\r\n   return store.subscribe((value) => {\r\n      if (!firedFirst)\r\n      {\r\n         firedFirst = true;\r\n      }\r\n      else {\r\n         update(value);\r\n      }\r\n   })\r\n}\r\n\r\n/**\r\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\r\n * subscription. All future updates are dispatched to the update function.\r\n *\r\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\r\n *  Store to subscribe to...\r\n *\r\n * @param {import('svelte/store').Updater} first - Function to receive first update.\r\n *\r\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\r\n *\r\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\r\n */\r\nfunction subscribeFirstRest(store, first, update)\r\n{\r\n   let firedFirst = false;\r\n\r\n   return store.subscribe((value) => {\r\n      if (!firedFirst)\r\n      {\r\n         firedFirst = true;\r\n         first(value);\r\n      }\r\n      else {\r\n         update(value);\r\n      }\r\n   })\r\n}\n\n// src/generator.ts\nfunction isSimpleDeriver(deriver) {\n  return deriver.length < 2;\n}\nfunction generator(storage) {\n  function readable(key, value, start) {\n    return {\n      subscribe: writable(key, value, start).subscribe\n    };\n  }\n  function writable(key, value, start = noop) {\n    function wrap_start(ogSet) {\n      return start(function wrap_set(new_value) {\n        if (storage) {\n          storage.setItem(key, JSON.stringify(new_value));\n        }\n        return ogSet(new_value);\n      });\n    }\n    if (storage) {\n      const storageValue = storage.getItem(key);\n      try {\n        if (storageValue) {\n          value = JSON.parse(storageValue);\n        }\n      } catch (err) {\n      }\n      storage.setItem(key, JSON.stringify(value));\n    }\n    const ogStore = writable$2(value, start ? wrap_start : void 0);\n    function set(new_value) {\n      if (storage) {\n        storage.setItem(key, JSON.stringify(new_value));\n      }\n      ogStore.set(new_value);\n    }\n    function update(fn) {\n      set(fn(get(ogStore)));\n    }\n    function subscribe(run, invalidate = noop) {\n      return ogStore.subscribe(run, invalidate);\n    }\n    return {set, update, subscribe};\n  }\n  function derived(key, stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single ? [stores] : stores;\n    if (storage && storage.getItem(key)) {\n      try {\n        initial_value = JSON.parse(storage.getItem(key));\n      } catch (err) {\n      }\n    }\n    return readable(key, initial_value, (set) => {\n      let inited = false;\n      const values = [];\n      let pending = 0;\n      let cleanup = noop;\n      const sync = () => {\n        if (pending) {\n          return;\n        }\n        cleanup();\n        const input = single ? values[0] : values;\n        if (isSimpleDeriver(fn)) {\n          set(fn(input));\n        } else {\n          const result = fn(input, set);\n          cleanup = is_function(result) ? result : noop;\n        }\n      };\n      const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n        values[i] = value;\n        pending &= ~(1 << i);\n        if (inited) {\n          sync();\n        }\n      }, () => {\n        pending |= 1 << i;\n      }));\n      inited = true;\n      sync();\n      return function stop() {\n        run_all(unsubscribers);\n        cleanup();\n      };\n    });\n  }\n  return {\n    readable,\n    writable,\n    derived,\n    get: get\n  };\n}\n\n// src/local.ts\nvar storage$1 = typeof window !== \"undefined\" ? window.localStorage : void 0;\nvar g$1 = generator(storage$1);\nvar writable$1 = g$1.writable;\n\n/**\r\n * @typedef {import('svelte/store').Writable} LSStore - The backing Svelte store; a writable w/ get method attached.\r\n */\r\n\r\nclass LocalStorage\r\n{\r\n   /**\r\n    * @type {Map<string, LSStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Creates a new LSStore for the given key.\r\n    *\r\n    * @param {string}   key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {LSStore} The new LSStore.\r\n    */\r\n   static #createStore(key, defaultValue = void 0)\r\n   {\r\n      try\r\n      {\r\n         const value = localStorage.getItem(key);\r\n         if (value !== null) { defaultValue = value === 'undefined' ? void 0 : JSON.parse(value); }\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      return writable$1(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Gets a store from the LSStore Map or creates a new store for the key and a given default value.\r\n    *\r\n    * @param {string}               key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {LSStore} The store for the given key.\r\n    */\r\n   #getStore(key, defaultValue = void 0)\r\n   {\r\n      let store = this.#stores.get(key);\r\n      if (store === void 0)\r\n      {\r\n         store = LocalStorage.#createStore(key, defaultValue);\r\n         this.#stores.set(key, store);\r\n      }\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Get value from the localStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {*} Value from session storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = localStorage.getItem(key);\r\n\r\n      if (storageValue !== null)\r\n      {\r\n         try\r\n         {\r\n            value = storageValue === 'undefined' ? void 0 : JSON.parse(storageValue);\r\n         } catch (err)\r\n         {\r\n            value = defaultValue;\r\n         }\r\n      }\r\n      else if (defaultValue !== void 0)\r\n      {\r\n         try\r\n         {\r\n            const newValue = JSON.stringify(defaultValue);\r\n\r\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\r\n            localStorage.setItem(key, newValue === 'undefined' ? void 0 : newValue);\r\n         }\r\n         catch (err) { /* */ }\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {LSStore} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return this.#getStore(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in localStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = this.#getStore(key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in session storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = this.#getStore(key, defaultValue);\r\n\r\n      let currentValue = false;\r\n\r\n      try\r\n      {\r\n         currentValue = !!JSON.parse(localStorage.getItem(key));\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\n\n// src/session.ts\nvar storage = typeof window !== \"undefined\" ? window.sessionStorage : void 0;\nvar g = generator(storage);\nvar writable = g.writable;\n\n/**\r\n * @typedef {import('svelte/store').Writable} SSStore - The backing Svelte store; a writable w/ get method attached.\r\n */\r\n\r\nclass SessionStorage\r\n{\r\n   /**\r\n    * @type {Map<string, SSStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Creates a new SSStore for the given key.\r\n    *\r\n    * @param {string}   key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {LSStore} The new LSStore.\r\n    */\r\n   static #createStore(key, defaultValue = void 0)\r\n   {\r\n      try\r\n      {\r\n         const value = sessionStorage.getItem(key);\r\n         if (value !== null) { defaultValue = value === 'undefined' ? void 0 : JSON.parse(value); }\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      return writable(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Gets a store from the SSStore Map or creates a new store for the key and a given default value.\r\n    *\r\n    * @param {string}               key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {LSStore} The store for the given key.\r\n    */\r\n   #getStore(key, defaultValue = void 0)\r\n   {\r\n      let store = this.#stores.get(key);\r\n      if (store === void 0)\r\n      {\r\n         store = SessionStorage.#createStore(key, defaultValue);\r\n         this.#stores.set(key, store);\r\n      }\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Get value from the sessionStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {*} Value from session storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = sessionStorage.getItem(key);\r\n\r\n      if (storageValue !== null)\r\n      {\r\n         try\r\n         {\r\n            value = storageValue === 'undefined' ? void 0 : JSON.parse(storageValue);\r\n         } catch (err)\r\n         {\r\n            value = defaultValue;\r\n         }\r\n      }\r\n      else if (defaultValue !== void 0)\r\n      {\r\n         try\r\n         {\r\n            const newValue = JSON.stringify(defaultValue);\r\n\r\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\r\n            sessionStorage.setItem(key, newValue === 'undefined' ? void 0 : newValue);\r\n         }\r\n         catch (err) { /* */ }\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {LSStore} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return this.#getStore(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in sessionStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = this.#getStore(key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in session storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = this.#getStore(key, defaultValue);\r\n\r\n      let currentValue = false;\r\n\r\n      try\r\n      {\r\n         currentValue = !!JSON.parse(sessionStorage.getItem(key));\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\n\n/**\n * @external Store\n * @see [Svelte stores](https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values-store-contract)\n */\n\n/**\n * Create a store similar to [Svelte's `derived`](https://svelte.dev/docs#run-time-svelte-store-writable),\n * but which has its own `set` and `update` methods and can send values back to the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#default-export-writablederived)\n * \n * @param {Store|Store[]} origins One or more stores to derive from. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 1st parameter.\n * @param {!Function} derive The callback to determine the derived value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 2nd parameter.\n * @param {!Function|{withOld: !Function}} reflect Called when the\n * derived store gets a new value via its `set` or `update` methods, and determines new values for\n * the origin stores. [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#new-parameter-reflect)\n * @param [initial] The new store's initial value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 3rd parameter.\n * \n * @returns {Store} A writable store.\n */\nfunction writableDerived(origins, derive, reflect, initial) {\n\tvar childDerivedSetter, originValues, blockNextDerive = false;\n\tvar reflectOldValues = \"withOld\" in reflect;\n\tvar wrappedDerive = (got, set) => {\n\t\tchildDerivedSetter = set;\n\t\tif (reflectOldValues) {\n\t\t\toriginValues = got;\n\t\t}\n\t\tif (!blockNextDerive) {\n\t\t\tlet returned = derive(got, set);\n\t\t\tif (derive.length < 2) {\n\t\t\t\tset(returned);\n\t\t\t} else {\n\t\t\t\treturn returned;\n\t\t\t}\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tvar childDerived = derived(origins, wrappedDerive, initial);\n\t\n\tvar singleOrigin = !Array.isArray(origins);\n\tvar sendUpstream = (setWith) => {\n\t\tif (singleOrigin) {\n\t\t\tblockNextDerive = true;\n\t\t\torigins.set(setWith);\n\t\t} else {\n\t\t\tsetWith.forEach( (value, i) => {\n\t\t\t\tblockNextDerive = true;\n\t\t\t\torigins[i].set(value);\n\t\t\t} );\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tif (reflectOldValues) {\n\t\treflect = reflect.withOld;\n\t}\n\tvar reflectIsAsync = reflect.length >= (reflectOldValues ? 3 : 2);\n\tvar cleanup = null;\n\tfunction doReflect(reflecting) {\n\t\tif (cleanup) {\n\t\t\tcleanup();\n\t\t\tcleanup = null;\n\t\t}\n\n\t\tif (reflectOldValues) {\n\t\t\tvar returned = reflect(reflecting, originValues, sendUpstream);\n\t\t} else {\n\t\t\tvar returned = reflect(reflecting, sendUpstream);\n\t\t}\n\t\tif (reflectIsAsync) {\n\t\t\tif (typeof returned == \"function\") {\n\t\t\t\tcleanup = returned;\n\t\t\t}\n\t\t} else {\n\t\t\tsendUpstream(returned);\n\t\t}\n\t}\n\t\n\tvar tryingSet = false;\n\tfunction update(fn) {\n\t\tvar isUpdated, mutatedBySubscriptions, oldValue, newValue;\n\t\tif (tryingSet) {\n\t\t\tnewValue = fn( get(childDerived) );\n\t\t\tchildDerivedSetter(newValue);\n\t\t\treturn;\n\t\t}\n\t\tvar unsubscribe = childDerived.subscribe( (value) => {\n\t\t\tif (!tryingSet) {\n\t\t\t\toldValue = value;\n\t\t\t} else if (!isUpdated) {\n\t\t\t\tisUpdated = true;\n\t\t\t} else {\n\t\t\t\tmutatedBySubscriptions = true;\n\t\t\t}\n\t\t} );\n\t\tnewValue = fn(oldValue);\n\t\ttryingSet = true;\n\t\tchildDerivedSetter(newValue);\n\t\tunsubscribe();\n\t\ttryingSet = false;\n\t\tif (mutatedBySubscriptions) {\n\t\t\tnewValue = get(childDerived);\n\t\t}\n\t\tif (isUpdated) {\n\t\t\tdoReflect(newValue);\n\t\t}\n\t}\n\treturn {\n\t\tsubscribe: childDerived.subscribe,\n\t\tset(value) { update( () => value ); },\n\t\tupdate,\n\t};\n}\n\n/**\n * Create a store for a property value in an object contained in another store.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#named-export-propertystore)\n * \n * @param {Store} origin The store containing the object to get/set from.\n * @param {string|number|symbol|Array<string|number|symbol>} propName The property to get/set, or a path of\n * properties in nested objects.\n *\n * @returns {Store} A writable store.\n */\nfunction propertyStore(origin, propName) {\n\tif (!Array.isArray(propName)) {\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(object) => object[propName],\n\t\t\t{ withOld(reflecting, object) {\n\t\t\t\tobject[propName] = reflecting;\n\t\t\t\treturn object;\n\t\t\t} }\n\t\t);\n\t} else {\n\t\tlet props = propName.concat();\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(value) => {\n\t\t\t\tfor (let i = 0; i < props.length; ++i) {\n\t\t\t\t\tvalue = value[ props[i] ];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t{ withOld(reflecting, object) {\n\t\t\t\tlet target = object;\n\t\t\t\tfor (let i = 0; i < props.length - 1; ++i) {\n\t\t\t\t\ttarget = target[ props[i] ];\n\t\t\t\t}\n\t\t\t\ttarget[ props[props.length - 1] ] = reflecting;\n\t\t\t\treturn object;\n\t\t\t} }\n\t\t);\n\t}\n}\n\n/**\r\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any Document / ClientMixinDocument.\r\n * This makes documents reactive in a Svelte component, but otherwise provides subscriber functionality external to\r\n * Svelte.\r\n *\r\n * @template {foundry.abstract.Document} T\r\n */\r\nclass TJSDocument\r\n{\r\n   #document;\r\n   #uuidv4;\r\n\r\n   /**\r\n    * @type {TJSDocumentOptions}\r\n    */\r\n   #options = { delete: void 0 };\r\n\r\n   #subscriptions = [];\r\n   #updateOptions;\r\n\r\n   /**\r\n    * @param {T|TJSDocumentOptions} [document] - Document to wrap or TJSDocumentOptions.\r\n    *\r\n    * @param {TJSDocumentOptions}   [options] - TJSDocument options.\r\n    */\r\n   constructor(document, options = {})\r\n   {\r\n      this.#uuidv4 = `tjs-document-${uuidv4()}`;\r\n\r\n      if (isPlainObject(document)) // Handle case when only options are passed into ctor.\r\n      {\r\n         this.setOptions(document);\r\n      }\r\n      else\r\n      {\r\n         this.setOptions(options);\r\n         this.set(document);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns the options passed on last update.\r\n    *\r\n    * @returns {object} Last update options.\r\n    */\r\n   get updateOptions() { return this.#updateOptions ?? {}; }\r\n\r\n   /**\r\n    * Returns the UUID assigned to this store.\r\n    *\r\n    * @returns {*} UUID\r\n    */\r\n   get uuidv4() { return this.#uuidv4; }\r\n\r\n   /**\r\n    * Handles cleanup when the document is deleted. Invoking any optional delete function set in the constructor.\r\n    *\r\n    * @returns {Promise<void>}\r\n    */\r\n   async #deleted()\r\n   {\r\n      const doc = this.#document;\r\n\r\n      // Check to see if the document is still in the associated collection to determine if actually deleted.\r\n      if (doc instanceof foundry.abstract.Document && !doc?.collection?.has(doc.id))\r\n      {\r\n         delete doc?.apps[this.#uuidv4];\r\n         this.#document = void 0;\r\n\r\n         this.#notify(false, { action: 'delete', data: void 0 });\r\n\r\n         if (typeof this.#options.delete === 'function') { await this.#options.delete(); }\r\n\r\n         this.#updateOptions = void 0;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\r\n    * ClientDocumentMixin `apps` tracking object.\r\n    */\r\n   destroy()\r\n   {\r\n      const doc = this.#document;\r\n\r\n      if (doc instanceof foundry.abstract.Document)\r\n      {\r\n         delete doc?.apps[this.#uuidv4];\r\n         this.#document = void 0;\r\n      }\r\n\r\n      this.#options.delete = void 0;\r\n      this.#subscriptions.length = 0;\r\n   }\r\n\r\n   /**\r\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\r\n    *\r\n    * @param {object}   [options] - Options from render call; will have document update context.\r\n    */\r\n   #notify(force = false, options = {}) // eslint-disable-line no-unused-vars\r\n   {\r\n      this.#updateOptions = options;\r\n\r\n      // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\r\n      // support until 2023. IE not doing this will require several extra method calls otherwise.\r\n      const subscriptions = this.#subscriptions;\r\n      const document = this.#document;\r\n\r\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](document, options); }\r\n   }\r\n\r\n   /**\r\n    * @returns {T | undefined} Current document\r\n    */\r\n   get() { return this.#document; }\r\n\r\n   /**\r\n    * @param {T | undefined}  document - New document to set.\r\n    *\r\n    * @param {object}         [options] - New document update options to set.\r\n    */\r\n   set(document, options = {})\r\n   {\r\n      if (this.#document)\r\n      {\r\n         delete this.#document.apps[this.#uuidv4];\r\n      }\r\n\r\n      if (document !== void 0 && !(document instanceof foundry.abstract.Document))\r\n      {\r\n         throw new TypeError(`TJSDocument set error: 'document' is not a valid Document or undefined.`);\r\n      }\r\n\r\n      if (options === null || typeof options !== 'object')\r\n      {\r\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\r\n      }\r\n\r\n      if (document instanceof foundry.abstract.Document)\r\n      {\r\n         document.apps[this.#uuidv4] = {\r\n            close: this.#deleted.bind(this),\r\n            render: this.#notify.bind(this)\r\n         };\r\n      }\r\n\r\n      this.#document = document;\r\n      this.#updateOptions = options;\r\n      this.#notify();\r\n   }\r\n\r\n   /**\r\n    * Potentially sets new document from data transfer object.\r\n    *\r\n    * @param {object}   data - Document transfer data.\r\n    *\r\n    * @param {ParseDataTransferOptions & TJSDocumentOptions}   [options] - Optional parameters.\r\n    *\r\n    * @returns {Promise<boolean>} Returns true if new document set from data transfer blob.\r\n    */\r\n   async setFromDataTransfer(data, options)\r\n   {\r\n      return this.setFromUUID(getUUIDFromDataTransfer(data, options), options);\r\n   }\r\n\r\n   /**\r\n    * Sets the document by Foundry UUID performing a lookup and setting the document if found.\r\n    *\r\n    * @param {string}   uuid - A Foundry UUID to lookup.\r\n    *\r\n    * @param {TJSDocumentOptions}   [options] - New document update options to set.\r\n    *\r\n    * @returns {Promise<boolean>} True if successfully set document from UUID.\r\n    */\r\n   async setFromUUID(uuid, options = {})\r\n   {\r\n      if (typeof uuid !== 'string' || uuid.length === 0) { return false; }\r\n\r\n      try\r\n      {\r\n         const doc = await globalThis.fromUuid(uuid);\r\n\r\n         if (doc)\r\n         {\r\n            this.set(doc, options);\r\n            return true;\r\n         }\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      return false;\r\n   }\r\n\r\n   /**\r\n    * Sets options for this document wrapper / store.\r\n    *\r\n    * @param {TJSDocumentOptions}   options - Options for TJSDocument.\r\n    */\r\n   setOptions(options)\r\n   {\r\n      if (!isObject(options))\r\n      {\r\n         throw new TypeError(`TJSDocument error: 'options' is not a plain object.`);\r\n      }\r\n\r\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\r\n      {\r\n         throw new TypeError(`TJSDocument error: 'delete' attribute in options is not a function.`);\r\n      }\r\n\r\n      if (options.delete === void 0 || typeof options.delete === 'function')\r\n      {\r\n         this.#options.delete = options.delete;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {function(T, object): void} handler - Callback function that is invoked on update / changes.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler);           // Add handler to the array of subscribers.\r\n\r\n      const updateOptions = { action: 'subscribe', data: void 0 };\r\n\r\n      handler(this.#document, updateOptions);      // Call handler with current value and update options.\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} TJSDocumentOptions\r\n *\r\n * @property {Function} [delete] - Optional delete function to invoke when document is deleted.\r\n */\n\n/**\r\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any DocumentCollection. This makes\r\n * document collections reactive in a Svelte component, but otherwise provides subscriber functionality external to\r\n * Svelte.\r\n *\r\n * @template {DocumentCollection} T\r\n */\r\nclass TJSDocumentCollection\r\n{\r\n   #collection;\r\n   #collectionCallback;\r\n   #uuid;\r\n\r\n   /**\r\n    * @type {TJSDocumentCollectionOptions}\r\n    */\r\n   #options = { delete: void 0 };\r\n\r\n   #subscriptions = [];\r\n   #updateOptions;\r\n\r\n   /**\r\n    * @param {T|TJSDocumentCollectionOptions}   [collection] - Collection to wrap or TJSDocumentCollectionOptions.\r\n    *\r\n    * @param {TJSDocumentCollectionOptions}     [options] - TJSDocumentCollection options.\r\n    */\r\n   constructor(collection, options = {})\r\n   {\r\n      this.#uuid = `tjs-collection-${uuidv4()}`;\r\n\r\n      if (isPlainObject(collection)) // Handle case when only options are passed into ctor.\r\n      {\r\n         this.setOptions(collection);\r\n      }\r\n      else\r\n      {\r\n         this.setOptions(options);\r\n         this.set(collection);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns the options passed on last update.\r\n    *\r\n    * @returns {object} Last update options.\r\n    */\r\n   get updateOptions() { return this.#updateOptions ?? {}; }\r\n\r\n   /**\r\n    * Returns the UUID assigned to this store.\r\n    *\r\n    * @returns {*} UUID\r\n    */\r\n   get uuid() { return this.#uuid; }\r\n\r\n   /**\r\n    * Handles cleanup when the collection is deleted. Invoking any optional delete function set in the constructor.\r\n    *\r\n    * @returns {Promise<void>}\r\n    */\r\n   async #deleted()\r\n   {\r\n      const collection = this.#collection;\r\n\r\n      if (collection instanceof DocumentCollection)\r\n      {\r\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\r\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\r\n\r\n         this.#collection = void 0;\r\n      }\r\n\r\n      this.#notify(false, { action: 'delete', documentType: collection.documentName, documents: [], data: [] });\r\n\r\n      if (typeof this.#options.delete === 'function') { await this.#options.delete(); }\r\n\r\n      this.#updateOptions = void 0;\r\n   }\r\n\r\n   /**\r\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\r\n    * DocumentCollection `apps` tracking array.\r\n    */\r\n   destroy()\r\n   {\r\n      const collection = this.#collection;\r\n\r\n      if (collection instanceof DocumentCollection)\r\n      {\r\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\r\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\r\n\r\n         this.#collection = void 0;\r\n      }\r\n\r\n      this.#options.delete = void 0;\r\n      this.#subscriptions.length = 0;\r\n   }\r\n\r\n   /**\r\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\r\n    *\r\n    * @param {object}   [options] - Options from render call; will have collection update context.\r\n    */\r\n   #notify(force = false, options = {}) // eslint-disable-line no-unused-vars\r\n   {\r\n      this.#updateOptions = options;\r\n\r\n      // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\r\n      // support until 2023. IE not doing this will require several extra method calls otherwise.\r\n      const subscriptions = this.#subscriptions;\r\n      const collection = this.#collection;\r\n\r\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](collection, options); }\r\n   }\r\n\r\n   /**\r\n    * @returns {T | undefined} Current collection\r\n    */\r\n   get() { return this.#collection; }\r\n\r\n   /**\r\n    * @param {T | undefined}  collection - New collection to set.\r\n    *\r\n    * @param {object}         [options] - New collection update options to set.\r\n    */\r\n   set(collection, options = {})\r\n   {\r\n      if (this.#collection)\r\n      {\r\n         const index = this.#collection.apps.findIndex((sub) => sub === this.#collectionCallback);\r\n         if (index >= 0) { this.#collection.apps.splice(index, 1); }\r\n\r\n         this.#collectionCallback = void 0;\r\n      }\r\n\r\n      if (collection !== void 0 && !(collection instanceof DocumentCollection))\r\n      {\r\n         throw new TypeError(\r\n          `TJSDocumentCollection set error: 'collection' is not a valid DocumentCollection or undefined.`);\r\n      }\r\n\r\n      if (!isObject(options))\r\n      {\r\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\r\n      }\r\n\r\n      if (collection instanceof DocumentCollection)\r\n      {\r\n         this.#collectionCallback = {\r\n            close: this.#deleted.bind(this),\r\n            render: this.#notify.bind(this)\r\n         };\r\n\r\n         collection?.apps?.push(this.#collectionCallback);\r\n      }\r\n\r\n      this.#collection = collection;\r\n      this.#updateOptions = options;\r\n      this.#notify();\r\n   }\r\n\r\n   /**\r\n    * Sets options for this collection wrapper / store.\r\n    *\r\n    * @param {TJSDocumentCollectionOptions}   options - Options for TJSDocumentCollection.\r\n    */\r\n   setOptions(options)\r\n   {\r\n      if (!isObject(options))\r\n      {\r\n         throw new TypeError(`TJSDocumentCollection error: 'options' is not an object.`);\r\n      }\r\n\r\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\r\n      {\r\n         throw new TypeError(`TJSDocumentCollection error: 'delete' attribute in options is not a function.`);\r\n      }\r\n\r\n      if (options.delete === void 0 || typeof options.delete === 'function')\r\n      {\r\n         this.#options.delete = options.delete;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {function(T, object): void} handler - Callback function that is invoked on update / changes.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler);              // Add handler to the array of subscribers.\r\n\r\n      const collection = this.#collection;\r\n\r\n      const documentType = collection?.documentName ?? void 0;\r\n\r\n      const updateOptions = { action: 'subscribe', documentType, documents: [], data: [] };\r\n\r\n      handler(collection, updateOptions);  // Call handler with current value and update options.\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef TJSDocumentCollectionOptions\r\n *\r\n * @property {Function} [delete] - Optional delete function to invoke when document is deleted.\r\n */\n\nconst storeState = writable$2(void 0);\r\n\r\n/**\r\n * @type {GameState} Provides a Svelte store wrapping the Foundry runtime / global game state.\r\n */\r\nconst gameState = {\r\n   subscribe: storeState.subscribe,\r\n   get: () => game\r\n};\r\n\r\nObject.freeze(gameState);\r\n\r\nHooks.once('ready', () => storeState.set(game));\r\n\r\n/**\r\n * @typedef {import('svelte/store').Readable} GameState - Provides a Svelte store wrapping the Foundry `game` global variable. It is initialized\r\n * on the `ready` hook. You may use this store to access the global game state from a Svelte template. It is a read only\r\n * store and will receive no reactive updates during runtime.\r\n *\r\n * @property {import('svelte/store').Readable.subscribe} subscribe - Provides the Svelte store subscribe function.\r\n *\r\n * @property {Function} get - Provides a mechanism to directly access the Foundry game state without subscribing.\r\n */\n\n/**\r\n * Registers game settings and creates a backing Svelte store for each setting. It is possible to add multiple\r\n * `onChange` callbacks on registration.\r\n */\r\nclass TJSGameSettings\r\n{\r\n   /**\r\n    * @type {Map<string, GSWritableStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Creates a new GSWritableStore for the given key.\r\n    *\r\n    * @param {string}   initialValue - An initial value to set to new stores.\r\n    *\r\n    * @returns {GSWritableStore} The new GSWritableStore.\r\n    */\r\n   static #createStore(initialValue)\r\n   {\r\n      return writable$2(initialValue);\r\n   }\r\n\r\n   /**\r\n    * Gets a store from the GSWritableStore Map or creates a new store for the key.\r\n    *\r\n    * @param {string}   key - Key to lookup in stores map.\r\n    *\r\n    * @param {string}   [initialValue] - An initial value to set to new stores.\r\n    *\r\n    * @returns {GSWritableStore} The store for the given key.\r\n    */\r\n   #getStore(key, initialValue)\r\n   {\r\n      let store = this.#stores.get(key);\r\n      if (store === void 0)\r\n      {\r\n         store = TJSGameSettings.#createStore(initialValue);\r\n         this.#stores.set(key, store);\r\n      }\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Returns a readable Game Settings store for the associated key.\r\n    *\r\n    * @param {string}   key - Game setting key.\r\n    *\r\n    * @returns {GSReadableStore|undefined} The associated store for the given game setting key.\r\n    */\r\n   getReadableStore(key)\r\n   {\r\n      if (!this.#stores.has(key))\r\n      {\r\n         console.warn(`TJSGameSettings - getReadableStore: '${key}' is not a registered setting.`);\r\n         return;\r\n      }\r\n\r\n      const store = this.#getStore(key);\r\n\r\n      return { subscribe: store.subscribe, get: store.get };\r\n   }\r\n\r\n   /**\r\n    * Returns a writable Game Settings store for the associated key.\r\n    *\r\n    * @param {string}   key - Game setting key.\r\n    *\r\n    * @returns {GSWritableStore|undefined} The associated store for the given game setting key.\r\n    */\r\n   getStore(key)\r\n   {\r\n      return this.getWritableStore(key);\r\n   }\r\n\r\n   /**\r\n    * Returns a writable Game Settings store for the associated key.\r\n    *\r\n    * @param {string}   key - Game setting key.\r\n    *\r\n    * @returns {GSWritableStore|undefined} The associated store for the given game setting key.\r\n    */\r\n   getWritableStore(key)\r\n   {\r\n      if (!this.#stores.has(key))\r\n      {\r\n         console.warn(`TJSGameSettings - getWritableStore: '${key}' is not a registered setting.`);\r\n         return;\r\n      }\r\n\r\n      return this.#getStore(key);\r\n   }\r\n\r\n   /**\r\n    * @param {GameSetting} setting - A GameSetting instance to set to Foundry game settings.\r\n    */\r\n   register(setting)\r\n   {\r\n      if (typeof setting !== 'object')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: setting is not an object.`);\r\n      }\r\n\r\n      if (typeof setting.options !== 'object')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'options' attribute is not an object.`);\r\n      }\r\n\r\n      if (setting.store !== void 0 && !isWritableStore(setting.store))\r\n      {\r\n         throw new TypeError(\r\n          `TJSGameSettings - register: 'setting.store' attribute is not a writable store.`);\r\n      }\r\n\r\n      // TODO: Remove deprecation warning and fully remove support for `moduleId` in a future TRL release.\r\n      if (typeof setting.moduleId === 'string')\r\n      {\r\n         console.warn(\r\n          `TJSGameSettings - register deprecation warning: 'moduleId' should be replaced with 'namespace'.`);\r\n         console.warn(`'moduleId' will cease to work in a future update of TRL / TJSGameSettings.`);\r\n      }\r\n\r\n      // TODO: Remove nullish coalescing operator in a future TRL release.\r\n      const namespace = setting.namespace ?? setting.moduleId;\r\n      const key = setting.key;\r\n\r\n      if (typeof namespace !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'namespace' attribute is not a string.`);\r\n      }\r\n\r\n      if (typeof key !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'key' attribute is not a string.`);\r\n      }\r\n\r\n      const store = setting.store;\r\n\r\n      /**\r\n       * @type {GameSettingOptions}\r\n       */\r\n      const options = setting.options;\r\n\r\n      const onchangeFunctions = [];\r\n\r\n      // When true prevents local store subscription from a loop when values are object data.\r\n      let gateSet = false;\r\n\r\n      // Provides an `onChange` callback to update the associated store.\r\n      onchangeFunctions.push((value) =>\r\n      {\r\n         const callbackStore = this.#getStore(key);\r\n         if (callbackStore && !gateSet)\r\n         {\r\n            gateSet = true;\r\n            callbackStore.set(value);\r\n            gateSet = false;\r\n         }\r\n      });\r\n\r\n      // Handle loading any existing `onChange` callbacks.\r\n      if (isIterable(options?.onChange))\r\n      {\r\n         for (const entry of options.onChange)\r\n         {\r\n            if (typeof entry === 'function') { onchangeFunctions.push(entry); }\r\n         }\r\n      }\r\n      else if (typeof options.onChange === 'function')\r\n      {\r\n         onchangeFunctions.push(options.onChange);\r\n      }\r\n\r\n      // Provides the final onChange callback that iterates over all the stored onChange callbacks.\r\n      const onChange = (value) =>\r\n      {\r\n         for (const entry of onchangeFunctions) { entry(value); }\r\n      };\r\n\r\n      game.settings.register(namespace, key, { ...options, onChange });\r\n\r\n      // Set new store value with existing setting or default value.\r\n      const targetStore = store ? store : this.#getStore(key, game.settings.get(namespace, key));\r\n\r\n      // If a store instance is passed into register then initialize it with game settings data.\r\n      if (store)\r\n      {\r\n         this.#stores.set(key, targetStore);\r\n         store.set(game.settings.get(namespace, key));\r\n      }\r\n\r\n      // Subscribe to self to set associated game setting on updates after verifying that the new value does not match\r\n      // existing game setting.\r\n      subscribeIgnoreFirst(targetStore, async (value) =>\r\n      {\r\n         if (!gateSet && game.settings.get(namespace, key) !== value)\r\n         {\r\n            gateSet = true;\r\n            await game.settings.set(namespace, key, value);\r\n         }\r\n\r\n         gateSet = false;\r\n      });\r\n   }\r\n\r\n   /**\r\n    * Registers multiple settings.\r\n    *\r\n    * @param {Iterable<GameSetting>} settings - An iterable list of game setting configurations to register.\r\n    */\r\n   registerAll(settings)\r\n   {\r\n      if (!isIterable(settings)) { throw new TypeError(`TJSGameSettings - registerAll: settings is not iterable.`); }\r\n\r\n      for (const entry of settings)\r\n      {\r\n         if (typeof entry !== 'object')\r\n         {\r\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings is not an object.`);\r\n         }\r\n\r\n         // TODO: Uncomment when deprecation for 'moduleId' is removed in future TRL release.\r\n         // if (typeof entry.namespace !== 'string')\r\n         // {\r\n         //    throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'namespace' attribute.`);\r\n         // }\r\n\r\n         if (typeof entry.key !== 'string')\r\n         {\r\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'key' attribute.`);\r\n         }\r\n\r\n         if (typeof entry.options !== 'object')\r\n         {\r\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'options' attribute.`);\r\n         }\r\n\r\n         this.register(entry);\r\n      }\r\n   }\r\n}\n\nexport { DynArrayReducer, LocalStorage, SessionStorage, TJSDocument, TJSDocumentCollection, TJSGameSettings, gameState, isReadableStore, isUpdatableStore, isWritableStore, propertyStore, subscribeFirstRest, subscribeIgnoreFirst, writableDerived };\n//# sourceMappingURL=index.js.map\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","/**\r\n * Performs linear interpolation between a start & end value by given amount between 0 - 1 inclusive.\r\n *\r\n * @param {number}   start - Start value.\r\n *\r\n * @param {number}   end - End value.\r\n *\r\n * @param {number}   amount - Current amount between 0 - 1 inclusive.\r\n *\r\n * @returns {number} Linear interpolated value between start & end.\r\n */\r\nfunction lerp$5(start, end, amount)\r\n{\r\n   return (1 - amount) * start + amount * end;\r\n}\n\n/**\r\n * Converts the given number from degrees to radians.\r\n *\r\n * @param {number}   deg - Degree number to convert\r\n *\r\n * @returns {number} Degree as radians.\r\n */\r\nfunction degToRad(deg)\r\n{\r\n   return deg * (Math.PI / 180.0);\r\n}\n\n/**\r\n * Converts the given number from radians to degrees.\r\n *\r\n * @param {number}   rad - Radian number to convert.\r\n *\r\n * @returns {number} Degree as radians.\r\n */\r\nfunction radToDeg(rad)\r\n{\r\n   return rad * (180.0 / Math.PI);\r\n}\n\n/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nfunction setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nfunction equals$9(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n\nvar common = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   EPSILON: EPSILON,\n   get ARRAY_TYPE () { return ARRAY_TYPE; },\n   RANDOM: RANDOM,\n   setMatrixArrayType: setMatrixArrayType,\n   toRadian: toRadian,\n   equals: equals$9\n});\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\n\nfunction create$8() {\n  var out = new ARRAY_TYPE(4);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n\nfunction clone$8(a) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction copy$8(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\n\nfunction identity$5(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\n\nfunction fromValues$8(m00, m01, m10, m11) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\n\nfunction set$8(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction transpose$2(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction invert$5(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction adjoint$2(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2\n *\n * @param {ReadonlyMat2} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant$3(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nfunction multiply$8(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nfunction rotate$4(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\n\nfunction scale$8(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nfunction fromRotation$4(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2} out\n */\n\nfunction fromScaling$3(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2\n *\n * @param {ReadonlyMat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$8(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob$3(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {ReadonlyMat2} L the lower triangular matrix\n * @param {ReadonlyMat2} D the diagonal matrix\n * @param {ReadonlyMat2} U the upper triangular matrix\n * @param {ReadonlyMat2} a the input matrix to factorize\n */\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nfunction add$8(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nfunction subtract$6(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$8(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$8(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\n\nfunction multiplyScalar$3(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\n\nfunction multiplyScalarAndAdd$3(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\n\nvar mul$8 = multiply$8;\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\n\nvar sub$6 = subtract$6;\n\nvar mat2 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$8,\n   clone: clone$8,\n   copy: copy$8,\n   identity: identity$5,\n   fromValues: fromValues$8,\n   set: set$8,\n   transpose: transpose$2,\n   invert: invert$5,\n   adjoint: adjoint$2,\n   determinant: determinant$3,\n   multiply: multiply$8,\n   rotate: rotate$4,\n   scale: scale$8,\n   fromRotation: fromRotation$4,\n   fromScaling: fromScaling$3,\n   str: str$8,\n   frob: frob$3,\n   LDU: LDU,\n   add: add$8,\n   subtract: subtract$6,\n   exactEquals: exactEquals$8,\n   equals: equals$8,\n   multiplyScalar: multiplyScalar$3,\n   multiplyScalarAndAdd: multiplyScalarAndAdd$3,\n   mul: mul$8,\n   sub: sub$6\n});\n\n/**\n * 2x3 Matrix\n * @module mat2d\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, b,\n *  c, d,\n *  tx, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, b, 0,\n *  c, d, 0,\n *  tx, ty, 1]\n * </pre>\n * The last column is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\n\nfunction create$7() {\n  var out = new ARRAY_TYPE(6);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n\nfunction clone$7(a) {\n  var out = new ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nfunction copy$7(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\n\nfunction identity$4(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\n\nfunction fromValues$7(a, b, c, d, tx, ty) {\n  var out = new ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\n\nfunction set$7(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nfunction invert$4(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant$2(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nfunction multiply$7(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nfunction rotate$3(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\n\nfunction scale$7(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\n\nfunction translate$3(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nfunction fromRotation$3(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2d} out\n */\n\nfunction fromScaling$2(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat2d} out\n */\n\nfunction fromTranslation$3(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2d\n *\n * @param {ReadonlyMat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$7(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob$2(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nfunction add$7(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nfunction subtract$5(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\n\nfunction multiplyScalar$2(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\n\nfunction multiplyScalarAndAdd$2(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$7(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$7(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\n\nvar mul$7 = multiply$7;\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\n\nvar sub$5 = subtract$5;\n\nvar mat2d = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$7,\n   clone: clone$7,\n   copy: copy$7,\n   identity: identity$4,\n   fromValues: fromValues$7,\n   set: set$7,\n   invert: invert$4,\n   determinant: determinant$2,\n   multiply: multiply$7,\n   rotate: rotate$3,\n   scale: scale$7,\n   translate: translate$3,\n   fromRotation: fromRotation$3,\n   fromScaling: fromScaling$2,\n   fromTranslation: fromTranslation$3,\n   str: str$7,\n   frob: frob$2,\n   add: add$7,\n   subtract: subtract$5,\n   multiplyScalar: multiplyScalar$2,\n   multiplyScalarAndAdd: multiplyScalarAndAdd$2,\n   exactEquals: exactEquals$7,\n   equals: equals$7,\n   mul: mul$7,\n   sub: sub$5\n});\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nfunction create$6() {\n  var out = new ARRAY_TYPE(9);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nfunction fromMat4$1(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nfunction clone$6(a) {\n  var out = new ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction copy$6(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nfunction fromValues$6(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nfunction set$6(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nfunction identity$3(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction transpose$1(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction invert$3(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction adjoint$1(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant$1(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction multiply$6(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nfunction translate$2(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nfunction rotate$2(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nfunction scale$6(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nfunction fromTranslation$2(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nfunction fromRotation$2(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nfunction fromScaling$1(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nfunction fromQuat$1(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$6(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob$1(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction add$6(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction subtract$4(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nfunction multiplyScalar$1(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nfunction multiplyScalarAndAdd$1(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$6(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$6(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nvar mul$6 = multiply$6;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nvar sub$4 = subtract$4;\n\nvar mat3 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$6,\n   fromMat4: fromMat4$1,\n   clone: clone$6,\n   copy: copy$6,\n   fromValues: fromValues$6,\n   set: set$6,\n   identity: identity$3,\n   transpose: transpose$1,\n   invert: invert$3,\n   adjoint: adjoint$1,\n   determinant: determinant$1,\n   multiply: multiply$6,\n   translate: translate$2,\n   rotate: rotate$2,\n   scale: scale$6,\n   fromTranslation: fromTranslation$2,\n   fromRotation: fromRotation$2,\n   fromScaling: fromScaling$1,\n   fromMat2d: fromMat2d,\n   fromQuat: fromQuat$1,\n   normalFromMat4: normalFromMat4,\n   projection: projection,\n   str: str$6,\n   frob: frob$1,\n   add: add$6,\n   subtract: subtract$4,\n   multiplyScalar: multiplyScalar$1,\n   multiplyScalarAndAdd: multiplyScalarAndAdd$1,\n   exactEquals: exactEquals$6,\n   equals: equals$6,\n   mul: mul$6,\n   sub: sub$4\n});\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nfunction create$5() {\n  var out = new ARRAY_TYPE(16);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nfunction clone$5(a) {\n  var out = new ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction copy$5(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nfunction fromValues$5(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nfunction set$5(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nfunction identity$2(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction invert$2(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction multiply$5(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nfunction translate$1(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nfunction scale$5(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction rotate$1(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateX$3(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateY$3(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateZ$3(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromTranslation$1(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction fromRotation$1(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslation$1(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nfunction fromQuat2(out, a) {\n  var translation = new ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation$1(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getTranslation$1(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nfunction getRotation(out, mat) {\n  var scaling = new ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nfunction perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nvar perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nfunction perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nvar ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < EPSILON && Math.abs(eyey - centery) < EPSILON && Math.abs(eyez - centerz) < EPSILON) {\n    return identity$2(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$5(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction add$5(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction subtract$3(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$5(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$5(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nvar mul$5 = multiply$5;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nvar sub$3 = subtract$3;\n\nvar mat4 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$5,\n   clone: clone$5,\n   copy: copy$5,\n   fromValues: fromValues$5,\n   set: set$5,\n   identity: identity$2,\n   transpose: transpose,\n   invert: invert$2,\n   adjoint: adjoint,\n   determinant: determinant,\n   multiply: multiply$5,\n   translate: translate$1,\n   scale: scale$5,\n   rotate: rotate$1,\n   rotateX: rotateX$3,\n   rotateY: rotateY$3,\n   rotateZ: rotateZ$3,\n   fromTranslation: fromTranslation$1,\n   fromScaling: fromScaling,\n   fromRotation: fromRotation$1,\n   fromXRotation: fromXRotation,\n   fromYRotation: fromYRotation,\n   fromZRotation: fromZRotation,\n   fromRotationTranslation: fromRotationTranslation$1,\n   fromQuat2: fromQuat2,\n   getTranslation: getTranslation$1,\n   getScaling: getScaling,\n   getRotation: getRotation,\n   fromRotationTranslationScale: fromRotationTranslationScale,\n   fromRotationTranslationScaleOrigin: fromRotationTranslationScaleOrigin,\n   fromQuat: fromQuat,\n   frustum: frustum,\n   perspectiveNO: perspectiveNO,\n   perspective: perspective,\n   perspectiveZO: perspectiveZO,\n   perspectiveFromFieldOfView: perspectiveFromFieldOfView,\n   orthoNO: orthoNO,\n   ortho: ortho,\n   orthoZO: orthoZO,\n   lookAt: lookAt,\n   targetTo: targetTo,\n   str: str$5,\n   frob: frob,\n   add: add$5,\n   subtract: subtract$3,\n   multiplyScalar: multiplyScalar,\n   multiplyScalarAndAdd: multiplyScalarAndAdd,\n   exactEquals: exactEquals$5,\n   equals: equals$5,\n   mul: mul$5,\n   sub: sub$3\n});\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nfunction create$4() {\n  var out = new ARRAY_TYPE(3);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nfunction clone$4(a) {\n  var out = new ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length$4(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nfunction fromValues$4(x, y, z) {\n  var out = new ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nfunction copy$4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nfunction set$4(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction add$4(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction subtract$2(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction multiply$4(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction divide$2(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nfunction ceil$2(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nfunction floor$2(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction min$2(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction max$2(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nfunction round$2(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nfunction scale$4(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nfunction scaleAndAdd$2(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance$2(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance$2(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength$4(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nfunction negate$2(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nfunction inverse$2(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nfunction normalize$4(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot$4(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction cross$2(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction lerp$4(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nfunction random$3(out, scale) {\n  scale = scale || 1.0;\n  var r = RANDOM() * 2.0 * Math.PI;\n  var z = RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat4$2(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat3$1(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nfunction transformQuat$1(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateX$2(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateY$2(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateZ$2(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nfunction angle$1(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot$4(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nfunction zero$2(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str$4(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals$4(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals$4(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nvar sub$2 = subtract$2;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nvar mul$4 = multiply$4;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nvar div$2 = divide$2;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nvar dist$2 = distance$2;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nvar sqrDist$2 = squaredDistance$2;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nvar len$4 = length$4;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nvar sqrLen$4 = squaredLength$4;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach$2 = function () {\n  var vec = create$4();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\nvar vec3 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$4,\n   clone: clone$4,\n   length: length$4,\n   fromValues: fromValues$4,\n   copy: copy$4,\n   set: set$4,\n   add: add$4,\n   subtract: subtract$2,\n   multiply: multiply$4,\n   divide: divide$2,\n   ceil: ceil$2,\n   floor: floor$2,\n   min: min$2,\n   max: max$2,\n   round: round$2,\n   scale: scale$4,\n   scaleAndAdd: scaleAndAdd$2,\n   distance: distance$2,\n   squaredDistance: squaredDistance$2,\n   squaredLength: squaredLength$4,\n   negate: negate$2,\n   inverse: inverse$2,\n   normalize: normalize$4,\n   dot: dot$4,\n   cross: cross$2,\n   lerp: lerp$4,\n   hermite: hermite,\n   bezier: bezier,\n   random: random$3,\n   transformMat4: transformMat4$2,\n   transformMat3: transformMat3$1,\n   transformQuat: transformQuat$1,\n   rotateX: rotateX$2,\n   rotateY: rotateY$2,\n   rotateZ: rotateZ$2,\n   angle: angle$1,\n   zero: zero$2,\n   str: str$4,\n   exactEquals: exactEquals$4,\n   equals: equals$4,\n   sub: sub$2,\n   mul: mul$4,\n   div: div$2,\n   dist: dist$2,\n   sqrDist: sqrDist$2,\n   len: len$4,\n   sqrLen: sqrLen$4,\n   forEach: forEach$2\n});\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nfunction create$3() {\n  var out = new ARRAY_TYPE(4);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nfunction clone$3(a) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nfunction fromValues$3(x, y, z, w) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nfunction copy$3(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nfunction set$3(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction add$3(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction subtract$1(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction multiply$3(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction divide$1(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nfunction ceil$1(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nfunction floor$1(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction min$1(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction max$1(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nfunction round$1(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nfunction scale$3(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nfunction scaleAndAdd$1(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance$1(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance$1(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length$3(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength$3(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nfunction negate$1(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nfunction inverse$1(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nfunction normalize$3(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot$3(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nfunction cross$1(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nfunction lerp$3(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nfunction random$2(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = RANDOM() * 2 - 1;\n    v2 = RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = RANDOM() * 2 - 1;\n    v4 = RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nfunction transformMat4$1(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nfunction zero$1(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str$3(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals$3(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals$3(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nvar sub$1 = subtract$1;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nvar mul$3 = multiply$3;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nvar div$1 = divide$1;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nvar dist$1 = distance$1;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nvar sqrDist$1 = squaredDistance$1;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nvar len$3 = length$3;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nvar sqrLen$3 = squaredLength$3;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach$1 = function () {\n  var vec = create$3();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\nvar vec4 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$3,\n   clone: clone$3,\n   fromValues: fromValues$3,\n   copy: copy$3,\n   set: set$3,\n   add: add$3,\n   subtract: subtract$1,\n   multiply: multiply$3,\n   divide: divide$1,\n   ceil: ceil$1,\n   floor: floor$1,\n   min: min$1,\n   max: max$1,\n   round: round$1,\n   scale: scale$3,\n   scaleAndAdd: scaleAndAdd$1,\n   distance: distance$1,\n   squaredDistance: squaredDistance$1,\n   length: length$3,\n   squaredLength: squaredLength$3,\n   negate: negate$1,\n   inverse: inverse$1,\n   normalize: normalize$3,\n   dot: dot$3,\n   cross: cross$1,\n   lerp: lerp$3,\n   random: random$2,\n   transformMat4: transformMat4$1,\n   transformQuat: transformQuat,\n   zero: zero$1,\n   str: str$3,\n   exactEquals: exactEquals$3,\n   equals: equals$3,\n   sub: sub$1,\n   mul: mul$3,\n   div: div$1,\n   dist: dist$1,\n   sqrDist: sqrDist$1,\n   len: len$3,\n   sqrLen: sqrLen$3,\n   forEach: forEach$1\n});\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nfunction create$2() {\n  var out = new ARRAY_TYPE(4);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nfunction identity$1(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nfunction getAngle(a, b) {\n  var dotproduct = dot$2(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nfunction multiply$2(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateX$1(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateY$1(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateZ$1(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale$2(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nfunction random$1(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = RANDOM();\n  var u2 = RANDOM();\n  var u3 = RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nfunction invert$1(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nfunction conjugate$1(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str$2(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nvar clone$2 = clone$3;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nvar fromValues$2 = fromValues$3;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nvar copy$2 = copy$3;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nvar set$2 = set$3;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nvar add$2 = add$3;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nvar mul$2 = multiply$2;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nvar scale$2 = scale$3;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nvar dot$2 = dot$3;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nvar lerp$2 = lerp$3;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nvar length$2 = length$3;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nvar len$2 = length$2;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nvar squaredLength$2 = squaredLength$3;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nvar sqrLen$2 = squaredLength$2;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nvar normalize$2 = normalize$3;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nvar exactEquals$2 = exactEquals$3;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nvar equals$2 = equals$3;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nvar rotationTo = function () {\n  var tmpvec3 = create$4();\n  var xUnitVec3 = fromValues$4(1, 0, 0);\n  var yUnitVec3 = fromValues$4(0, 1, 0);\n  return function (out, a, b) {\n    var dot = dot$4(a, b);\n\n    if (dot < -0.999999) {\n      cross$2(tmpvec3, xUnitVec3, a);\n      if (len$4(tmpvec3) < 0.000001) cross$2(tmpvec3, yUnitVec3, a);\n      normalize$4(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      cross$2(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize$2(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nvar sqlerp = function () {\n  var temp1 = create$2();\n  var temp2 = create$2();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nvar setAxes = function () {\n  var matr = create$6();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize$2(out, fromMat3(out, matr));\n  };\n}();\n\nvar quat = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$2,\n   identity: identity$1,\n   setAxisAngle: setAxisAngle,\n   getAxisAngle: getAxisAngle,\n   getAngle: getAngle,\n   multiply: multiply$2,\n   rotateX: rotateX$1,\n   rotateY: rotateY$1,\n   rotateZ: rotateZ$1,\n   calculateW: calculateW,\n   exp: exp,\n   ln: ln,\n   pow: pow,\n   slerp: slerp,\n   random: random$1,\n   invert: invert$1,\n   conjugate: conjugate$1,\n   fromMat3: fromMat3,\n   fromEuler: fromEuler,\n   str: str$2,\n   clone: clone$2,\n   fromValues: fromValues$2,\n   copy: copy$2,\n   set: set$2,\n   add: add$2,\n   mul: mul$2,\n   scale: scale$2,\n   dot: dot$2,\n   lerp: lerp$2,\n   length: length$2,\n   len: len$2,\n   squaredLength: squaredLength$2,\n   sqrLen: sqrLen$2,\n   normalize: normalize$2,\n   exactEquals: exactEquals$2,\n   equals: equals$2,\n   rotationTo: rotationTo,\n   sqlerp: sqlerp,\n   setAxes: setAxes\n});\n\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\n\nfunction create$1() {\n  var dq = new ARRAY_TYPE(8);\n\n  if (ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nfunction clone$1(a) {\n  var dq = new ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nfunction fromValues$1(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = create$2();\n  getRotation(outer, a);\n  var t = new ARRAY_TYPE(3);\n  getTranslation$1(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\n\nfunction copy$1(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\n\nfunction set$1(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\n\nvar getReal = copy$2;\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\n\nvar setReal = copy$2;\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  rotateX$1(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  rotateY$1(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  rotateZ$1(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < EPSILON) {\n    return copy$1(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\n\nfunction add$1(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\n\nfunction multiply$1(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\n\nvar mul$1 = multiply$1;\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\n\nfunction scale$1(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nvar dot$1 = dot$2;\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\n\nfunction lerp$1(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot$1(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\n\nfunction invert(out, a) {\n  var sqlen = squaredLength$1(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\n\nvar length$1 = length$2;\n/**\n * Alias for {@link quat2.length}\n * @function\n */\n\nvar len$1 = length$1;\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nvar squaredLength$1 = squaredLength$2;\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\n\nvar sqrLen$1 = squaredLength$1;\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\n\nfunction normalize$1(out, a) {\n  var magnitude = squaredLength$1(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\n\nfunction str$1(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\n\nfunction exactEquals$1(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\n\nfunction equals$1(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}\n\nvar quat2 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$1,\n   clone: clone$1,\n   fromValues: fromValues$1,\n   fromRotationTranslationValues: fromRotationTranslationValues,\n   fromRotationTranslation: fromRotationTranslation,\n   fromTranslation: fromTranslation,\n   fromRotation: fromRotation,\n   fromMat4: fromMat4,\n   copy: copy$1,\n   identity: identity,\n   set: set$1,\n   getReal: getReal,\n   getDual: getDual,\n   setReal: setReal,\n   setDual: setDual,\n   getTranslation: getTranslation,\n   translate: translate,\n   rotateX: rotateX,\n   rotateY: rotateY,\n   rotateZ: rotateZ,\n   rotateByQuatAppend: rotateByQuatAppend,\n   rotateByQuatPrepend: rotateByQuatPrepend,\n   rotateAroundAxis: rotateAroundAxis,\n   add: add$1,\n   multiply: multiply$1,\n   mul: mul$1,\n   scale: scale$1,\n   dot: dot$1,\n   lerp: lerp$1,\n   invert: invert,\n   conjugate: conjugate,\n   length: length$1,\n   len: len$1,\n   squaredLength: squaredLength$1,\n   sqrLen: sqrLen$1,\n   normalize: normalize$1,\n   str: str$1,\n   exactEquals: exactEquals$1,\n   equals: equals$1\n});\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nfunction create() {\n  var out = new ARRAY_TYPE(2);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nfunction clone(a) {\n  var out = new ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nfunction fromValues(x, y) {\n  var out = new ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nvar len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nvar sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nvar div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nvar dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nvar sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nvar sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\nvar vec2 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create,\n   clone: clone,\n   fromValues: fromValues,\n   copy: copy,\n   set: set,\n   add: add,\n   subtract: subtract,\n   multiply: multiply,\n   divide: divide,\n   ceil: ceil,\n   floor: floor,\n   min: min,\n   max: max,\n   round: round,\n   scale: scale,\n   scaleAndAdd: scaleAndAdd,\n   distance: distance,\n   squaredDistance: squaredDistance,\n   length: length,\n   squaredLength: squaredLength,\n   negate: negate,\n   inverse: inverse,\n   normalize: normalize,\n   dot: dot,\n   cross: cross,\n   lerp: lerp,\n   random: random,\n   transformMat2: transformMat2,\n   transformMat2d: transformMat2d,\n   transformMat3: transformMat3,\n   transformMat4: transformMat4,\n   rotate: rotate,\n   angle: angle,\n   zero: zero,\n   str: str,\n   exactEquals: exactEquals,\n   equals: equals,\n   len: len,\n   sub: sub,\n   mul: mul,\n   div: div,\n   dist: dist,\n   sqrDist: sqrDist,\n   sqrLen: sqrLen,\n   forEach: forEach\n});\n\n/**\r\n * Provides a way to calculate velocity via effectively creating a \"complementary filter\".\r\n *\r\n * `velQuick` and `velSmooth` separately accumulate over time. `velInstant` and `velUsed` do not accumulate and are\r\n * discarded each update. `velQuick` is responsive, but noisy. `velSmooth` is laggy but eventually more accurate. By\r\n * tracking them separately the used result can be responsive in the short term and accurate in the long term.\r\n *\r\n * TODO: This class will be moved to a final location in the @typhonjs-svelte/lib/math package.\r\n */\r\nclass TJSVelocityTrack\r\n{\r\n   /** @type {number} */\r\n   #lastSampleTime;\r\n\r\n   /**\r\n    * Tracks the last sample point.\r\n    *\r\n    * @type {{x: number, y: number, z: number}}\r\n    */\r\n   #lastSamplePoint = { x: 0, y: 0, z: 0 };\r\n\r\n   /**\r\n    * Defines the settle time in milliseconds that resets any tracked velocity state.\r\n    *\r\n    * @type {number}\r\n    */\r\n   #resetDeltaTime;\r\n\r\n   /**\r\n    * Stores the scaling conversion for used velocity calculation. By default, this is 1000 which converts the velocity\r\n    * calculation to velocity per second. Set to `1` for instance for velocity per millisecond.\r\n    *\r\n    * @type {number}\r\n    */\r\n   #scaleTime;\r\n\r\n   /**\r\n    * Stores the instant velocity between current and last sample point.\r\n    *\r\n    * @type {{x: number, y: number, z: number}}\r\n    */\r\n   #velInstant = { x: 0, y: 0, z: 0 };\r\n\r\n   /**\r\n    * Stores the `quick` running calculated velocity.\r\n    *\r\n    * @type {{x: number, y: number, z: number}}\r\n    */\r\n   #velQuick = { x: 0, y: 0, z: 0 };\r\n\r\n   /**\r\n    * Stores the `smooth` running calculated velocity.\r\n    *\r\n    * @type {{x: number, y: number, z: number}}\r\n    */\r\n   #velSmooth = { x: 0, y: 0, z: 0 };\r\n\r\n   /**\r\n    * Stores the mix between `quick` and `smooth` running velocity.\r\n    *\r\n    * @type {{x: number, y: number, z: number}}\r\n    */\r\n   #velUsed = { x: 0, y: 0, z: 0 };\r\n\r\n   /**\r\n    * Creates a velocity tracker instance.\r\n    *\r\n    * @param {object}   [opts] - Optional parameters.\r\n    *\r\n    * @param {number}   [opts.resetDeltaTime=50] - Delta time in milliseconds that resets velocity tracking.\r\n    *\r\n    * @param {number}   [opts.scaleTime=1000] - Scales velocity calculation to new time frame. 1000 is velocity per\r\n    *                                           second.\r\n    */\r\n   constructor({ resetDeltaTime = 50, scaleTime = 1000 } = {})\r\n   {\r\n      this.resetDeltaTime = resetDeltaTime;\r\n      this.scaleTime = scaleTime;\r\n\r\n      Object.seal(this.#velUsed);\r\n   }\r\n\r\n   /**\r\n    * @returns {number} Gets `resetDeltaTime`.\r\n    */\r\n   get resetDeltaTime() { return this.#resetDeltaTime; }\r\n\r\n   /**\r\n    * @returns {number} Gets `scaleTime`.\r\n    */\r\n   get scaleTime() { return this.#scaleTime; }\r\n\r\n   /**\r\n    * Sets `resetDeltaTime`.\r\n    *\r\n    * @param {number}   resetDeltaTime - Delta time in milliseconds that resets velocity tracking.\r\n    */\r\n   set resetDeltaTime(resetDeltaTime)\r\n   {\r\n      if (!Number.isFinite(resetDeltaTime) || resetDeltaTime < 0)\r\n      {\r\n         throw new TypeError(`'resetDeltaTime' is not a positive finite number.`);\r\n      }\r\n\r\n      this.#resetDeltaTime = resetDeltaTime;\r\n   }\r\n\r\n   /**\r\n    * Sets `scaleTime`.\r\n    *\r\n    * @param {number}   scaleTime - Scales velocity calculation to new time frame. 1000 is velocity per second.\r\n    */\r\n   set scaleTime(scaleTime)\r\n   {\r\n      if (!Number.isFinite(scaleTime) || scaleTime < 0)\r\n      {\r\n         throw new TypeError(`'scaleTime' is not a positive finite number.`);\r\n      }\r\n\r\n      this.#scaleTime = scaleTime;\r\n   }\r\n\r\n   /**\r\n    * Resets velocity tracking data.\r\n    *\r\n    * @param {number}   [x=0] - 'X' value to set to last sample point.\r\n    *\r\n    * @param {number}   [y=0] - 'Y' value to set to last sample point.\r\n    *\r\n    * @param {number}   [z=0] - 'Z' value to set to last sample point.\r\n    *\r\n    * @param {number}   [sampleTime=performance.now()] - A sample time in milliseconds resolution.\r\n    */\r\n   reset(x = 0, y = 0, z = 0, sampleTime = performance.now())\r\n   {\r\n      if (!Number.isFinite(x)) { throw new TypeError(`'x' is not a finite number.`); }\r\n      if (!Number.isFinite(y)) { throw new TypeError(`'y' is not a finite number.`); }\r\n      if (!Number.isFinite(z)) { throw new TypeError(`'z' is not a finite number.`); }\r\n      if (!Number.isFinite(sampleTime)) { throw new TypeError(`'sampleTime' is not a finite number.`); }\r\n\r\n      // Reset velocity tracking variables.\r\n      this.#lastSampleTime = sampleTime;\r\n\r\n      this.#lastSamplePoint.x = x;\r\n      this.#lastSamplePoint.y = y;\r\n      this.#lastSamplePoint.z = z;\r\n\r\n      this.#velInstant.x = this.#velQuick.x = this.#velSmooth.x = this.#velUsed.x = 0;\r\n      this.#velInstant.y = this.#velQuick.y = this.#velSmooth.y = this.#velUsed.y = 0;\r\n      this.#velInstant.z = this.#velQuick.z = this.#velSmooth.z = this.#velUsed.z = 0;\r\n   }\r\n\r\n   /**\r\n    * Runs ongoing velocity calculation of x / y / z given a sample time.\r\n    *\r\n    * @param {number|undefined}  x - New sample X\r\n    *\r\n    * @param {number|undefined}  y - New sample Y\r\n    *\r\n    * @param {number|undefined}  z - New sample Z\r\n    *\r\n    * @param {number}            [sampleTime=performance.now()] - An optional specific time w/ millisecond resolution.\r\n    *\r\n    * @returns {{x: number, y: number, z: number}} current velocity.\r\n    */\r\n   update(x = void 0, y = void 0, z = void 0, sampleTime = performance.now())\r\n   {\r\n      if (!Number.isFinite(sampleTime)) { throw new TypeError(`'sampleTime' is not a finite number.`); }\r\n\r\n      const deltaTime = sampleTime - this.#lastSampleTime + Number.EPSILON;\r\n      this.#lastSampleTime = sampleTime;\r\n\r\n      // Reset velocity tracking if the delta time is greater than `resetDeltaTime`.\r\n      if (deltaTime > this.#resetDeltaTime)\r\n      {\r\n         this.reset(x, y, z, sampleTime);\r\n         return this.#velUsed;\r\n      }\r\n\r\n      if (Number.isFinite(x))\r\n      {\r\n         this.#velInstant.x = (x - this.#lastSamplePoint.x) / deltaTime;\r\n\r\n         this.#lastSamplePoint.x = x;\r\n\r\n         this.#velQuick.x = lerp$5(this.#velQuick.x, this.#velInstant.x, 0.1);\r\n         this.#velSmooth.x = lerp$5(this.#velSmooth.x, this.#velInstant.x, 0.01);\r\n         this.#velUsed.x = lerp$5(this.#velSmooth.x, this.#velQuick.x, 0.5) * this.#scaleTime;\r\n      }\r\n\r\n      if (Number.isFinite(y))\r\n      {\r\n         this.#velInstant.y = (y - this.#lastSamplePoint.y) / deltaTime;\r\n\r\n         this.#lastSamplePoint.y = y;\r\n\r\n         this.#velQuick.y = lerp$5(this.#velQuick.y, this.#velInstant.y, 0.1);\r\n         this.#velSmooth.y = lerp$5(this.#velSmooth.y, this.#velInstant.y, 0.01);\r\n\r\n         this.#velUsed.y = lerp$5(this.#velSmooth.y, this.#velQuick.y, 0.5) * this.#scaleTime;\r\n      }\r\n\r\n      if (Number.isFinite(z))\r\n      {\r\n         this.#velInstant.z = (z - this.#lastSamplePoint.z) / deltaTime;\r\n\r\n         this.#lastSamplePoint.z = z;\r\n\r\n         this.#velQuick.z = lerp$5(this.#velQuick.z, this.#velInstant.z, 0.1);\r\n         this.#velSmooth.z = lerp$5(this.#velSmooth.z, this.#velInstant.z, 0.01);\r\n         this.#velUsed.z = lerp$5(this.#velSmooth.z, this.#velQuick.z, 0.5) * this.#scaleTime;\r\n      }\r\n\r\n      return this.#velUsed;\r\n   }\r\n\r\n   /**\r\n    * Gets the current velocity tracking data.\r\n    *\r\n    * @returns {{x: number, y: number, z: number}} Velocity tracking data.\r\n    */\r\n   get()\r\n   {\r\n      this.#velUsed.x = lerp$5(this.#velSmooth.x, this.#velQuick.x, 0.5) * this.#scaleTime;\r\n      this.#velUsed.y = lerp$5(this.#velSmooth.y, this.#velQuick.y, 0.5) * this.#scaleTime;\r\n      this.#velUsed.z = lerp$5(this.#velSmooth.z, this.#velQuick.z, 0.5) * this.#scaleTime;\r\n\r\n      return this.#velUsed;\r\n   }\r\n}\n\nexport { TJSVelocityTrack, degToRad, common as glMatrix, lerp$5 as lerp, mat2, mat2d, mat3, mat4, quat, quat2, radToDeg, vec2, vec3, vec4 };\n//# sourceMappingURL=index.js.map\n","/**\r\n * Provides a basic {@link TJSBasicAnimation} implementation for Position animation.\r\n */\r\nexport class AnimationControl\r\n{\r\n   /** @type {object} */\r\n   #animationData;\r\n\r\n   /** @type {Promise<void>} */\r\n   #finishedPromise;\r\n\r\n   #willFinish;\r\n\r\n   /**\r\n    * Defines a static empty / void animation control.\r\n    *\r\n    * @type {AnimationControl}\r\n    */\r\n   static #voidControl = new AnimationControl(null);\r\n\r\n   /**\r\n    * Provides a static void / undefined AnimationControl that is automatically resolved.\r\n    *\r\n    * @returns {AnimationControl} Void AnimationControl\r\n    */\r\n   static get voidControl() { return this.#voidControl; }\r\n\r\n   /**\r\n    * @param {object|null} [animationData] - Animation data from {@link AnimationAPI}.\r\n    *\r\n    * @param {boolean}     [willFinish] - Promise that tracks animation finished state.\r\n    */\r\n   constructor(animationData, willFinish = false)\r\n   {\r\n      this.#animationData = animationData;\r\n      this.#willFinish = willFinish;\r\n\r\n      // Set this control to animation data.\r\n      if (animationData !== null && typeof animationData === 'object')\r\n      {\r\n         animationData.control = this;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Get a promise that resolves when animation is finished.\r\n    *\r\n    * @returns {Promise<void>}\r\n    */\r\n   get finished()\r\n   {\r\n      if (!(this.#finishedPromise instanceof Promise))\r\n      {\r\n         this.#finishedPromise = this.#willFinish ? new Promise((resolve) => this.#animationData.resolve = resolve) :\r\n          Promise.resolve();\r\n      }\r\n\r\n      return this.#finishedPromise;\r\n   }\r\n\r\n   /**\r\n    * Returns whether this animation is currently active / animating.\r\n    *\r\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationControl.isFinished} to determine\r\n    * if an animation is actually finished.\r\n    *\r\n    * @returns {boolean} Animation active state.\r\n    */\r\n   get isActive() { return this.#animationData.active; }\r\n\r\n   /**\r\n    * Returns whether this animation is completely finished.\r\n    *\r\n    * @returns {boolean} Animation finished state.\r\n    */\r\n   get isFinished() { return this.#animationData.finished; }\r\n\r\n   /**\r\n    * Cancels the animation.\r\n    */\r\n   cancel()\r\n   {\r\n      const animationData = this.#animationData;\r\n\r\n      if (animationData === null || animationData === void 0) { return; }\r\n\r\n      // Set cancelled state to true and this animation data instance will be removed from AnimationManager on next\r\n      // update.\r\n      animationData.cancelled = true;\r\n   }\r\n}\r\n","/**\r\n * Provides animation management and scheduling allowing all Position instances to utilize one micro-task.\r\n */\r\nexport class AnimationManager\r\n{\r\n   /**\r\n    * @type {object[]}\r\n    */\r\n   static activeList = [];\r\n\r\n   /**\r\n    * @type {object[]}\r\n    */\r\n   static newList = [];\r\n\r\n   /**\r\n    * @type {number}\r\n    */\r\n   static current;\r\n\r\n   /**\r\n    * Add animation data.\r\n    *\r\n    * @param {object}   data -\r\n    */\r\n   static add(data)\r\n   {\r\n      const now = performance.now();\r\n\r\n      // Offset start time by delta between last rAF time. This allows continuous tween cycles to appear naturally as\r\n      // starting from the instant they are added to the AnimationManager. This is what makes `draggable` smooth when\r\n      // easing is enabled.\r\n      data.start = now + (AnimationManager.current - now);\r\n\r\n      AnimationManager.newList.push(data);\r\n   }\r\n\r\n   /**\r\n    * Manage all animation\r\n    */\r\n   static animate()\r\n   {\r\n      const current = AnimationManager.current = performance.now();\r\n\r\n      // Early out of the rAF callback when there are no current animations.\r\n      if (AnimationManager.activeList.length === 0 && AnimationManager.newList.length === 0)\r\n      {\r\n         globalThis.requestAnimationFrame(AnimationManager.animate);\r\n         return;\r\n      }\r\n\r\n      if (AnimationManager.newList.length)\r\n      {\r\n         // Process new data\r\n         for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\r\n         {\r\n            const data = AnimationManager.newList[cntr];\r\n\r\n            // If animation instance has been cancelled before start then remove it from new list and cleanup.\r\n            if (data.cancelled)\r\n            {\r\n               AnimationManager.newList.splice(cntr, 1);\r\n               data.cleanup(data);\r\n            }\r\n\r\n            // If data is active then process it now. Delayed animations start with `active` false.\r\n            if (data.active)\r\n            {\r\n               // Remove from new list and add to active list.\r\n               AnimationManager.newList.splice(cntr, 1);\r\n               AnimationManager.activeList.push(data);\r\n            }\r\n         }\r\n      }\r\n\r\n      // Process active animations.\r\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\r\n      {\r\n         const data = AnimationManager.activeList[cntr];\r\n\r\n         // Remove any animations that have been canceled.\r\n         // Ensure that the element is still connected otherwise remove it from active list and continue.\r\n         if (data.cancelled || (data.el !== void 0 && !data.el.isConnected))\r\n         {\r\n            AnimationManager.activeList.splice(cntr, 1);\r\n            data.cleanup(data);\r\n            continue;\r\n         }\r\n\r\n         data.current = current - data.start;\r\n\r\n         // Remove this animation instance if current animating time exceeds duration.\r\n         if (data.current >= data.duration)\r\n         {\r\n            // Prepare final update with end position data.\r\n            for (let dataCntr = data.keys.length; --dataCntr >= 0;)\r\n            {\r\n               const key = data.keys[dataCntr];\r\n               data.newData[key] = data.destination[key];\r\n            }\r\n\r\n            data.position.set(data.newData);\r\n\r\n            AnimationManager.activeList.splice(cntr, 1);\r\n            data.cleanup(data);\r\n\r\n            continue;\r\n         }\r\n\r\n         // Apply easing to create an eased time.\r\n         const easedTime = data.ease(data.current / data.duration);\r\n\r\n         for (let dataCntr = data.keys.length; --dataCntr >= 0;)\r\n         {\r\n            const key = data.keys[dataCntr];\r\n            data.newData[key] = data.interpolate(data.initial[key], data.destination[key], easedTime);\r\n         }\r\n\r\n         data.position.set(data.newData);\r\n      }\r\n\r\n      globalThis.requestAnimationFrame(AnimationManager.animate);\r\n   }\r\n\r\n   /**\r\n    * Cancels all animations for given Position instance.\r\n    *\r\n    * @param {Position} position - Position instance.\r\n    */\r\n   static cancel(position)\r\n   {\r\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\r\n      {\r\n         const data = AnimationManager.activeList[cntr];\r\n         if (data.position === position)\r\n         {\r\n            AnimationManager.activeList.splice(cntr, 1);\r\n            data.cancelled = true;\r\n            data.cleanup(data);\r\n         }\r\n      }\r\n\r\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\r\n      {\r\n         const data = AnimationManager.newList[cntr];\r\n         if (data.position === position)\r\n         {\r\n            AnimationManager.newList.splice(cntr, 1);\r\n            data.cancelled = true;\r\n            data.cleanup(data);\r\n         }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Cancels all active and delayed animations.\r\n    */\r\n   static cancelAll()\r\n   {\r\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\r\n      {\r\n         const data = AnimationManager.activeList[cntr];\r\n         data.cancelled = true;\r\n         data.cleanup(data);\r\n      }\r\n\r\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\r\n      {\r\n         const data = AnimationManager.newList[cntr];\r\n         data.cancelled = true;\r\n         data.cleanup(data);\r\n      }\r\n\r\n      AnimationManager.activeList.length = 0;\r\n      AnimationManager.newList.length = 0;\r\n   }\r\n\r\n   /**\r\n    * Gets all {@link AnimationControl} instances for a given Position instance.\r\n    *\r\n    * @param {Position} position - Position instance.\r\n    *\r\n    * @returns {AnimationControl[]} All scheduled AnimationControl instances for the given Position instance.\r\n    */\r\n   static getScheduled(position)\r\n   {\r\n      const results = [];\r\n\r\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\r\n      {\r\n         const data = AnimationManager.activeList[cntr];\r\n         if (data.position === position)\r\n         {\r\n            results.push(data.control);\r\n         }\r\n      }\r\n\r\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\r\n      {\r\n         const data = AnimationManager.newList[cntr];\r\n         if (data.position === position)\r\n         {\r\n            results.push(data.control);\r\n         }\r\n      }\r\n\r\n      return results;\r\n   }\r\n}\r\n\r\n// Start animation manager immediately. It constantly is running in background.\r\nAnimationManager.animate();\r\n","/**\r\n * Stores the PositionData properties that can be animated.\r\n *\r\n * @type {Set<string>}\r\n */\r\nconst animateKeys = new Set([\r\n   // Main keys\r\n   'left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\r\n   'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ', 'zIndex',\r\n\r\n   // Aliases\r\n   'rotation'\r\n]);\r\n\r\n/**\r\n * Defines the keys of PositionData that are transform keys.\r\n *\r\n * @type {string[]}\r\n */\r\nconst transformKeys = ['rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ'];\r\n\r\nObject.freeze(transformKeys);\r\n\r\n/**\r\n * Parses a relative value string in the form of '+=', '-=', or '*=' and float / numeric value. IE '+=0.2'.\r\n *\r\n * @type {RegExp}\r\n */\r\nconst relativeRegex = /^([-+*])=(-?[\\d]*\\.?[\\d]+)$/;\r\n\r\n/**\r\n * Provides numeric defaults for all parameters. This is used by {@link Position.get} to optionally provide\r\n * numeric defaults.\r\n *\r\n * @type {{rotation: number, scale: number, minWidth: null, minHeight: null, translateZ: number, top: number, left: number, maxHeight: null, translateY: number, translateX: number, width: number, transformOrigin: null, rotateX: number, rotateY: number, height: number, maxWidth: null, zIndex: null, rotateZ: number}}\r\n */\r\nconst numericDefaults = {\r\n   // Other keys\r\n   height: 0,\r\n   left: 0,\r\n   maxHeight: null,\r\n   maxWidth: null,\r\n   minHeight: null,\r\n   minWidth: null,\r\n   top: 0,\r\n   transformOrigin: null,\r\n   width: 0,\r\n   zIndex: null,\r\n\r\n   rotateX: 0,\r\n   rotateY: 0,\r\n   rotateZ: 0,\r\n   scale: 1,\r\n   translateX: 0,\r\n   translateY: 0,\r\n   translateZ: 0,\r\n\r\n   rotation: 0\r\n};\r\n\r\nObject.freeze(numericDefaults);\r\n\r\n/**\r\n * Sets numeric defaults for a {@link PositionData} like object.\r\n *\r\n * @param {object}   data - A PositionData like object.\r\n */\r\nfunction setNumericDefaults(data)\r\n{\r\n   // Transform keys\r\n   if (data.rotateX === null) { data.rotateX = 0; }\r\n   if (data.rotateY === null) { data.rotateY = 0; }\r\n   if (data.rotateZ === null) { data.rotateZ = 0; }\r\n   if (data.translateX === null) { data.translateX = 0; }\r\n   if (data.translateY === null) { data.translateY = 0; }\r\n   if (data.translateZ === null) { data.translateZ = 0; }\r\n   if (data.scale === null) { data.scale = 1; }\r\n\r\n   // Aliases\r\n   if (data.rotation === null) { data.rotation = 0; }\r\n}\r\n\r\n/**\r\n * Defines bitwise keys for transforms used in {@link Transforms.getMat4}.\r\n *\r\n * @type {object}\r\n */\r\nconst transformKeysBitwise = {\r\n   rotateX: 1,\r\n   rotateY: 2,\r\n   rotateZ: 4,\r\n   scale: 8,\r\n   translateX: 16,\r\n   translateY: 32,\r\n   translateZ: 64\r\n};\r\n\r\nObject.freeze(transformKeysBitwise);\r\n\r\n/**\r\n * Defines the default transform origin.\r\n *\r\n * @type {string}\r\n */\r\nconst transformOriginDefault = 'top left';\r\n\r\n/**\r\n * Defines the valid transform origins.\r\n *\r\n * @type {string[]}\r\n */\r\nconst transformOrigins = ['top left', 'top center', 'top right', 'center left', 'center', 'center right', 'bottom left',\r\n 'bottom center', 'bottom right'];\r\n\r\nObject.freeze(transformOrigins);\r\n\r\nexport {\r\n   animateKeys,\r\n   numericDefaults,\r\n   relativeRegex,\r\n   setNumericDefaults,\r\n   transformKeys,\r\n   transformKeysBitwise,\r\n   transformOriginDefault,\r\n   transformOrigins\r\n};\r\n","import * as constants from './constants.js';\r\n\r\n/**\r\n * Converts any relative string values for animatable keys to actual updates performed against current data.\r\n *\r\n * @param {PositionDataExtended}    positionData - position data.\r\n *\r\n * @param {Position|PositionData}   position - The source position instance.\r\n */\r\nexport function convertRelative(positionData, position)\r\n{\r\n   for (const key in positionData)\r\n   {\r\n      // Key is animatable / numeric.\r\n      if (constants.animateKeys.has(key))\r\n      {\r\n         const value = positionData[key];\r\n\r\n         if (typeof value !== 'string') { continue; }\r\n\r\n         // Ignore 'auto' and 'inherit' string values.\r\n         if (value === 'auto' || value === 'inherit') { continue; }\r\n\r\n         const regexResults = constants.relativeRegex.exec(value);\r\n\r\n         if (!regexResults)\r\n         {\r\n            throw new Error(\r\n             `convertRelative error: malformed relative key (${key}) with value (${value})`);\r\n         }\r\n\r\n         const current = position[key];\r\n\r\n         switch (regexResults[1])\r\n         {\r\n            case '-':\r\n               positionData[key] = current - parseFloat(regexResults[2]);\r\n               break;\r\n\r\n            case '+':\r\n               positionData[key] = current + parseFloat(regexResults[2]);\r\n               break;\r\n\r\n            case '*':\r\n               positionData[key] = current * parseFloat(regexResults[2]);\r\n               break;\r\n         }\r\n      }\r\n   }\r\n}\r\n","import { cubicOut }           from 'svelte/easing';\r\n\r\nimport { lerp }               from '@typhonjs-fvtt/runtime/svelte/math';\r\nimport {\r\n   isIterable,\r\n   isObject }                 from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\nimport { AnimationControl }   from './AnimationControl.js';\r\nimport { AnimationManager }   from './AnimationManager.js';\r\n\r\nimport { convertRelative }    from '../convertRelative.js';\r\n\r\nimport {\r\n   animateKeys,\r\n   setNumericDefaults }       from '../constants.js';\r\n\r\nexport class AnimationAPI\r\n{\r\n   /** @type {PositionData} */\r\n   #data;\r\n\r\n   /** @type {Position} */\r\n   #position;\r\n\r\n   /**\r\n    * Tracks the number of animation control instances that are active.\r\n    *\r\n    * @type {number}\r\n    */\r\n   #instanceCount = 0;\r\n\r\n   /**\r\n    * Provides a bound function to pass as data to AnimationManager to invoke\r\n    *\r\n    * @type {Function}\r\n    * @see {AnimationAPI.#cleanupInstance}\r\n    */\r\n   #cleanup;\r\n\r\n   constructor(position, data)\r\n   {\r\n      this.#position = position;\r\n      this.#data = data;\r\n\r\n      this.#cleanup = this.#cleanupInstance.bind(this);\r\n   }\r\n\r\n   /**\r\n    * Returns whether there are scheduled animations whether active or delayed for this Position.\r\n    *\r\n    * @returns {boolean} Are there active animation instances.\r\n    */\r\n   get isScheduled()\r\n   {\r\n      return this.#instanceCount > 0;\r\n   }\r\n\r\n   /**\r\n    * Adds / schedules an animation w/ the AnimationManager. This contains the final steps common to all tweens.\r\n    *\r\n    * @param {object}      initial -\r\n    *\r\n    * @param {object}      destination -\r\n    *\r\n    * @param {number}      duration -\r\n    *\r\n    * @param {HTMLElement} el -\r\n    *\r\n    * @param {number}      delay -\r\n    *\r\n    * @param {Function}    ease -\r\n    *\r\n    * @param {Function}    interpolate -\r\n    *\r\n    * @returns {AnimationControl} The associated animation control.\r\n    */\r\n   #addAnimation(initial, destination, duration, el, delay, ease, interpolate)\r\n   {\r\n      // Set initial data for transform values that are often null by default.\r\n      setNumericDefaults(initial);\r\n      setNumericDefaults(destination);\r\n\r\n      // Reject all initial data that is not a number.\r\n      for (const key in initial)\r\n      {\r\n         if (!Number.isFinite(initial[key])) { delete initial[key]; }\r\n      }\r\n\r\n      const keys = Object.keys(initial);\r\n      const newData = Object.assign({ immediateElementUpdate: true }, initial);\r\n\r\n      // Nothing to animate, so return now.\r\n      if (keys.length === 0) { return AnimationControl.voidControl; }\r\n\r\n      const animationData = {\r\n         active: true,\r\n         cleanup: this.#cleanup,\r\n         cancelled: false,\r\n         control: void 0,\r\n         current: 0,\r\n         destination,\r\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\r\n         ease,\r\n         el,\r\n         finished: false,\r\n         initial,\r\n         interpolate,\r\n         keys,\r\n         newData,\r\n         position: this.#position,\r\n         resolve: void 0,\r\n         start: void 0\r\n      };\r\n\r\n      if (delay > 0)\r\n      {\r\n         animationData.active = false;\r\n\r\n         // Delay w/ setTimeout and schedule w/ AnimationManager if not already canceled\r\n         setTimeout(() =>\r\n         {\r\n            if (!animationData.cancelled)\r\n            {\r\n               animationData.active = true;\r\n\r\n               const now = performance.now();\r\n\r\n               // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\r\n               // precise delayed time.\r\n               animationData.start = now + (AnimationManager.current - now);\r\n            }\r\n         }, delay * 1000);\r\n      }\r\n\r\n      // Schedule immediately w/ AnimationManager\r\n      this.#instanceCount++;\r\n      AnimationManager.add(animationData);\r\n\r\n      // Create animation control\r\n      return new AnimationControl(animationData, true);\r\n   }\r\n\r\n   /**\r\n    * Cancels all animation instances for this Position instance.\r\n    */\r\n   cancel()\r\n   {\r\n      AnimationManager.cancel(this.#position);\r\n   }\r\n\r\n   /**\r\n    * Cleans up an animation instance.\r\n    *\r\n    * @param {object}   data - Animation data for an animation instance.\r\n    */\r\n   #cleanupInstance(data)\r\n   {\r\n      this.#instanceCount--;\r\n\r\n      data.active = false;\r\n      data.finished = true;\r\n\r\n      if (typeof data.resolve === 'function') { data.resolve(data.cancelled); }\r\n   }\r\n\r\n   /**\r\n    * Returns all currently scheduled AnimationControl instances for this Position instance.\r\n    *\r\n    * @returns {AnimationControl[]} All currently scheduled animation controls for this Position instance.\r\n    */\r\n   getScheduled()\r\n   {\r\n      return AnimationManager.getScheduled(this.#position);\r\n   }\r\n\r\n   /**\r\n    * Provides a tween from given position data to the current position.\r\n    *\r\n    * @param {PositionDataExtended} fromData - The starting position.\r\n    *\r\n    * @param {object}         [opts] - Optional parameters.\r\n    *\r\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\r\n    *\r\n    * @param {number}         [opts.duration=1] - Duration in seconds.\r\n    *\r\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\r\n    *\r\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\r\n    *\r\n    * @returns {AnimationControl}  A control object that can cancel animation and provides a `finished` Promise.\r\n    */\r\n   from(fromData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\r\n   {\r\n      if (!isObject(fromData))\r\n      {\r\n         throw new TypeError(`AnimationAPI.from error: 'fromData' is not an object.`);\r\n      }\r\n\r\n      const position = this.#position;\r\n      const parent = position.parent;\r\n\r\n      // Early out if the application is not positionable.\r\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\r\n      {\r\n         return AnimationControl.voidControl;\r\n      }\r\n\r\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\r\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\r\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\r\n\r\n      if (!Number.isFinite(delay) || delay < 0)\r\n      {\r\n         throw new TypeError(`AnimationAPI.from error: 'delay' is not a positive number.`);\r\n      }\r\n\r\n      if (!Number.isFinite(duration) || duration < 0)\r\n      {\r\n         throw new TypeError(`AnimationAPI.from error: 'duration' is not a positive number.`);\r\n      }\r\n\r\n      if (typeof ease !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationAPI.from error: 'ease' is not a function.`);\r\n      }\r\n\r\n      if (typeof interpolate !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationAPI.from error: 'interpolate' is not a function.`);\r\n      }\r\n\r\n      const initial = {};\r\n      const destination = {};\r\n\r\n      const data = this.#data;\r\n\r\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\r\n      for (const key in fromData)\r\n      {\r\n         if (data[key] !== void 0 && fromData[key] !== data[key])\r\n         {\r\n            initial[key] = fromData[key];\r\n            destination[key] = data[key];\r\n         }\r\n      }\r\n\r\n      convertRelative(initial, data);\r\n\r\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\r\n   }\r\n\r\n   /**\r\n    * Provides a tween from given position data to the current position.\r\n    *\r\n    * @param {PositionDataExtended} fromData - The starting position.\r\n    *\r\n    * @param {PositionDataExtended} toData - The ending position.\r\n    *\r\n    * @param {object}         [opts] - Optional parameters.\r\n    *\r\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\r\n    *\r\n    * @param {number}         [opts.duration=1] - Duration in seconds.\r\n    *\r\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\r\n    *\r\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\r\n    *\r\n    * @returns {AnimationControl}  A control object that can cancel animation and provides a `finished` Promise.\r\n    */\r\n   fromTo(fromData, toData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\r\n   {\r\n      if (!isObject(fromData))\r\n      {\r\n         throw new TypeError(`AnimationAPI.fromTo error: 'fromData' is not an object.`);\r\n      }\r\n\r\n      if (!isObject(toData))\r\n      {\r\n         throw new TypeError(`AnimationAPI.fromTo error: 'toData' is not an object.`);\r\n      }\r\n\r\n      const parent = this.#position.parent;\r\n\r\n      // Early out if the application is not positionable.\r\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\r\n      {\r\n         return AnimationControl.voidControl;\r\n      }\r\n\r\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\r\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\r\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\r\n\r\n      if (!Number.isFinite(delay) || delay < 0)\r\n      {\r\n         throw new TypeError(`AnimationAPI.fromTo error: 'delay' is not a positive number.`);\r\n      }\r\n\r\n      if (!Number.isFinite(duration) || duration < 0)\r\n      {\r\n         throw new TypeError(`AnimationAPI.fromTo error: 'duration' is not a positive number.`);\r\n      }\r\n\r\n      if (typeof ease !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationAPI.fromTo error: 'ease' is not a function.`);\r\n      }\r\n\r\n      if (typeof interpolate !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationAPI.fromTo error: 'interpolate' is not a function.`);\r\n      }\r\n\r\n      const initial = {};\r\n      const destination = {};\r\n\r\n      const data = this.#data;\r\n\r\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\r\n      for (const key in fromData)\r\n      {\r\n         if (toData[key] === void 0)\r\n         {\r\n            console.warn(\r\n             `AnimationAPI.fromTo warning: key ('${key}') from 'fromData' missing in 'toData'; skipping this key.`);\r\n            continue;\r\n         }\r\n\r\n         if (data[key] !== void 0)\r\n         {\r\n            initial[key] = fromData[key];\r\n            destination[key] = toData[key];\r\n         }\r\n      }\r\n\r\n      convertRelative(initial, data);\r\n      convertRelative(destination, data);\r\n\r\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\r\n   }\r\n\r\n   /**\r\n    * Provides a tween to given position data from the current position.\r\n    *\r\n    * @param {PositionDataExtended} toData - The destination position.\r\n    *\r\n    * @param {object}         [opts] - Optional parameters.\r\n    *\r\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\r\n    *\r\n    * @param {number}         [opts.duration=1] - Duration in seconds.\r\n    *\r\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\r\n    *\r\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\r\n    *\r\n    * @returns {AnimationControl}  A control object that can cancel animation and provides a `finished` Promise.\r\n    */\r\n   to(toData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\r\n   {\r\n      if (!isObject(toData))\r\n      {\r\n         throw new TypeError(`AnimationAPI.to error: 'toData' is not an object.`);\r\n      }\r\n\r\n      const parent = this.#position.parent;\r\n\r\n      // Early out if the application is not positionable.\r\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\r\n      {\r\n         return AnimationControl.voidControl;\r\n      }\r\n\r\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\r\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\r\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\r\n\r\n      if (!Number.isFinite(delay) || delay < 0)\r\n      {\r\n         throw new TypeError(`AnimationAPI.to error: 'delay' is not a positive number.`);\r\n      }\r\n\r\n      if (!Number.isFinite(duration) || duration < 0)\r\n      {\r\n         throw new TypeError(`AnimationAPI.to error: 'duration' is not a positive number.`);\r\n      }\r\n\r\n      if (typeof ease !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationAPI.to error: 'ease' is not a function.`);\r\n      }\r\n\r\n      if (typeof interpolate !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationAPI.to error: 'interpolate' is not a function.`);\r\n      }\r\n\r\n      const initial = {};\r\n      const destination = {};\r\n\r\n      const data = this.#data;\r\n\r\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\r\n      for (const key in toData)\r\n      {\r\n         if (data[key] !== void 0 && toData[key] !== data[key])\r\n         {\r\n            destination[key] = toData[key];\r\n            initial[key] = data[key];\r\n         }\r\n      }\r\n\r\n      convertRelative(destination, data);\r\n\r\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\r\n   }\r\n\r\n   /**\r\n    * Returns a function that provides an optimized way to constantly update a to-tween.\r\n    *\r\n    * @param {Iterable<string>}  keys - The keys for quickTo.\r\n    *\r\n    * @param {object}            [opts] - Optional parameters.\r\n    *\r\n    * @param {number}            [opts.duration=1] - Duration in seconds.\r\n    *\r\n    * @param {Function}          [opts.ease=cubicOut] - Easing function.\r\n    *\r\n    * @param {Function}          [opts.interpolate=lerp] - Interpolation function.\r\n    *\r\n    * @returns {quickToCallback} quick-to tween function.\r\n    */\r\n   quickTo(keys, { duration = 1, ease = cubicOut, interpolate = lerp } = {})\r\n   {\r\n      if (!isIterable(keys))\r\n      {\r\n         throw new TypeError(`AnimationAPI.quickTo error: 'keys' is not an iterable list.`);\r\n      }\r\n\r\n      const parent = this.#position.parent;\r\n\r\n      // Early out if the application is not positionable.\r\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\r\n      {\r\n         throw new Error(`AnimationAPI.quickTo error: 'parent' is not positionable.`);\r\n      }\r\n\r\n      if (!Number.isFinite(duration) || duration < 0)\r\n      {\r\n         throw new TypeError(`AnimationAPI.quickTo error: 'duration' is not a positive number.`);\r\n      }\r\n\r\n      if (typeof ease !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationAPI.quickTo error: 'ease' is not a function.`);\r\n      }\r\n\r\n      if (typeof interpolate !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationAPI.quickTo error: 'interpolate' is not a function.`);\r\n      }\r\n\r\n      const initial = {};\r\n      const destination = {};\r\n\r\n      const data = this.#data;\r\n\r\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\r\n      for (const key of keys)\r\n      {\r\n         if (typeof key !== 'string')\r\n         {\r\n            throw new TypeError(`AnimationAPI.quickTo error: key is not a string.`);\r\n         }\r\n\r\n         if (!animateKeys.has(key))\r\n         {\r\n            throw new Error(`AnimationAPI.quickTo error: key ('${key}') is not animatable.`);\r\n         }\r\n\r\n         if (data[key] !== void 0)\r\n         {\r\n            destination[key] = data[key];\r\n            initial[key] = data[key];\r\n         }\r\n      }\r\n\r\n      const keysArray = [...keys];\r\n\r\n      Object.freeze(keysArray);\r\n\r\n      const newData = Object.assign({ immediateElementUpdate: true }, initial);\r\n\r\n      const animationData = {\r\n         active: true,\r\n         cleanup: this.#cleanup,\r\n         cancelled: false,\r\n         control: void 0,\r\n         current: 0,\r\n         destination,\r\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\r\n         ease,\r\n         el: void 0,\r\n         finished: true, // Note: start in finished state to add to AnimationManager on first callback.\r\n         initial,\r\n         interpolate,\r\n         keys,\r\n         newData,\r\n         position: this.#position,\r\n         resolve: void 0,\r\n         start: void 0\r\n      };\r\n\r\n      const quickToCB = (...args) =>\r\n      {\r\n         const argsLength = args.length;\r\n\r\n         if (argsLength === 0) { return; }\r\n\r\n         for (let cntr = keysArray.length; --cntr >= 0;)\r\n         {\r\n            const key = keysArray[cntr];\r\n            if (data[key] !== void 0) { initial[key] = data[key]; }\r\n         }\r\n\r\n         // Handle case where the first arg is an object. Update all quickTo keys from data contained in the object.\r\n         if (isObject(args[0]))\r\n         {\r\n            const objData = args[0];\r\n\r\n            for (const key in objData)\r\n            {\r\n               if (destination[key] !== void 0) { destination[key] = objData[key]; }\r\n            }\r\n         }\r\n         else // Assign each variable argument to the key specified in the initial `keys` array above.\r\n         {\r\n            for (let cntr = 0; cntr < argsLength && cntr < keysArray.length; cntr++)\r\n            {\r\n               const key = keysArray[cntr];\r\n               if (destination[key] !== void 0) { destination[key] = args[cntr]; }\r\n            }\r\n         }\r\n\r\n         convertRelative(destination, data);\r\n\r\n         // Set initial data for transform values that are often null by default.\r\n         setNumericDefaults(initial);\r\n         setNumericDefaults(destination);\r\n\r\n         // Set target element to animation data to track if it is removed from the DOM hence ending the animation.\r\n         const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\r\n         animationData.el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\r\n\r\n         // Reschedule the quickTo animation with AnimationManager as it is finished.\r\n         if (animationData.finished)\r\n         {\r\n            animationData.finished = false;\r\n            animationData.active = true;\r\n            animationData.current = 0;\r\n\r\n            this.#instanceCount++;\r\n            AnimationManager.add(animationData);\r\n         }\r\n         else // QuickTo animation is currently scheduled w/ AnimationManager so reset start and current time.\r\n         {\r\n            const now = performance.now();\r\n\r\n            // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\r\n            // precise delayed time.\r\n            animationData.start = now + (AnimationManager.current - now);\r\n            animationData.current = 0;\r\n         }\r\n      };\r\n\r\n      quickToCB.keys = keysArray;\r\n\r\n      /**\r\n       * Sets options of quickTo tween.\r\n       *\r\n       * @param {object}            [opts] - Optional parameters.\r\n       *\r\n       * @param {number}            [opts.duration] - Duration in seconds.\r\n       *\r\n       * @param {Function}          [opts.ease] - Easing function.\r\n       *\r\n       * @param {Function}          [opts.interpolate] - Interpolation function.\r\n       *\r\n       * @returns {quickToCallback} The quickTo callback.\r\n       */\r\n      quickToCB.options = ({ duration, ease, interpolate } = {}) => // eslint-disable-line no-shadow\r\n      {\r\n         if (duration !== void 0 && (!Number.isFinite(duration) || duration < 0))\r\n         {\r\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'duration' is not a positive number.`);\r\n         }\r\n\r\n         if (ease !== void 0 && typeof ease !== 'function')\r\n         {\r\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'ease' is not a function.`);\r\n         }\r\n\r\n         if (interpolate !== void 0 && typeof interpolate !== 'function')\r\n         {\r\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'interpolate' is not a function.`);\r\n         }\r\n\r\n         if (duration >= 0) { animationData.duration = duration * 1000; }\r\n         if (ease) { animationData.ease = ease; }\r\n         if (interpolate) { animationData.interpolate = interpolate; }\r\n\r\n         return quickToCB;\r\n      };\r\n\r\n      return quickToCB;\r\n   }\r\n}\r\n\r\n/**\r\n * @callback quickToCallback\r\n *\r\n * @param {...number|object} args - Either individual numbers corresponding to the order in which keys are specified or\r\n *                                  a single object with keys specified and numerical values.\r\n *\r\n * @property {({duration?: number, ease?: Function, interpolate?: Function}) => quickToCallback} options - A function\r\n *                                  to update options for quickTo function.\r\n */\r\n","/**\r\n * Provides a basic {@link TJSBasicAnimation} implementation for a Position animation for a group of Position instances.\r\n */\r\nexport class AnimationGroupControl\r\n{\r\n   /** @type {AnimationControl[]} */\r\n   #animationControls;\r\n\r\n   /** @type {Promise<Awaited<unknown>[]>} */\r\n   #finishedPromise;\r\n\r\n   /**\r\n    * Defines a static empty / void animation control.\r\n    *\r\n    * @type {AnimationGroupControl}\r\n    */\r\n   static #voidControl = new AnimationGroupControl(null);\r\n\r\n   /**\r\n    * Provides a static void / undefined AnimationGroupControl that is automatically resolved.\r\n    *\r\n    * @returns {AnimationGroupControl} Void AnimationGroupControl\r\n    */\r\n   static get voidControl() { return this.#voidControl; }\r\n\r\n   /**\r\n    * @param {AnimationControl[]} animationControls - An array of AnimationControl instances.\r\n    */\r\n   constructor(animationControls)\r\n   {\r\n      this.#animationControls = animationControls;\r\n   }\r\n\r\n   /**\r\n    * Get a promise that resolves when all animations are finished.\r\n    *\r\n    * @returns {Promise<Awaited<unknown>[]>|Promise<void>} Finished Promise for all animations.\r\n    */\r\n   get finished()\r\n   {\r\n      const animationControls = this.#animationControls;\r\n\r\n      if (animationControls === null || animationControls === void 0) { return Promise.resolve(); }\r\n\r\n      if (!(this.#finishedPromise instanceof Promise))\r\n      {\r\n         const promises = [];\r\n         for (let cntr = animationControls.length; --cntr >= 0;)\r\n         {\r\n            promises.push(animationControls[cntr].finished);\r\n         }\r\n\r\n         this.#finishedPromise = Promise.all(promises);\r\n      }\r\n\r\n      return this.#finishedPromise;\r\n   }\r\n\r\n   /**\r\n    * Returns whether there are active animation instances for this group.\r\n    *\r\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationGroupControl.isFinished} to\r\n    * determine if all animations in the group are finished.\r\n    *\r\n    * @returns {boolean} Are there active animation instances.\r\n    */\r\n   get isActive()\r\n   {\r\n      const animationControls = this.#animationControls;\r\n\r\n      if (animationControls === null || animationControls === void 0) { return false; }\r\n\r\n      for (let cntr = animationControls.length; --cntr >= 0;)\r\n      {\r\n         if (animationControls[cntr].isActive) { return true; }\r\n      }\r\n\r\n      return false;\r\n   }\r\n\r\n   /**\r\n    * Returns whether all animations in the group are finished.\r\n    *\r\n    * @returns {boolean} Are all animation instances finished.\r\n    */\r\n   get isFinished()\r\n   {\r\n      const animationControls = this.#animationControls;\r\n\r\n      if (animationControls === null || animationControls === void 0) { return true; }\r\n\r\n      for (let cntr = animationControls.length; --cntr >= 0;)\r\n      {\r\n         if (!animationControls[cntr].isFinished) { return false; }\r\n      }\r\n\r\n      return false;\r\n   }\r\n\r\n   /**\r\n    * Cancels the all animations.\r\n    */\r\n   cancel()\r\n   {\r\n      const animationControls = this.#animationControls;\r\n\r\n      if (animationControls === null || animationControls === void 0) { return; }\r\n\r\n      for (let cntr = this.#animationControls.length; --cntr >= 0;)\r\n      {\r\n         this.#animationControls[cntr].cancel();\r\n      }\r\n   }\r\n}\r\n","import {\r\n   isIterable,\r\n   isObject }                    from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\nimport { AnimationManager }      from './AnimationManager.js';\r\nimport { AnimationAPI }          from './AnimationAPI.js';\r\nimport { AnimationGroupControl } from './AnimationGroupControl.js';\r\n\r\n/**\r\n * Provides a public API for grouping multiple {@link Position} animations together with the AnimationManager.\r\n *\r\n * Note: To remove cyclic dependencies as this class provides the Position static / group Animation API `instanceof`\r\n * checks are not done against Position. Instead, a check for the animate property being an instanceof\r\n * {@link AnimationAPI} is performed in {@link AnimationGroupAPI.#isPosition}.\r\n *\r\n * @see AnimationAPI\r\n */\r\nexport class AnimationGroupAPI\r\n{\r\n   /**\r\n    * Checks of the given object is a Position instance by checking for AnimationAPI.\r\n    *\r\n    * @param {*}  object - Any data.\r\n    *\r\n    * @returns {boolean} Is Position.\r\n    */\r\n   static #isPosition(object)\r\n   {\r\n      return object !== null && typeof object === 'object' && object.animate instanceof AnimationAPI;\r\n   }\r\n\r\n   /**\r\n    * Cancels any animation for given Position data.\r\n    *\r\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\r\n    */\r\n   static cancel(position)\r\n   {\r\n      if (isIterable(position))\r\n      {\r\n         let index = -1;\r\n\r\n         for (const entry of position)\r\n         {\r\n            index++;\r\n\r\n            const actualPosition = this.#isPosition(entry) ? entry : entry.position;\r\n\r\n            if (!this.#isPosition(actualPosition))\r\n            {\r\n               console.warn(`AnimationGroupAPI.cancel warning: No Position instance found at index: ${index}.`);\r\n               continue;\r\n            }\r\n\r\n            AnimationManager.cancel(actualPosition);\r\n         }\r\n      }\r\n      else\r\n      {\r\n         const actualPosition = this.#isPosition(position) ? position : position.position;\r\n\r\n         if (!this.#isPosition(actualPosition))\r\n         {\r\n            console.warn(`AnimationGroupAPI.cancel warning: No Position instance found.`);\r\n            return;\r\n         }\r\n\r\n         AnimationManager.cancel(actualPosition);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Cancels all Position animation.\r\n    */\r\n   static cancelAll() { AnimationManager.cancelAll(); }\r\n\r\n   /**\r\n    * Gets all animation controls for the given position data.\r\n    *\r\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\r\n    *\r\n    * @returns {{position: Position, data: object|void, controls: AnimationControl[]}[]} Results array.\r\n    */\r\n   static getScheduled(position)\r\n   {\r\n      const results = [];\r\n\r\n      if (isIterable(position))\r\n      {\r\n         let index = -1;\r\n\r\n         for (const entry of position)\r\n         {\r\n            index++;\r\n\r\n            const isPosition = this.#isPosition(entry);\r\n            const actualPosition = isPosition ? entry : entry.position;\r\n\r\n            if (!this.#isPosition(actualPosition))\r\n            {\r\n               console.warn(`AnimationGroupAPI.getScheduled warning: No Position instance found at index: ${index}.`);\r\n               continue;\r\n            }\r\n\r\n            const controls = AnimationManager.getScheduled(actualPosition);\r\n\r\n            results.push({ position: actualPosition, data: isPosition ? void 0 : entry, controls });\r\n         }\r\n      }\r\n      else\r\n      {\r\n         const isPosition = this.#isPosition(position);\r\n         const actualPosition = isPosition ? position : position.position;\r\n\r\n         if (!this.#isPosition(actualPosition))\r\n         {\r\n            console.warn(`AnimationGroupAPI.getScheduled warning: No Position instance found.`);\r\n            return results;\r\n         }\r\n\r\n         const controls = AnimationManager.getScheduled(actualPosition);\r\n\r\n         results.push({ position: actualPosition, data: isPosition ? void 0 : position, controls });\r\n      }\r\n\r\n      return results;\r\n   }\r\n\r\n   /**\r\n    * Provides the `from` animation tween for one or more Position instances as a group.\r\n    *\r\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\r\n    *\r\n    * @param {object|Function}   fromData -\r\n    *\r\n    * @param {object|Function}   options -\r\n    *\r\n    * @returns {TJSBasicAnimation} Basic animation control.\r\n    */\r\n   static from(position, fromData, options)\r\n   {\r\n      if (!isObject(fromData) && typeof fromData !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.from error: 'fromData' is not an object or function.`);\r\n      }\r\n\r\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.from error: 'options' is not an object or function.`);\r\n      }\r\n\r\n      /**\r\n       * @type {AnimationControl[]}\r\n       */\r\n      const animationControls = [];\r\n\r\n      let index = -1;\r\n      let callbackOptions;\r\n\r\n      const hasDataCallback = typeof fromData === 'function';\r\n      const hasOptionCallback = typeof options === 'function';\r\n      const hasCallback = hasDataCallback || hasOptionCallback;\r\n\r\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\r\n\r\n      let actualFromData = fromData;\r\n      let actualOptions = options;\r\n\r\n      if (isIterable(position))\r\n      {\r\n         for (const entry of position)\r\n         {\r\n            index++;\r\n\r\n            const isPosition = this.#isPosition(entry);\r\n            const actualPosition = isPosition ? entry : entry.position;\r\n\r\n            if (!this.#isPosition(actualPosition))\r\n            {\r\n               console.warn(`AnimationGroupAPI.from warning: No Position instance found at index: ${index}.`);\r\n               continue;\r\n            }\r\n\r\n            if (hasCallback)\r\n            {\r\n               callbackOptions.index = index;\r\n               callbackOptions.position = position;\r\n               callbackOptions.data = isPosition ? void 0 : entry;\r\n            }\r\n\r\n            if (hasDataCallback)\r\n            {\r\n               actualFromData = fromData(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualFromData === null || actualFromData === void 0) { continue; }\r\n\r\n               if (typeof actualFromData !== 'object')\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.from error: fromData callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            if (hasOptionCallback)\r\n            {\r\n               actualOptions = options(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualOptions === null || actualOptions === void 0) { continue; }\r\n\r\n               if (typeof actualOptions !== 'object')\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.from error: options callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            animationControls.push(actualPosition.animate.from(actualFromData, actualOptions));\r\n         }\r\n      }\r\n      else\r\n      {\r\n         const isPosition = this.#isPosition(position);\r\n         const actualPosition = isPosition ? position : position.position;\r\n\r\n         if (!this.#isPosition(actualPosition))\r\n         {\r\n            console.warn(`AnimationGroupAPI.from warning: No Position instance found.`);\r\n            return AnimationGroupControl.voidControl;\r\n         }\r\n\r\n         if (hasCallback)\r\n         {\r\n            callbackOptions.index = 0;\r\n            callbackOptions.position = position;\r\n            callbackOptions.data = isPosition ? void 0 : position;\r\n         }\r\n\r\n         if (hasDataCallback)\r\n         {\r\n            actualFromData = fromData(callbackOptions);\r\n\r\n            if (typeof actualFromData !== 'object')\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.from error: fromData callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         if (hasOptionCallback)\r\n         {\r\n            actualOptions = options(callbackOptions);\r\n\r\n            if (typeof actualOptions !== 'object')\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.from error: options callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         animationControls.push(actualPosition.animate.from(actualFromData, actualOptions));\r\n      }\r\n\r\n      return new AnimationGroupControl(animationControls);\r\n   }\r\n\r\n   /**\r\n    * Provides the `fromTo` animation tween for one or more Position instances as a group.\r\n    *\r\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\r\n    *\r\n    * @param {object|Function}   fromData -\r\n    *\r\n    * @param {object|Function}   toData -\r\n    *\r\n    * @param {object|Function}   options -\r\n    *\r\n    * @returns {TJSBasicAnimation} Basic animation control.\r\n    */\r\n   static fromTo(position, fromData, toData, options)\r\n   {\r\n      if (!isObject(fromData) && typeof fromData !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' is not an object or function.`);\r\n      }\r\n\r\n      if (!isObject(toData) && typeof toData !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' is not an object or function.`);\r\n      }\r\n\r\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' is not an object or function.`);\r\n      }\r\n\r\n      /**\r\n       * @type {AnimationControl[]}\r\n       */\r\n      const animationControls = [];\r\n\r\n      let index = -1;\r\n      let callbackOptions;\r\n\r\n      const hasFromCallback = typeof fromData === 'function';\r\n      const hasToCallback = typeof toData === 'function';\r\n      const hasOptionCallback = typeof options === 'function';\r\n      const hasCallback = hasFromCallback || hasToCallback || hasOptionCallback;\r\n\r\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\r\n\r\n      let actualFromData = fromData;\r\n      let actualToData = toData;\r\n      let actualOptions = options;\r\n\r\n      if (isIterable(position))\r\n      {\r\n         for (const entry of position)\r\n         {\r\n            index++;\r\n\r\n            const isPosition = this.#isPosition(entry);\r\n            const actualPosition = isPosition ? entry : entry.position;\r\n\r\n            if (!this.#isPosition(actualPosition))\r\n            {\r\n               console.warn(`AnimationGroupAPI.fromTo warning: No Position instance found at index: ${index}.`);\r\n               continue;\r\n            }\r\n\r\n            if (hasCallback)\r\n            {\r\n               callbackOptions.index = index;\r\n               callbackOptions.position = position;\r\n               callbackOptions.data = isPosition ? void 0 : entry;\r\n            }\r\n\r\n            if (hasFromCallback)\r\n            {\r\n               actualFromData = fromData(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualFromData === null || actualFromData === void 0) { continue; }\r\n\r\n               if (typeof actualFromData !== 'object')\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: fromData callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            if (hasToCallback)\r\n            {\r\n               actualToData = toData(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualToData === null || actualToData === void 0) { continue; }\r\n\r\n               if (typeof actualToData !== 'object')\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: toData callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            if (hasOptionCallback)\r\n            {\r\n               actualOptions = options(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualOptions === null || actualOptions === void 0) { continue; }\r\n\r\n               if (typeof actualOptions !== 'object')\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: options callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            animationControls.push(actualPosition.animate.fromTo(actualFromData, actualToData, actualOptions));\r\n         }\r\n      }\r\n      else\r\n      {\r\n         const isPosition = this.#isPosition(position);\r\n         const actualPosition = isPosition ? position : position.position;\r\n\r\n         if (!this.#isPosition(actualPosition))\r\n         {\r\n            console.warn(`AnimationGroupAPI.fromTo warning: No Position instance found.`);\r\n            return AnimationGroupControl.voidControl;\r\n         }\r\n\r\n         if (hasCallback)\r\n         {\r\n            callbackOptions.index = 0;\r\n            callbackOptions.position = position;\r\n            callbackOptions.data = isPosition ? void 0 : position;\r\n         }\r\n\r\n         if (hasFromCallback)\r\n         {\r\n            actualFromData = fromData(callbackOptions);\r\n\r\n            if (typeof actualFromData !== 'object')\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.fromTo error: fromData callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         if (hasToCallback)\r\n         {\r\n            actualToData = toData(callbackOptions);\r\n\r\n            if (typeof actualToData !== 'object')\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.fromTo error: toData callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         if (hasOptionCallback)\r\n         {\r\n            actualOptions = options(callbackOptions);\r\n\r\n            if (typeof actualOptions !== 'object')\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.fromTo error: options callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         animationControls.push(actualPosition.animate.fromTo(actualFromData, actualToData, actualOptions));\r\n      }\r\n\r\n      return new AnimationGroupControl(animationControls);\r\n   }\r\n\r\n   /**\r\n    * Provides the `to` animation tween for one or more Position instances as a group.\r\n    *\r\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\r\n    *\r\n    * @param {object|Function}   toData -\r\n    *\r\n    * @param {object|Function}   options -\r\n    *\r\n    * @returns {TJSBasicAnimation} Basic animation control.\r\n    */\r\n   static to(position, toData, options)\r\n   {\r\n      if (!isObject(toData) && typeof toData !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.to error: 'toData' is not an object or function.`);\r\n      }\r\n\r\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.to error: 'options' is not an object or function.`);\r\n      }\r\n\r\n      /**\r\n       * @type {AnimationControl[]}\r\n       */\r\n      const animationControls = [];\r\n\r\n      let index = -1;\r\n      let callbackOptions;\r\n\r\n      const hasDataCallback = typeof toData === 'function';\r\n      const hasOptionCallback = typeof options === 'function';\r\n      const hasCallback = hasDataCallback || hasOptionCallback;\r\n\r\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\r\n\r\n      let actualToData = toData;\r\n      let actualOptions = options;\r\n\r\n      if (isIterable(position))\r\n      {\r\n         for (const entry of position)\r\n         {\r\n            index++;\r\n\r\n            const isPosition = this.#isPosition(entry);\r\n            const actualPosition = isPosition ? entry : entry.position;\r\n\r\n            if (!this.#isPosition(actualPosition))\r\n            {\r\n               console.warn(`AnimationGroupAPI.to warning: No Position instance found at index: ${index}.`);\r\n               continue;\r\n            }\r\n\r\n            if (hasCallback)\r\n            {\r\n               callbackOptions.index = index;\r\n               callbackOptions.position = position;\r\n               callbackOptions.data = isPosition ? void 0 : entry;\r\n            }\r\n\r\n            if (hasDataCallback)\r\n            {\r\n               actualToData = toData(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualToData === null || actualToData === void 0) { continue; }\r\n\r\n               if (typeof actualToData !== 'object')\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.to error: toData callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            if (hasOptionCallback)\r\n            {\r\n               actualOptions = options(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualOptions === null || actualOptions === void 0) { continue; }\r\n\r\n               if (typeof actualOptions !== 'object')\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.to error: options callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            animationControls.push(actualPosition.animate.to(actualToData, actualOptions));\r\n         }\r\n      }\r\n      else\r\n      {\r\n         const isPosition = this.#isPosition(position);\r\n         const actualPosition = isPosition ? position : position.position;\r\n\r\n         if (!this.#isPosition(actualPosition))\r\n         {\r\n            console.warn(`AnimationGroupAPI.to warning: No Position instance found.`);\r\n            return AnimationGroupControl.voidControl;\r\n         }\r\n\r\n         if (hasCallback)\r\n         {\r\n            callbackOptions.index = 0;\r\n            callbackOptions.position = position;\r\n            callbackOptions.data = isPosition ? void 0 : position;\r\n         }\r\n\r\n         if (hasDataCallback)\r\n         {\r\n            actualToData = toData(callbackOptions);\r\n\r\n            if (typeof actualToData !== 'object')\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.to error: toData callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         if (hasOptionCallback)\r\n         {\r\n            actualOptions = options(callbackOptions);\r\n\r\n            if (typeof actualOptions !== 'object')\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.to error: options callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         animationControls.push(actualPosition.animate.to(actualToData, actualOptions));\r\n      }\r\n\r\n      return new AnimationGroupControl(animationControls);\r\n   }\r\n\r\n   /**\r\n    * Provides the `to` animation tween for one or more Position instances as a group.\r\n    *\r\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\r\n    *\r\n    * @param {Iterable<string>}  keys -\r\n    *\r\n    * @param {object|Function}   options -\r\n    *\r\n    * @returns {quickToCallback} Basic animation control.\r\n    */\r\n   static quickTo(position, keys, options)\r\n   {\r\n      if (!isIterable(keys))\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'keys' is not an iterable list.`);\r\n      }\r\n\r\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\r\n      }\r\n\r\n      /**\r\n       * @type {quickToCallback[]}\r\n       */\r\n      const quickToCallbacks = [];\r\n\r\n      let index = -1;\r\n\r\n      const hasOptionCallback = typeof options === 'function';\r\n\r\n      const callbackOptions = { index, position: void 0, data: void 0 };\r\n\r\n      let actualOptions = options;\r\n\r\n      if (isIterable(position))\r\n      {\r\n         for (const entry of position)\r\n         {\r\n            index++;\r\n\r\n            const isPosition = this.#isPosition(entry);\r\n            const actualPosition = isPosition ? entry : entry.position;\r\n\r\n            if (!this.#isPosition(actualPosition))\r\n            {\r\n               console.warn(`AnimationGroupAPI.quickTo warning: No Position instance found at index: ${index}.`);\r\n               continue;\r\n            }\r\n\r\n            callbackOptions.index = index;\r\n            callbackOptions.position = position;\r\n            callbackOptions.data = isPosition ? void 0 : entry;\r\n\r\n            if (hasOptionCallback)\r\n            {\r\n               actualOptions = options(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualOptions === null || actualOptions === void 0) { continue; }\r\n\r\n               if (typeof actualOptions !== 'object')\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: options callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\r\n         }\r\n      }\r\n      else\r\n      {\r\n         const isPosition = this.#isPosition(position);\r\n         const actualPosition = isPosition ? position : position.position;\r\n\r\n         if (!this.#isPosition(actualPosition))\r\n         {\r\n            console.warn(`AnimationGroupAPI.quickTo warning: No Position instance found.`);\r\n            return () => null;\r\n         }\r\n\r\n         callbackOptions.index = 0;\r\n         callbackOptions.position = position;\r\n         callbackOptions.data = isPosition ? void 0 : position;\r\n\r\n         if (hasOptionCallback)\r\n         {\r\n            actualOptions = options(callbackOptions);\r\n\r\n            if (typeof actualOptions !== 'object')\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.quickTo error: options callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\r\n      }\r\n\r\n      const keysArray = [...keys];\r\n\r\n      Object.freeze(keysArray);\r\n\r\n      const quickToCB = (...args) =>\r\n      {\r\n         const argsLength = args.length;\r\n\r\n         if (argsLength === 0) { return; }\r\n\r\n         if (typeof args[0] === 'function')\r\n         {\r\n            const dataCallback = args[0];\r\n\r\n            index = -1;\r\n            let cntr = 0;\r\n\r\n            if (isIterable(position))\r\n            {\r\n               for (const entry of position)\r\n               {\r\n                  index++;\r\n\r\n                  const isPosition = this.#isPosition(entry);\r\n                  const actualPosition = isPosition ? entry : entry.position;\r\n\r\n                  if (!this.#isPosition(actualPosition)) { continue; }\r\n\r\n                  callbackOptions.index = index;\r\n                  callbackOptions.position = position;\r\n                  callbackOptions.data = isPosition ? void 0 : entry;\r\n\r\n                  const toData = dataCallback(callbackOptions);\r\n\r\n                  // Returned data from callback is null / undefined, so skip this position instance.\r\n                  if (toData === null || toData === void 0) { continue; }\r\n\r\n                  /**\r\n                   * @type {boolean}\r\n                   */\r\n                  const toDataIterable = isIterable(toData);\r\n\r\n                  if (!Number.isFinite(toData) && !toDataIterable && typeof toData !== 'object')\r\n                  {\r\n                     throw new TypeError(`AnimationGroupAPI.quickTo error: toData callback function iteration(${\r\n                      index}) failed to return a finite number, iterable list, or object.`);\r\n                  }\r\n\r\n                  if (toDataIterable)\r\n                  {\r\n                     quickToCallbacks[cntr++](...toData);\r\n                  }\r\n                  else\r\n                  {\r\n                     quickToCallbacks[cntr++](toData);\r\n                  }\r\n               }\r\n            }\r\n            else\r\n            {\r\n               const isPosition = this.#isPosition(position);\r\n               const actualPosition = isPosition ? position : position.position;\r\n\r\n               if (!this.#isPosition(actualPosition)) { return; }\r\n\r\n               callbackOptions.index = 0;\r\n               callbackOptions.position = position;\r\n               callbackOptions.data = isPosition ? void 0 : position;\r\n\r\n               const toData = dataCallback(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (toData === null || toData === void 0) { return; }\r\n\r\n               const toDataIterable = isIterable(toData);\r\n\r\n               if (!Number.isFinite(toData) && !toDataIterable && typeof toData !== 'object')\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: toData callback function iteration(${\r\n                   index}) failed to return a finite number, iterable list, or object.`);\r\n               }\r\n\r\n               if (toDataIterable)\r\n               {\r\n                  quickToCallbacks[cntr++](...toData);\r\n               }\r\n               else\r\n               {\r\n                  quickToCallbacks[cntr++](toData);\r\n               }\r\n            }\r\n         }\r\n         else\r\n         {\r\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;)\r\n            {\r\n               quickToCallbacks[cntr](...args);\r\n            }\r\n         }\r\n      };\r\n\r\n      quickToCB.keys = keysArray;\r\n\r\n      /**\r\n       * Sets options of quickTo tween.\r\n       *\r\n       * @param {object|Function}   [options] - Optional parameters.\r\n       *\r\n       * @param {number}            [options.duration] - Duration in seconds.\r\n       *\r\n       * @param {Function}          [options.ease] - Easing function.\r\n       *\r\n       * @param {Function}          [options.interpolate] - Interpolation function.\r\n       *\r\n       * @returns {quickToCallback} The quickTo callback.\r\n       */\r\n      quickToCB.options = (options) => // eslint-disable-line no-shadow\r\n      {\r\n         if (options !== void 0 && !isObject(options) && typeof options !== 'function')\r\n         {\r\n            throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\r\n         }\r\n\r\n         // Set options object for each quickTo callback.\r\n         if (isObject(options))\r\n         {\r\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;) { quickToCallbacks[cntr].options(options); }\r\n         }\r\n         else if (typeof options === 'function')\r\n         {\r\n            if (isIterable(position))\r\n            {\r\n               index = -1;\r\n               let cntr = 0;\r\n\r\n               for (const entry of position)\r\n               {\r\n                  index++;\r\n\r\n                  const isPosition = this.#isPosition(entry);\r\n                  const actualPosition = isPosition ? entry : entry.position;\r\n\r\n                  if (!this.#isPosition(actualPosition))\r\n                  {\r\n                     console.warn(\r\n                      `AnimationGroupAPI.quickTo.options warning: No Position instance found at index: ${index}.`);\r\n                     continue;\r\n                  }\r\n\r\n                  callbackOptions.index = index;\r\n                  callbackOptions.position = position;\r\n                  callbackOptions.data = isPosition ? void 0 : entry;\r\n\r\n                  actualOptions = options(callbackOptions);\r\n\r\n                  // Returned data from callback is null / undefined, so skip this position instance.\r\n                  if (actualOptions === null || actualOptions === void 0) { continue; }\r\n\r\n                  if (typeof actualOptions !== 'object')\r\n                  {\r\n                     throw new TypeError(\r\n                      `AnimationGroupAPI.quickTo.options error: options callback function iteration(${\r\n                       index}) failed to return an object.`);\r\n                  }\r\n\r\n                  quickToCallbacks[cntr++].options(actualOptions);\r\n               }\r\n            }\r\n            else\r\n            {\r\n               const isPosition = this.#isPosition(position);\r\n               const actualPosition = isPosition ? position : position.position;\r\n\r\n               if (!this.#isPosition(actualPosition))\r\n               {\r\n                  console.warn(`AnimationGroupAPI.quickTo.options warning: No Position instance found.`);\r\n                  return quickToCB;\r\n               }\r\n\r\n               callbackOptions.index = 0;\r\n               callbackOptions.position = position;\r\n               callbackOptions.data = isPosition ? void 0 : position;\r\n\r\n               actualOptions = options(callbackOptions);\r\n\r\n               if (typeof actualOptions !== 'object')\r\n               {\r\n                  throw new TypeError(\r\n                   `AnimationGroupAPI.quickTo error: options callback function failed to return an object.`);\r\n               }\r\n\r\n               quickToCallbacks[0].options(actualOptions);\r\n            }\r\n         }\r\n\r\n         return quickToCB;\r\n      };\r\n\r\n      return quickToCB;\r\n   }\r\n}\r\n","export class Centered\r\n{\r\n   /**\r\n    * @type {HTMLElement}\r\n    */\r\n   #element;\r\n\r\n   /**\r\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\r\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\r\n    *\r\n    * @type {number}\r\n    */\r\n   #height;\r\n\r\n   /**\r\n    * Set from an optional value in the constructor to lock accessors preventing modification.\r\n    */\r\n   #lock;\r\n\r\n   /**\r\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\r\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\r\n    *\r\n    * @type {number}\r\n    */\r\n   #width;\r\n\r\n   constructor({ element, lock = false, width, height } = {})\r\n   {\r\n      this.element = element;\r\n      this.width = width;\r\n      this.height = height;\r\n\r\n      this.#lock = typeof lock === 'boolean' ? lock : false;\r\n   }\r\n\r\n   get element() { return this.#element; }\r\n\r\n   get height() { return this.#height; }\r\n\r\n   get width() { return this.#width; }\r\n\r\n   set element(element)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (element === void 0  || element === null || element instanceof HTMLElement)\r\n      {\r\n         this.#element = element;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\r\n      }\r\n   }\r\n\r\n   set height(height)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (height === void 0 || Number.isFinite(height))\r\n      {\r\n         this.#height = height;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'height' is not a finite number or undefined.`);\r\n      }\r\n   }\r\n\r\n   set width(width)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (width === void 0 || Number.isFinite(width))\r\n      {\r\n         this.#width = width;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'width' is not a finite number or undefined.`);\r\n      }\r\n   }\r\n\r\n   setDimension(width, height)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (width === void 0 || Number.isFinite(width))\r\n      {\r\n         this.#width = width;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'width' is not a finite number or undefined.`);\r\n      }\r\n\r\n      if (height === void 0 || Number.isFinite(height))\r\n      {\r\n         this.#height = height;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'height' is not a finite number or undefined.`);\r\n      }\r\n   }\r\n\r\n   getLeft(width)\r\n   {\r\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\r\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\r\n\r\n      return (boundsWidth - width) / 2;\r\n   }\r\n\r\n   getTop(height)\r\n   {\r\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\r\n\r\n      return (boundsHeight - height) / 2;\r\n   }\r\n}\r\n","import { Centered } from './Centered.js';\r\n\r\nconst browserCentered = new Centered();\r\n\r\nexport { browserCentered, Centered };\r\n\r\n","export class PositionChangeSet\r\n{\r\n   constructor()\r\n   {\r\n      this.left = false;\r\n      this.top = false;\r\n      this.width = false;\r\n      this.height = false;\r\n      this.maxHeight = false;\r\n      this.maxWidth = false;\r\n      this.minHeight = false;\r\n      this.minWidth = false;\r\n      this.zIndex = false;\r\n      this.transform = false;\r\n      this.transformOrigin = false;\r\n   }\r\n\r\n   hasChange()\r\n   {\r\n      return this.left || this.top || this.width || this.height || this.maxHeight || this.maxWidth || this.minHeight ||\r\n       this.minWidth || this.zIndex || this.transform || this.transformOrigin;\r\n   }\r\n\r\n   set(value)\r\n   {\r\n      this.left = value;\r\n      this.top = value;\r\n      this.width = value;\r\n      this.height = value;\r\n      this.maxHeight = value;\r\n      this.maxWidth = value;\r\n      this.minHeight = value;\r\n      this.minWidth = value;\r\n      this.zIndex = value;\r\n      this.transform = value;\r\n      this.transformOrigin = value;\r\n   }\r\n}\r\n","/**\r\n * Defines stored positional data.\r\n */\r\nexport class PositionData\r\n{\r\n   constructor({ height = null, left = null, maxHeight = null, maxWidth = null, minHeight = null, minWidth = null,\r\n    rotateX = null, rotateY = null, rotateZ = null, scale = null, translateX = null, translateY = null,\r\n     translateZ = null, top = null, transformOrigin = null, width = null, zIndex = null } = {})\r\n   {\r\n      /**\r\n       * @type {number|'auto'|'inherit'|null}\r\n       */\r\n      this.height = height;\r\n\r\n      /**\r\n       * @type {number|null}\r\n       */\r\n      this.left = left;\r\n\r\n      /**\r\n       * @type {number|null}\r\n       */\r\n      this.maxHeight = maxHeight;\r\n\r\n      /**\r\n       * @type {number|null}\r\n       */\r\n      this.maxWidth = maxWidth;\r\n\r\n      /**\r\n       * @type {number|null}\r\n       */\r\n      this.minHeight = minHeight;\r\n\r\n      /**\r\n       * @type {number|null}\r\n       */\r\n      this.minWidth = minWidth;\r\n\r\n      /**\r\n       * @type {number|null}\r\n       */\r\n      this.rotateX = rotateX;\r\n\r\n      /**\r\n       * @type {number|null}\r\n       */\r\n      this.rotateY = rotateY;\r\n\r\n      /**\r\n       * @type {number|null}\r\n       */\r\n      this.rotateZ = rotateZ;\r\n\r\n      /**\r\n       * @type {number|null}\r\n       */\r\n      this.scale = scale;\r\n\r\n      /**\r\n       * @type {number|null}\r\n       */\r\n      this.top = top;\r\n\r\n      /**\r\n       * @type {string|null}\r\n       */\r\n      this.transformOrigin = transformOrigin;\r\n\r\n      /**\r\n       * @type {number|null}\r\n       */\r\n      this.translateX = translateX;\r\n\r\n      /**\r\n       * @type {number|null}\r\n       */\r\n      this.translateY = translateY;\r\n\r\n      /**\r\n       * @type {number|null}\r\n       */\r\n      this.translateZ = translateZ;\r\n\r\n      /**\r\n       * @type {number|'auto'|'inherit'|null}\r\n       */\r\n      this.width = width;\r\n\r\n      /**\r\n       * @type {number|null}\r\n       */\r\n      this.zIndex = zIndex;\r\n\r\n      Object.seal(this);\r\n   }\r\n\r\n   /**\r\n    * Copies given data to this instance.\r\n    *\r\n    * @param {PositionData}   data - Copy from this instance.\r\n    *\r\n    * @returns {PositionData} This instance.\r\n    */\r\n   copy(data)\r\n   {\r\n      this.height = data.height;\r\n      this.left = data.left;\r\n      this.maxHeight = data.maxHeight;\r\n      this.maxWidth = data.maxWidth;\r\n      this.minHeight = data.minHeight;\r\n      this.minWidth = data.minWidth;\r\n      this.rotateX = data.rotateX;\r\n      this.rotateY = data.rotateY;\r\n      this.rotateZ = data.rotateZ;\r\n      this.scale = data.scale;\r\n      this.top = data.top;\r\n      this.transformOrigin = data.transformOrigin;\r\n      this.translateX = data.translateX;\r\n      this.translateY = data.translateY;\r\n      this.translateZ = data.translateZ;\r\n      this.width = data.width;\r\n      this.zIndex = data.zIndex;\r\n\r\n      return this;\r\n   }\r\n}\r\n","import { linear }       from 'svelte/easing';\r\n\r\nimport { lerp }         from '@typhonjs-fvtt/runtime/svelte/math';\r\nimport { isIterable }   from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\nexport class PositionStateAPI\r\n{\r\n   /** @type {PositionData} */\r\n   #data;\r\n\r\n   /**\r\n    * @type {Map<string, PositionDataExtended>}\r\n    */\r\n   #dataSaved = new Map();\r\n\r\n   /** @type {Position} */\r\n   #position;\r\n\r\n   /** @type {Transforms} */\r\n   #transforms;\r\n\r\n   constructor(position, data, transforms)\r\n   {\r\n      this.#position = position;\r\n      this.#data = data;\r\n      this.#transforms = transforms;\r\n   }\r\n\r\n   /**\r\n    * Returns any stored save state by name.\r\n    *\r\n    * @param {string}   name - Saved data set name.\r\n    *\r\n    * @returns {PositionDataExtended} The saved data set.\r\n    */\r\n   get({ name })\r\n   {\r\n      if (typeof name !== 'string') { throw new TypeError(`Position - getSave error: 'name' is not a string.`); }\r\n\r\n      return this.#dataSaved.get(name);\r\n   }\r\n\r\n   /**\r\n    * Returns any associated default data.\r\n    *\r\n    * @returns {PositionDataExtended} Associated default data.\r\n    */\r\n   getDefault()\r\n   {\r\n      return this.#dataSaved.get('#defaultData');\r\n   }\r\n\r\n   /**\r\n    * Removes and returns any position state by name.\r\n    *\r\n    * @param {object}   options - Options.\r\n    *\r\n    * @param {string}   options.name - Name to remove and retrieve.\r\n    *\r\n    * @returns {PositionDataExtended} Saved position data.\r\n    */\r\n   remove({ name })\r\n   {\r\n      if (typeof name !== 'string') { throw new TypeError(`Position - remove: 'name' is not a string.`); }\r\n\r\n      const data = this.#dataSaved.get(name);\r\n      this.#dataSaved.delete(name);\r\n\r\n      return data;\r\n   }\r\n\r\n   /**\r\n    * Resets data to default values and invokes set.\r\n    *\r\n    * @param {object}   [opts] - Optional parameters.\r\n    *\r\n    * @param {boolean}  [opts.keepZIndex=false] - When true keeps current z-index.\r\n    *\r\n    * @param {boolean}  [opts.invokeSet=true] - When true invokes set method.\r\n    *\r\n    * @returns {boolean} Operation successful.\r\n    */\r\n   reset({ keepZIndex = false, invokeSet = true } = {})\r\n   {\r\n      const defaultData = this.#dataSaved.get('#defaultData');\r\n\r\n      // Quit early if there is no saved default data.\r\n      if (typeof defaultData !== 'object') { return false; }\r\n\r\n      // Cancel all animations for Position if there are currently any scheduled.\r\n      if (this.#position.animate.isScheduled)\r\n      {\r\n         this.#position.animate.cancel();\r\n      }\r\n\r\n      const zIndex = this.#position.zIndex;\r\n\r\n      const data = Object.assign({}, defaultData);\r\n\r\n      if (keepZIndex) { data.zIndex = zIndex; }\r\n\r\n      // Reset the transform data.\r\n      this.#transforms.reset(data);\r\n\r\n      // If current minimized invoke `maximize`.\r\n      if (this.#position.parent?.reactive?.minimized)\r\n      {\r\n         this.#position.parent?.maximize?.({ animate: false, duration: 0 });\r\n      }\r\n\r\n      // Note next clock tick scheduling.\r\n      if (invokeSet) { setTimeout(() => this.#position.set(data), 0); }\r\n\r\n      return true;\r\n   }\r\n\r\n   /**\r\n    * Restores a saved positional state returning the data. Several optional parameters are available\r\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\r\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\r\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\r\n    * returned if awaiting the end of the animation.\r\n    *\r\n    * @param {object}            params - Parameters\r\n    *\r\n    * @param {string}            params.name - Saved data set name.\r\n    *\r\n    * @param {boolean}           [params.remove=false] - Remove data set.\r\n    *\r\n    * @param {Iterable<string>}  [params.properties] - Specific properties to set / animate.\r\n    *\r\n    * @param {boolean}           [params.silent] - Set position data directly; no store or style updates.\r\n    *\r\n    * @param {boolean}           [params.async=false] - If animating return a Promise that resolves with any saved data.\r\n    *\r\n    * @param {boolean}           [params.animateTo=false] - Animate to restore data.\r\n    *\r\n    * @param {number}            [params.duration=0.1] - Duration in seconds.\r\n    *\r\n    * @param {Function}          [params.ease=linear] - Easing function.\r\n    *\r\n    * @param {Function}          [params.interpolate=lerp] - Interpolation function.\r\n    *\r\n    * @returns {PositionDataExtended|Promise<PositionDataExtended>} Saved position data.\r\n    */\r\n   restore({ name, remove = false, properties, silent = false, async = false, animateTo = false, duration = 0.1,\r\n    ease = linear, interpolate = lerp })\r\n   {\r\n      if (typeof name !== 'string') { throw new TypeError(`Position - restore error: 'name' is not a string.`); }\r\n\r\n      const dataSaved = this.#dataSaved.get(name);\r\n\r\n      if (dataSaved)\r\n      {\r\n         if (remove) { this.#dataSaved.delete(name); }\r\n\r\n         let data = dataSaved;\r\n\r\n         if (isIterable(properties))\r\n         {\r\n            data = {};\r\n            for (const property of properties) { data[property] = dataSaved[property]; }\r\n         }\r\n\r\n         // Update data directly with no store or inline style updates.\r\n         if (silent)\r\n         {\r\n            for (const property in data) { this.#data[property] = data[property]; }\r\n            return dataSaved;\r\n         }\r\n         else if (animateTo)  // Animate to saved data.\r\n         {\r\n            // Provide special handling to potentially change transform origin as this parameter is not animated.\r\n            if (data.transformOrigin !== this.#position.transformOrigin)\r\n            {\r\n               this.#position.transformOrigin = data.transformOrigin;\r\n            }\r\n\r\n            // Return a Promise with saved data that resolves after animation ends.\r\n            if (async)\r\n            {\r\n               return this.#position.animate.to(data, { duration, ease, interpolate }).finished.then(() => dataSaved);\r\n            }\r\n            else  // Animate synchronously.\r\n            {\r\n               this.#position.animate.to(data, { duration, ease, interpolate });\r\n            }\r\n         }\r\n         else\r\n         {\r\n            // Default options is to set data for an immediate update.\r\n            this.#position.set(data);\r\n         }\r\n      }\r\n\r\n      return dataSaved;\r\n   }\r\n\r\n   /**\r\n    * Saves current position state with the opportunity to add extra data to the saved state.\r\n    *\r\n    * @param {object}   opts - Options.\r\n    *\r\n    * @param {string}   opts.name - name to index this saved data.\r\n    *\r\n    * @param {...*}     [opts.extra] - Extra data to add to saved data.\r\n    *\r\n    * @returns {PositionData} Current position data\r\n    */\r\n   save({ name, ...extra })\r\n   {\r\n      if (typeof name !== 'string') { throw new TypeError(`Position - save error: 'name' is not a string.`); }\r\n\r\n      const data = this.#position.get(extra);\r\n\r\n      this.#dataSaved.set(name, data);\r\n\r\n      return data;\r\n   }\r\n\r\n   /**\r\n    * Directly sets a position state.\r\n    *\r\n    * @param {object}   opts - Options.\r\n    *\r\n    * @param {string}   opts.name - name to index this saved data.\r\n    *\r\n    * @param {...*}     [opts.data] - Position data to set.\r\n    */\r\n   set({ name, ...data })\r\n   {\r\n      if (typeof name !== 'string') { throw new TypeError(`Position - set error: 'name' is not a string.`); }\r\n\r\n      this.#dataSaved.set(name, data);\r\n   }\r\n}\r\n","import { writable }           from 'svelte/store';\r\n\r\nimport { propertyStore }      from '@typhonjs-fvtt/runtime/svelte/store';\r\nimport { styleParsePixels }   from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\nexport class StyleCache\r\n{\r\n   constructor()\r\n   {\r\n      /** @type {HTMLElement|undefined} */\r\n      this.el = void 0;\r\n\r\n      /** @type {CSSStyleDeclaration} */\r\n      this.computed = void 0;\r\n\r\n      /** @type {number|undefined} */\r\n      this.marginLeft = void 0;\r\n\r\n      /** @type {number|undefined} */\r\n      this.marginTop = void 0;\r\n\r\n      /** @type {number|undefined} */\r\n      this.maxHeight = void 0;\r\n\r\n      /** @type {number|undefined} */\r\n      this.maxWidth = void 0;\r\n\r\n      /** @type {number|undefined} */\r\n      this.minHeight = void 0;\r\n\r\n      /** @type {number|undefined} */\r\n      this.minWidth = void 0;\r\n\r\n      /** @type {boolean} */\r\n      this.hasWillChange = false;\r\n\r\n      /**\r\n       * @type {ResizeObserverData}\r\n       */\r\n      this.resizeObserved = {\r\n         contentHeight: void 0,\r\n         contentWidth: void 0,\r\n         offsetHeight: void 0,\r\n         offsetWidth: void 0\r\n      };\r\n\r\n      /**\r\n       * Provides a writable store to track offset & content width / height from an associated `resizeObserver` action.\r\n       *\r\n       * @type {Writable<ResizeObserverData>}\r\n       */\r\n      const storeResizeObserved = writable(this.resizeObserved);\r\n\r\n      this.stores = {\r\n         element: writable(this.el),\r\n         resizeContentHeight: propertyStore(storeResizeObserved, 'contentHeight'),\r\n         resizeContentWidth: propertyStore(storeResizeObserved, 'contentWidth'),\r\n         resizeObserved: storeResizeObserved,\r\n         resizeOffsetHeight: propertyStore(storeResizeObserved, 'offsetHeight'),\r\n         resizeOffsetWidth: propertyStore(storeResizeObserved, 'offsetWidth')\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Returns the cached offsetHeight from any attached `resizeObserver` action otherwise gets the offsetHeight from\r\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\r\n    * directly is more expensive and alters the execution order of an animation frame.\r\n    *\r\n    * @returns {number} The element offsetHeight.\r\n    */\r\n   get offsetHeight()\r\n   {\r\n      if (this.el instanceof HTMLElement)\r\n      {\r\n         return this.resizeObserved.offsetHeight !== void 0 ? this.resizeObserved.offsetHeight : this.el.offsetHeight;\r\n      }\r\n\r\n      throw new Error(`StyleCache - get offsetHeight error: no element assigned.`);\r\n   }\r\n\r\n   /**\r\n    * Returns the cached offsetWidth from any attached `resizeObserver` action otherwise gets the offsetWidth from\r\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\r\n    * directly is more expensive and alters the execution order of an animation frame.\r\n    *\r\n    * @returns {number} The element offsetHeight.\r\n    */\r\n   get offsetWidth()\r\n   {\r\n      if (this.el instanceof HTMLElement)\r\n      {\r\n         return this.resizeObserved.offsetWidth !== void 0 ? this.resizeObserved.offsetWidth : this.el.offsetWidth;\r\n      }\r\n\r\n      throw new Error(`StyleCache - get offsetWidth error: no element assigned.`);\r\n   }\r\n\r\n   /**\r\n    * @param {HTMLElement} el -\r\n    *\r\n    * @returns {boolean} Does element match cached element.\r\n    */\r\n   hasData(el) { return this.el === el; }\r\n\r\n   /**\r\n    * Resets the style cache.\r\n    */\r\n   reset()\r\n   {\r\n      // Remove will-change inline style from previous element if it is still connected.\r\n      if (this.el instanceof HTMLElement && this.el.isConnected && !this.hasWillChange)\r\n      {\r\n         this.el.style.willChange = null;\r\n      }\r\n\r\n      this.el = void 0;\r\n      this.computed = void 0;\r\n      this.marginLeft = void 0;\r\n      this.marginTop = void 0;\r\n      this.maxHeight = void 0;\r\n      this.maxWidth = void 0;\r\n      this.minHeight = void 0;\r\n      this.minWidth = void 0;\r\n\r\n      this.hasWillChange = false;\r\n\r\n      // Silently reset `resizedObserved`; With proper usage the `resizeObserver` action issues an update on removal.\r\n      this.resizeObserved.contentHeight = void 0;\r\n      this.resizeObserved.contentWidth = void 0;\r\n      this.resizeObserved.offsetHeight = void 0;\r\n      this.resizeObserved.offsetWidth = void 0;\r\n\r\n      // Reset the tracked element this Position instance is modifying.\r\n      this.stores.element.set(void 0);\r\n   }\r\n\r\n   /**\r\n    * Updates the style cache with new data from the given element.\r\n    *\r\n    * @param {HTMLElement} el - An HTML element.\r\n    */\r\n   update(el)\r\n   {\r\n      this.el = el;\r\n\r\n      this.computed = globalThis.getComputedStyle(el);\r\n\r\n      this.marginLeft = styleParsePixels(el.style.marginLeft) ?? styleParsePixels(this.computed.marginLeft);\r\n      this.marginTop = styleParsePixels(el.style.marginTop) ?? styleParsePixels(this.computed.marginTop);\r\n      this.maxHeight = styleParsePixels(el.style.maxHeight) ?? styleParsePixels(this.computed.maxHeight);\r\n      this.maxWidth = styleParsePixels(el.style.maxWidth) ?? styleParsePixels(this.computed.maxWidth);\r\n\r\n      // Note that the computed styles for below will always be 0px / 0 when no style is active.\r\n      this.minHeight = styleParsePixels(el.style.minHeight) ?? styleParsePixels(this.computed.minHeight);\r\n      this.minWidth = styleParsePixels(el.style.minWidth) ?? styleParsePixels(this.computed.minWidth);\r\n\r\n      // Tracks if there already is a will-change property on the inline or computed styles.\r\n      const willChange = el.style.willChange !== '' ? el.style.willChange : void 0 ?? this.computed.willChange;\r\n\r\n      this.hasWillChange = willChange !== '' && willChange !== 'auto';\r\n\r\n      // Update the tracked element this Position instance is modifying.\r\n      this.stores.element.set(el);\r\n   }\r\n}\r\n","import { mat4, vec3 }   from '@typhonjs-fvtt/runtime/svelte/math';\r\n\r\n/**\r\n * Provides the output data for {@link Transforms.getData}.\r\n */\r\nexport class TransformData\r\n{\r\n   constructor()\r\n   {\r\n      Object.seal(this);\r\n   }\r\n\r\n   /**\r\n    * Stores the calculated bounding rectangle.\r\n    *\r\n    * @type {DOMRect}\r\n    */\r\n   #boundingRect = new DOMRect();\r\n\r\n   /**\r\n    * Stores the individual transformed corner points of the window in screenspace clockwise from:\r\n    * top left -> top right -> bottom right -> bottom left.\r\n    *\r\n    * @type {Vector3[]}\r\n    */\r\n   #corners = [vec3.create(), vec3.create(), vec3.create(), vec3.create()];\r\n\r\n   /**\r\n    * Stores the current gl-matrix mat4 data.\r\n    *\r\n    * @type {Matrix4}\r\n    */\r\n   #mat4 = mat4.create();\r\n\r\n   /**\r\n    * Stores the pre & post origin translations to apply to matrix transforms.\r\n    *\r\n    * @type {Matrix4[]}\r\n    */\r\n   #originTranslations = [mat4.create(), mat4.create()];\r\n\r\n   /**\r\n    * @returns {DOMRect} The bounding rectangle.\r\n    */\r\n   get boundingRect() { return this.#boundingRect; }\r\n\r\n   /**\r\n    * @returns {Vector3[]} The transformed corner points as vec3 in screen space.\r\n    */\r\n   get corners() { return this.#corners; }\r\n\r\n   /**\r\n    * @returns {string} Returns the CSS style string for the transform matrix.\r\n    */\r\n   get css() { return `matrix3d(${this.mat4.join(',')})`; }\r\n\r\n   /**\r\n    * @returns {Matrix4} The transform matrix.\r\n    */\r\n   get mat4() { return this.#mat4; }\r\n\r\n   /**\r\n    * @returns {Matrix4[]} The pre / post translation matrices for origin translation.\r\n    */\r\n   get originTranslations() { return this.#originTranslations; }\r\n}\r\n\r\n/**\r\n * @typedef {Float32Array} Vector3 - 3 Dimensional Vector.\r\n *\r\n * @see https://glmatrix.net/docs/module-vec3.html\r\n */\r\n\r\n/**\r\n * @typedef {Float32Array} Matrix4 - 4x4 Matrix; Format: column-major, when typed out it looks like row-major.\r\n *\r\n * @see https://glmatrix.net/docs/module-mat4.html\r\n */\r\n","/**\r\n * Provides the storage and sequencing of managed position validators. Each validator added may be a bespoke function or\r\n * a {@link ValidatorData} object containing an `id`, `validator`, and `weight` attributes; `validator` is the only\r\n * required attribute.\r\n *\r\n * The `id` attribute can be anything that creates a unique ID for the validator; recommended strings or numbers. This\r\n * allows validators to be removed by ID easily.\r\n *\r\n * The `weight` attribute is a number between 0 and 1 inclusive that allows validators to be added in a\r\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted validator always\r\n * runs before a higher weighted validator. If no weight is specified the default of '1' is assigned and it is appended\r\n * to the end of the validators list.\r\n *\r\n * This class forms the public API which is accessible from the `.validators` getter in the main Position instance.\r\n * ```\r\n * const position = new Position(<PositionData>);\r\n * position.validators.add(...);\r\n * position.validators.clear();\r\n * position.validators.length;\r\n * position.validators.remove(...);\r\n * position.validators.removeBy(...);\r\n * position.validators.removeById(...);\r\n * ```\r\n */\r\nexport class AdapterValidators\r\n{\r\n   /**\r\n    * @type {ValidatorData[]}\r\n    */\r\n   #validatorData;\r\n\r\n   #mapUnsubscribe = new Map();\r\n\r\n   /**\r\n    * @returns {[AdapterValidators, ValidatorData[]]} Returns this and internal storage for validator adapter.\r\n    */\r\n   constructor()\r\n   {\r\n      this.#validatorData = [];\r\n\r\n      Object.seal(this);\r\n\r\n      return [this, this.#validatorData];\r\n   }\r\n\r\n   /**\r\n    * @returns {number} Returns the length of the validators array.\r\n    */\r\n   get length() { return this.#validatorData.length; }\r\n\r\n   /**\r\n    * Provides an iterator for validators.\r\n    *\r\n    * @returns {Generator<ValidatorData|undefined>} Generator / iterator of validators.\r\n    * @yields {ValidatorData<T>}\r\n    */\r\n   *[Symbol.iterator]()\r\n   {\r\n      if (this.#validatorData.length === 0) { return; }\r\n\r\n      for (const entry of this.#validatorData)\r\n      {\r\n         yield { ...entry };\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {...(ValidatorFn<T>|ValidatorData<T>)}   validators -\r\n    */\r\n   add(...validators)\r\n   {\r\n      /**\r\n       * Tracks the number of validators added that have subscriber functionality.\r\n       *\r\n       * @type {number}\r\n       */\r\n      let subscribeCount = 0;\r\n\r\n      for (const validator of validators)\r\n      {\r\n         const validatorType = typeof validator;\r\n\r\n         if (validatorType !== 'function' && validatorType !== 'object' || validator === null)\r\n         {\r\n            throw new TypeError(`AdapterValidator error: 'validator' is not a function or object.`);\r\n         }\r\n\r\n         let data = void 0;\r\n         let subscribeFn = void 0;\r\n\r\n         switch (validatorType)\r\n         {\r\n            case 'function':\r\n               data = {\r\n                  id: void 0,\r\n                  validator,\r\n                  weight: 1\r\n               };\r\n\r\n               subscribeFn = validator.subscribe;\r\n               break;\r\n\r\n            case 'object':\r\n               if (typeof validator.validator !== 'function')\r\n               {\r\n                  throw new TypeError(`AdapterValidator error: 'validator' attribute is not a function.`);\r\n               }\r\n\r\n               if (validator.weight !== void 0 && typeof validator.weight !== 'number' ||\r\n                (validator.weight < 0 || validator.weight > 1))\r\n               {\r\n                  throw new TypeError(\r\n                   `AdapterValidator error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\r\n               }\r\n\r\n               data = {\r\n                  id: validator.id !== void 0 ? validator.id : void 0,\r\n                  validator: validator.validator.bind(validator),\r\n                  weight: validator.weight || 1,\r\n                  instance: validator\r\n               };\r\n\r\n               subscribeFn = validator.validator.subscribe ?? validator.subscribe;\r\n               break;\r\n         }\r\n\r\n         // Find the index to insert where data.weight is less than existing values weight.\r\n         const index = this.#validatorData.findIndex((value) =>\r\n         {\r\n            return data.weight < value.weight;\r\n         });\r\n\r\n         // If an index was found insert at that location.\r\n         if (index >= 0)\r\n         {\r\n            this.#validatorData.splice(index, 0, data);\r\n         }\r\n         else // push to end of validators.\r\n         {\r\n            this.#validatorData.push(data);\r\n         }\r\n\r\n         if (typeof subscribeFn === 'function')\r\n         {\r\n            // TODO: consider how to handle validator updates.\r\n            const unsubscribe = subscribeFn();\r\n\r\n            // Ensure that unsubscribe is a function.\r\n            if (typeof unsubscribe !== 'function')\r\n            {\r\n               throw new TypeError(\r\n                'AdapterValidator error: Filter has subscribe function, but no unsubscribe function is returned.');\r\n            }\r\n\r\n            // Ensure that the same validator is not subscribed to multiple times.\r\n            if (this.#mapUnsubscribe.has(data.validator))\r\n            {\r\n               throw new Error(\r\n                'AdapterValidator error: Filter added already has an unsubscribe function registered.');\r\n            }\r\n\r\n            this.#mapUnsubscribe.set(data.validator, unsubscribe);\r\n            subscribeCount++;\r\n         }\r\n      }\r\n\r\n      // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\r\n      // subscriber count is less than the amount of validators added then automatically trigger an index update\r\n      // manually.\r\n      // TODO: handle validator updates.\r\n      // if (subscribeCount < validators.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   clear()\r\n   {\r\n      this.#validatorData.length = 0;\r\n\r\n      // Unsubscribe from all validators with subscription support.\r\n      for (const unsubscribe of this.#mapUnsubscribe.values())\r\n      {\r\n         unsubscribe();\r\n      }\r\n\r\n      this.#mapUnsubscribe.clear();\r\n\r\n      // TODO: handle validator updates.\r\n      // this.#indexUpdate();\r\n   }\r\n\r\n   /**\r\n    * @param {...(ValidatorFn<T>|ValidatorData<T>)}   validators -\r\n    */\r\n   remove(...validators)\r\n   {\r\n      const length = this.#validatorData.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      for (const data of validators)\r\n      {\r\n         // Handle the case that the validator may either be a function or a validator entry / object.\r\n         const actualValidator = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\r\n          data.validator : void 0;\r\n\r\n         if (!actualValidator) { continue; }\r\n\r\n         for (let cntr = this.#validatorData.length; --cntr >= 0;)\r\n         {\r\n            if (this.#validatorData[cntr].validator === actualValidator)\r\n            {\r\n               this.#validatorData.splice(cntr, 1);\r\n\r\n               // Invoke any unsubscribe function for given validator then remove from tracking.\r\n               let unsubscribe = void 0;\r\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualValidator)) === 'function')\r\n               {\r\n                  unsubscribe();\r\n                  this.#mapUnsubscribe.delete(actualValidator);\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      // Update the index a validator was removed.\r\n      // TODO: handle validator updates.\r\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   /**\r\n    * Remove validators by the provided callback. The callback takes 3 parameters: `id`, `validator`, and `weight`.\r\n    * Any truthy value returned will remove that validator.\r\n    *\r\n    * @param {function(*, ValidatorFn<T>, number): boolean} callback - Callback function to evaluate each validator\r\n    *                                                                  entry.\r\n    */\r\n   removeBy(callback)\r\n   {\r\n      const length = this.#validatorData.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      if (typeof callback !== 'function')\r\n      {\r\n         throw new TypeError(`AdapterValidator error: 'callback' is not a function.`);\r\n      }\r\n\r\n      this.#validatorData = this.#validatorData.filter((data) =>\r\n      {\r\n         const remove = callback.call(callback, { ...data });\r\n\r\n         if (remove)\r\n         {\r\n            let unsubscribe;\r\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validator)) === 'function')\r\n            {\r\n               unsubscribe();\r\n               this.#mapUnsubscribe.delete(data.validator);\r\n            }\r\n         }\r\n\r\n         // Reverse remove boolean to properly validator / remove this validator.\r\n         return !remove;\r\n      });\r\n\r\n      // TODO: handle validator updates.\r\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   removeById(...ids)\r\n   {\r\n      const length = this.#validatorData.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      this.#validatorData = this.#validatorData.filter((data) =>\r\n      {\r\n         let remove = false;\r\n\r\n         for (const id of ids) { remove |= data.id === id; }\r\n\r\n         // If not keeping invoke any unsubscribe function for given validator then remove from tracking.\r\n         if (remove)\r\n         {\r\n            let unsubscribe;\r\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validator)) === 'function')\r\n            {\r\n               unsubscribe();\r\n               this.#mapUnsubscribe.delete(data.validator);\r\n            }\r\n         }\r\n\r\n         return !remove; // Swap here to actually remove the item via array validator method.\r\n      });\r\n\r\n      // TODO: handle validator updates.\r\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\r\n   }\r\n}\r\n\r\n/**\r\n * @callback ValidatorFn - Position validator function that takes a {@link PositionData} instance potentially\r\n *                             modifying it or returning null if invalid.\r\n *\r\n * @param {ValidationData} valData - Validation data.\r\n *\r\n * @returns {PositionData|null} The validated position data or null to cancel position update.\r\n *\r\n */\r\n\r\n/**\r\n * @typedef {object} ValidatorData\r\n *\r\n * @property {*}           [id=undefined] - An ID associated with this validator. Can be used to remove the validator.\r\n *\r\n * @property {ValidatorFn} validator - Position validator function that takes a {@link PositionData} instance\r\n *                                     potentially modifying it or returning null if invalid.\r\n *\r\n * @property {number}      [weight=1] - A number between 0 and 1 inclusive to position this validator against others.\r\n *\r\n * @property {Function}    [subscribe] - Optional subscribe function following the Svelte store / subscribe pattern.\r\n */\r\n","export class BasicBounds\r\n{\r\n   /**\r\n    * When true constrains the min / max width or height to element.\r\n    *\r\n    * @type {boolean}\r\n    */\r\n   #constrain;\r\n\r\n   /**\r\n    * @type {HTMLElement}\r\n    */\r\n   #element;\r\n\r\n   /**\r\n    * When true the validator is active.\r\n    *\r\n    * @type {boolean}\r\n    */\r\n   #enabled;\r\n\r\n   /**\r\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\r\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\r\n    *\r\n    * @type {number}\r\n    */\r\n   #height;\r\n\r\n   /**\r\n    * Set from an optional value in the constructor to lock accessors preventing modification.\r\n    */\r\n   #lock;\r\n\r\n   /**\r\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\r\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\r\n    *\r\n    * @type {number}\r\n    */\r\n   #width;\r\n\r\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {})\r\n   {\r\n      this.element = element;\r\n      this.constrain = constrain;\r\n      this.enabled = enabled;\r\n      this.width = width;\r\n      this.height = height;\r\n\r\n      this.#lock = typeof lock === 'boolean' ? lock : false;\r\n   }\r\n\r\n   get constrain() { return this.#constrain; }\r\n\r\n   get element() { return this.#element; }\r\n\r\n   get enabled() { return this.#enabled; }\r\n\r\n   get height() { return this.#height; }\r\n\r\n   get width() { return this.#width; }\r\n\r\n   set constrain(constrain)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\r\n\r\n      this.#constrain = constrain;\r\n   }\r\n\r\n   set element(element)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (element === void 0  || element === null || element instanceof HTMLElement)\r\n      {\r\n         this.#element = element;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\r\n      }\r\n   }\r\n\r\n   set enabled(enabled)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\r\n\r\n      this.#enabled = enabled;\r\n   }\r\n\r\n   set height(height)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (height === void 0 || Number.isFinite(height))\r\n      {\r\n         this.#height = height;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'height' is not a finite number or undefined.`);\r\n      }\r\n   }\r\n\r\n   set width(width)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (width === void 0 || Number.isFinite(width))\r\n      {\r\n         this.#width = width;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'width' is not a finite number or undefined.`);\r\n      }\r\n   }\r\n\r\n   setDimension(width, height)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (width === void 0 || Number.isFinite(width))\r\n      {\r\n         this.#width = width;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'width' is not a finite number or undefined.`);\r\n      }\r\n\r\n      if (height === void 0 || Number.isFinite(height))\r\n      {\r\n         this.#height = height;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'height' is not a finite number or undefined.`);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\r\n    * elements bounds.\r\n    *\r\n    * @param {ValidationData}   valData - The associated validation data for position updates.\r\n    *\r\n    * @returns {PositionData} Potentially adjusted position data.\r\n    */\r\n   validator(valData)\r\n   {\r\n      // Early out if element is undefined or local enabled state is false.\r\n      if (!this.#enabled) { return valData.position; }\r\n\r\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\r\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\r\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\r\n\r\n      if (typeof valData.position.width === 'number')\r\n      {\r\n         const maxW = valData.maxWidth ?? (this.#constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\r\n         valData.position.width = valData.width = Math.clamped(valData.position.width, valData.minWidth, maxW);\r\n\r\n         if ((valData.width + valData.position.left + valData.marginLeft) > boundsWidth)\r\n         {\r\n            valData.position.left = boundsWidth - valData.width - valData.marginLeft;\r\n         }\r\n      }\r\n\r\n      if (typeof valData.position.height === 'number')\r\n      {\r\n         const maxH = valData.maxHeight ?? (this.#constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\r\n         valData.position.height = valData.height = Math.clamped(valData.position.height, valData.minHeight, maxH);\r\n\r\n         if ((valData.height + valData.position.top + valData.marginTop) > boundsHeight)\r\n         {\r\n            valData.position.top = boundsHeight - valData.height - valData.marginTop;\r\n         }\r\n      }\r\n\r\n      const maxL = Math.max(boundsWidth - valData.width - valData.marginLeft, 0);\r\n      valData.position.left = Math.round(Math.clamped(valData.position.left, 0, maxL));\r\n\r\n      const maxT = Math.max(boundsHeight - valData.height - valData.marginTop, 0);\r\n      valData.position.top = Math.round(Math.clamped(valData.position.top, 0, maxT));\r\n\r\n      return valData.position;\r\n   }\r\n}\r\n","import { TransformData } from '../transform/TransformData.js';\r\n\r\nconst s_TRANSFORM_DATA = new TransformData();\r\n\r\nexport class TransformBounds\r\n{\r\n   /**\r\n    * When true constrains the min / max width or height to element.\r\n    *\r\n    * @type {boolean}\r\n    */\r\n   #constrain;\r\n\r\n   /**\r\n    * @type {HTMLElement}\r\n    */\r\n   #element;\r\n\r\n   /**\r\n    * When true the validator is active.\r\n    *\r\n    * @type {boolean}\r\n    */\r\n   #enabled;\r\n\r\n   /**\r\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\r\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\r\n    *\r\n    * @type {number}\r\n    */\r\n   #height;\r\n\r\n   /**\r\n    * Set from an optional value in the constructor to lock accessors preventing modification.\r\n    */\r\n   #lock;\r\n\r\n   /**\r\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\r\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\r\n    *\r\n    * @type {number}\r\n    */\r\n   #width;\r\n\r\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {})\r\n   {\r\n      this.element = element;\r\n      this.constrain = constrain;\r\n      this.enabled = enabled;\r\n      this.width = width;\r\n      this.height = height;\r\n\r\n      this.#lock = typeof lock === 'boolean' ? lock : false;\r\n   }\r\n\r\n   get constrain() { return this.#constrain; }\r\n\r\n   get element() { return this.#element; }\r\n\r\n   get enabled() { return this.#enabled; }\r\n\r\n   get height() { return this.#height; }\r\n\r\n   get width() { return this.#width; }\r\n\r\n   set constrain(constrain)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\r\n\r\n      this.#constrain = constrain;\r\n   }\r\n\r\n   set element(element)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (element === void 0 || element === null || element instanceof HTMLElement)\r\n      {\r\n         this.#element = element;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\r\n      }\r\n   }\r\n\r\n   set enabled(enabled)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\r\n\r\n      this.#enabled = enabled;\r\n   }\r\n\r\n   set height(height)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (height === void 0 || Number.isFinite(height))\r\n      {\r\n         this.#height = height;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'height' is not a finite number or undefined.`);\r\n      }\r\n   }\r\n\r\n   set width(width)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (width === void 0 || Number.isFinite(width))\r\n      {\r\n         this.#width = width;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'width' is not a finite number or undefined.`);\r\n      }\r\n   }\r\n\r\n   setDimension(width, height)\r\n   {\r\n      if (this.#lock) { return; }\r\n\r\n      if (width === void 0 || Number.isFinite(width))\r\n      {\r\n         this.#width = width;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'width' is not a finite number or undefined.`);\r\n      }\r\n\r\n      if (height === void 0 || Number.isFinite(height))\r\n      {\r\n         this.#height = height;\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`'height' is not a finite number or undefined.`);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\r\n    * elements bounds.\r\n    *\r\n    * @param {ValidationData}   valData - The associated validation data for position updates.\r\n    *\r\n    * @returns {PositionData} Potentially adjusted position data.\r\n    */\r\n   validator(valData)\r\n   {\r\n      // Early out if element is undefined or local enabled state is false.\r\n      if (!this.#enabled) { return valData.position; }\r\n\r\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\r\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\r\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\r\n\r\n      // Ensure min / max width constraints when position width is a number; not 'auto' or 'inherit'. If constrain is\r\n      // true cap width bounds.\r\n      if (typeof valData.position.width === 'number')\r\n      {\r\n         const maxW = valData.maxWidth ?? (this.#constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\r\n         valData.position.width = Math.clamped(valData.width, valData.minWidth, maxW);\r\n      }\r\n\r\n      // Ensure min / max height constraints when position height is a number; not 'auto' or 'inherit'. If constrain\r\n      // is true cap height bounds.\r\n      if (typeof valData.position.height === 'number')\r\n      {\r\n         const maxH = valData.maxHeight ?? (this.#constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\r\n         valData.position.height = Math.clamped(valData.height, valData.minHeight, maxH);\r\n      }\r\n\r\n      // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\r\n      // when position width / height is 'auto'.\r\n      const data = valData.transforms.getData(valData.position, s_TRANSFORM_DATA, valData);\r\n\r\n      // Check the bounding rectangle against browser height / width. Adjust position based on how far the overlap of\r\n      // the bounding rect is outside the bounds height / width. The order below matters as the constraints are top /\r\n      // left oriented, so perform those checks last.\r\n\r\n      const initialX = data.boundingRect.x;\r\n      const initialY = data.boundingRect.y;\r\n\r\n      if (data.boundingRect.bottom + valData.marginTop > boundsHeight)\r\n      {\r\n         data.boundingRect.y += boundsHeight - data.boundingRect.bottom - valData.marginTop;\r\n      }\r\n\r\n      if (data.boundingRect.right + valData.marginLeft > boundsWidth)\r\n      {\r\n         data.boundingRect.x += boundsWidth - data.boundingRect.right - valData.marginLeft;\r\n      }\r\n\r\n      if (data.boundingRect.top - valData.marginTop < 0)\r\n      {\r\n         data.boundingRect.y += Math.abs(data.boundingRect.top - valData.marginTop);\r\n      }\r\n\r\n      if (data.boundingRect.left - valData.marginLeft < 0)\r\n      {\r\n         data.boundingRect.x += Math.abs(data.boundingRect.left - valData.marginLeft);\r\n      }\r\n\r\n      valData.position.left -= initialX - data.boundingRect.x;\r\n      valData.position.top -= initialY - data.boundingRect.y;\r\n\r\n      return valData.position;\r\n   }\r\n}\r\n","import { BasicBounds }     from './BasicBounds.js';\r\nimport { TransformBounds } from './TransformBounds.js';\r\n\r\nconst basicWindow = new BasicBounds({ lock: true });\r\nconst transformWindow = new TransformBounds({ lock: true });\r\n\r\nexport { basicWindow, BasicBounds, transformWindow, TransformBounds };\r\n","import { degToRad, mat4, vec3 }  from '@typhonjs-fvtt/runtime/svelte/math';\r\n\r\nimport * as constants            from '../constants.js';\r\n\r\nimport { TransformData }         from './TransformData.js';\r\n\r\n/** @type {number[]} */\r\nconst s_SCALE_VECTOR = [1, 1, 1];\r\n\r\n/** @type {number[]} */\r\nconst s_TRANSLATE_VECTOR = [0, 0, 0];\r\n\r\n/** @type {Matrix4} */\r\nconst s_MAT4_RESULT = mat4.create();\r\n\r\n/** @type {Matrix4} */\r\nconst s_MAT4_TEMP = mat4.create();\r\n\r\n/** @type {Vector3} */\r\nconst s_VEC3_TEMP = vec3.create();\r\n\r\nexport class Transforms\r\n{\r\n   /**\r\n    * Stores the transform keys in the order added.\r\n    *\r\n    * @type {string[]}\r\n    */\r\n   #orderList = [];\r\n\r\n   constructor()\r\n   {\r\n      this._data = {};\r\n   }\r\n\r\n   /**\r\n    * @returns {boolean} Whether there are active transforms in local data.\r\n    */\r\n   get isActive() { return this.#orderList.length > 0; }\r\n\r\n   /**\r\n    * @returns {number|undefined} Any local rotateX data.\r\n    */\r\n   get rotateX() { return this._data.rotateX; }\r\n\r\n   /**\r\n    * @returns {number|undefined} Any local rotateY data.\r\n    */\r\n   get rotateY() { return this._data.rotateY; }\r\n\r\n   /**\r\n    * @returns {number|undefined} Any local rotateZ data.\r\n    */\r\n   get rotateZ() { return this._data.rotateZ; }\r\n\r\n   /**\r\n    * @returns {number|undefined} Any local rotateZ scale.\r\n    */\r\n   get scale() { return this._data.scale; }\r\n\r\n   /**\r\n    * @returns {number|undefined} Any local translateZ data.\r\n    */\r\n   get translateX() { return this._data.translateX; }\r\n\r\n   /**\r\n    * @returns {number|undefined} Any local translateZ data.\r\n    */\r\n   get translateY() { return this._data.translateY; }\r\n\r\n   /**\r\n    * @returns {number|undefined} Any local translateZ data.\r\n    */\r\n   get translateZ() { return this._data.translateZ; }\r\n\r\n   /**\r\n    * Sets the local rotateX data if the value is a finite number otherwise removes the local data.\r\n    *\r\n    * @param {number|null|undefined}   value - A value to set.\r\n    */\r\n   set rotateX(value)\r\n   {\r\n      if (Number.isFinite(value))\r\n      {\r\n         if (this._data.rotateX === void 0) { this.#orderList.push('rotateX'); }\r\n\r\n         this._data.rotateX = value;\r\n      }\r\n      else\r\n      {\r\n         if (this._data.rotateX !== void 0)\r\n         {\r\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateX');\r\n            if (index >= 0) { this.#orderList.splice(index, 1); }\r\n         }\r\n\r\n         delete this._data.rotateX;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Sets the local rotateY data if the value is a finite number otherwise removes the local data.\r\n    *\r\n    * @param {number|null|undefined}   value - A value to set.\r\n    */\r\n   set rotateY(value)\r\n   {\r\n      if (Number.isFinite(value))\r\n      {\r\n         if (this._data.rotateY === void 0) { this.#orderList.push('rotateY'); }\r\n\r\n         this._data.rotateY = value;\r\n      }\r\n      else\r\n      {\r\n         if (this._data.rotateY !== void 0)\r\n         {\r\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateY');\r\n            if (index >= 0) { this.#orderList.splice(index, 1); }\r\n         }\r\n\r\n         delete this._data.rotateY;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Sets the local rotateZ data if the value is a finite number otherwise removes the local data.\r\n    *\r\n    * @param {number|null|undefined}   value - A value to set.\r\n    */\r\n   set rotateZ(value)\r\n   {\r\n      if (Number.isFinite(value))\r\n      {\r\n         if (this._data.rotateZ === void 0) { this.#orderList.push('rotateZ'); }\r\n\r\n         this._data.rotateZ = value;\r\n      }\r\n\r\n      else\r\n      {\r\n         if (this._data.rotateZ !== void 0)\r\n         {\r\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateZ');\r\n            if (index >= 0) { this.#orderList.splice(index, 1); }\r\n         }\r\n\r\n         delete this._data.rotateZ;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Sets the local scale data if the value is a finite number otherwise removes the local data.\r\n    *\r\n    * @param {number|null|undefined}   value - A value to set.\r\n    */\r\n   set scale(value)\r\n   {\r\n      if (Number.isFinite(value))\r\n      {\r\n         if (this._data.scale === void 0) { this.#orderList.push('scale'); }\r\n\r\n         this._data.scale = value;\r\n      }\r\n      else\r\n      {\r\n         if (this._data.scale !== void 0)\r\n         {\r\n            const index = this.#orderList.findIndex((entry) => entry === 'scale');\r\n            if (index >= 0) { this.#orderList.splice(index, 1); }\r\n         }\r\n\r\n         delete this._data.scale;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Sets the local translateX data if the value is a finite number otherwise removes the local data.\r\n    *\r\n    * @param {number|null|undefined}   value - A value to set.\r\n    */\r\n   set translateX(value)\r\n   {\r\n      if (Number.isFinite(value))\r\n      {\r\n         if (this._data.translateX === void 0) { this.#orderList.push('translateX'); }\r\n\r\n         this._data.translateX = value;\r\n      }\r\n\r\n      else\r\n      {\r\n         if (this._data.translateX !== void 0)\r\n         {\r\n            const index = this.#orderList.findIndex((entry) => entry === 'translateX');\r\n            if (index >= 0) { this.#orderList.splice(index, 1); }\r\n         }\r\n\r\n         delete this._data.translateX;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Sets the local translateY data if the value is a finite number otherwise removes the local data.\r\n    *\r\n    * @param {number|null|undefined}   value - A value to set.\r\n    */\r\n   set translateY(value)\r\n   {\r\n      if (Number.isFinite(value))\r\n      {\r\n         if (this._data.translateY === void 0) { this.#orderList.push('translateY'); }\r\n\r\n         this._data.translateY = value;\r\n      }\r\n\r\n      else\r\n      {\r\n         if (this._data.translateY !== void 0)\r\n         {\r\n            const index = this.#orderList.findIndex((entry) => entry === 'translateY');\r\n            if (index >= 0) { this.#orderList.splice(index, 1); }\r\n         }\r\n\r\n         delete this._data.translateY;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Sets the local translateZ data if the value is a finite number otherwise removes the local data.\r\n    *\r\n    * @param {number|null|undefined}   value - A value to set.\r\n    */\r\n   set translateZ(value)\r\n   {\r\n      if (Number.isFinite(value))\r\n      {\r\n         if (this._data.translateZ === void 0) { this.#orderList.push('translateZ'); }\r\n\r\n         this._data.translateZ = value;\r\n      }\r\n\r\n      else\r\n      {\r\n         if (this._data.translateZ !== void 0)\r\n         {\r\n            const index = this.#orderList.findIndex((entry) => entry === 'translateZ');\r\n            if (index >= 0) { this.#orderList.splice(index, 1); }\r\n         }\r\n\r\n         delete this._data.translateZ;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns the matrix3d CSS transform for the given position / transform data.\r\n    *\r\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\r\n    *\r\n    * @returns {string} The CSS matrix3d string.\r\n    */\r\n   getCSS(data = this._data)\r\n   {\r\n      return `matrix3d(${this.getMat4(data, s_MAT4_RESULT).join(',')})`;\r\n   }\r\n\r\n   /**\r\n    * Returns the matrix3d CSS transform for the given position / transform data.\r\n    *\r\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\r\n    *\r\n    * @returns {string} The CSS matrix3d string.\r\n    */\r\n   getCSSOrtho(data = this._data)\r\n   {\r\n      return `matrix3d(${this.getMat4Ortho(data, s_MAT4_RESULT).join(',')})`;\r\n   }\r\n\r\n   /**\r\n    * Collects all data including a bounding rect, transform matrix, and points array of the given {@link PositionData}\r\n    * instance with the applied local transform data.\r\n    *\r\n    * @param {PositionData} position - The position data to process.\r\n    *\r\n    * @param {TransformData} [output] - Optional TransformData output instance.\r\n    *\r\n    * @param {object} [validationData] - Optional validation data for adjustment parameters.\r\n    *\r\n    * @returns {TransformData} The output TransformData instance.\r\n    */\r\n   getData(position, output = new TransformData(), validationData = {})\r\n   {\r\n      const valWidth = validationData.width ?? 0;\r\n      const valHeight = validationData.height ?? 0;\r\n      const valOffsetTop = validationData.offsetTop ?? validationData.marginTop ?? 0;\r\n      const valOffsetLeft = validationData.offsetLeft ?? validationData.offsetLeft ?? 0;\r\n\r\n      position.top += valOffsetTop;\r\n      position.left += valOffsetLeft;\r\n\r\n      const width = Number.isFinite(position.width) ? position.width : valWidth;\r\n      const height = Number.isFinite(position.height) ? position.height : valHeight;\r\n\r\n      const rect = output.corners;\r\n\r\n      if (this.hasTransform(position))\r\n      {\r\n         rect[0][0] = rect[0][1] = rect[0][2] = 0;\r\n         rect[1][0] = width;\r\n         rect[1][1] = rect[1][2] = 0;\r\n         rect[2][0] = width;\r\n         rect[2][1] = height;\r\n         rect[2][2] = 0;\r\n         rect[3][0] = 0;\r\n         rect[3][1] = height;\r\n         rect[3][2] = 0;\r\n\r\n         const matrix = this.getMat4(position, output.mat4);\r\n\r\n         const translate = s_GET_ORIGIN_TRANSLATION(position.transformOrigin, width, height, output.originTranslations);\r\n\r\n         if (constants.transformOriginDefault === position.transformOrigin)\r\n         {\r\n            vec3.transformMat4(rect[0], rect[0], matrix);\r\n            vec3.transformMat4(rect[1], rect[1], matrix);\r\n            vec3.transformMat4(rect[2], rect[2], matrix);\r\n            vec3.transformMat4(rect[3], rect[3], matrix);\r\n         }\r\n         else\r\n         {\r\n            vec3.transformMat4(rect[0], rect[0], translate[0]);\r\n            vec3.transformMat4(rect[0], rect[0], matrix);\r\n            vec3.transformMat4(rect[0], rect[0], translate[1]);\r\n\r\n            vec3.transformMat4(rect[1], rect[1], translate[0]);\r\n            vec3.transformMat4(rect[1], rect[1], matrix);\r\n            vec3.transformMat4(rect[1], rect[1], translate[1]);\r\n\r\n            vec3.transformMat4(rect[2], rect[2], translate[0]);\r\n            vec3.transformMat4(rect[2], rect[2], matrix);\r\n            vec3.transformMat4(rect[2], rect[2], translate[1]);\r\n\r\n            vec3.transformMat4(rect[3], rect[3], translate[0]);\r\n            vec3.transformMat4(rect[3], rect[3], matrix);\r\n            vec3.transformMat4(rect[3], rect[3], translate[1]);\r\n         }\r\n\r\n         rect[0][0] = position.left + rect[0][0];\r\n         rect[0][1] = position.top + rect[0][1];\r\n         rect[1][0] = position.left + rect[1][0];\r\n         rect[1][1] = position.top + rect[1][1];\r\n         rect[2][0] = position.left + rect[2][0];\r\n         rect[2][1] = position.top + rect[2][1];\r\n         rect[3][0] = position.left + rect[3][0];\r\n         rect[3][1] = position.top + rect[3][1];\r\n      }\r\n      else\r\n      {\r\n         rect[0][0] = position.left;\r\n         rect[0][1] = position.top;\r\n         rect[1][0] = position.left + width;\r\n         rect[1][1] = position.top;\r\n         rect[2][0] = position.left + width;\r\n         rect[2][1] = position.top + height;\r\n         rect[3][0] = position.left;\r\n         rect[3][1] = position.top + height;\r\n\r\n         mat4.identity(output.mat4);\r\n      }\r\n\r\n      let maxX = Number.MIN_SAFE_INTEGER;\r\n      let maxY = Number.MIN_SAFE_INTEGER;\r\n      let minX = Number.MAX_SAFE_INTEGER;\r\n      let minY = Number.MAX_SAFE_INTEGER;\r\n\r\n      for (let cntr = 4; --cntr >= 0;)\r\n      {\r\n         if (rect[cntr][0] > maxX) { maxX = rect[cntr][0]; }\r\n         if (rect[cntr][0] < minX) { minX = rect[cntr][0]; }\r\n         if (rect[cntr][1] > maxY) { maxY = rect[cntr][1]; }\r\n         if (rect[cntr][1] < minY) { minY = rect[cntr][1]; }\r\n      }\r\n\r\n      const boundingRect = output.boundingRect;\r\n      boundingRect.x = minX;\r\n      boundingRect.y = minY;\r\n      boundingRect.width = maxX - minX;\r\n      boundingRect.height = maxY - minY;\r\n\r\n      position.top -= valOffsetTop;\r\n      position.left -= valOffsetLeft;\r\n\r\n      return output;\r\n   }\r\n\r\n   /**\r\n    * Creates a transform matrix based on local data applied in order it was added.\r\n    *\r\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\r\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\r\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\r\n    *\r\n    * @param {object}   [data] - PositionData instance or local transform data.\r\n    *\r\n    * @param {Matrix4}  [output] - The output mat4 instance.\r\n    *\r\n    * @returns {Matrix4} Transform matrix.\r\n    */\r\n   getMat4(data = this._data, output = mat4.create())\r\n   {\r\n      const matrix = mat4.identity(output);\r\n\r\n      // Bitwise tracks applied transform keys from local transform data.\r\n      let seenKeys = 0;\r\n\r\n      const orderList = this.#orderList;\r\n\r\n      // First apply ordered transforms from local transform data.\r\n      for (let cntr = 0; cntr < orderList.length; cntr++)\r\n      {\r\n         const key = orderList[cntr];\r\n\r\n         switch (key)\r\n         {\r\n            case 'rotateX':\r\n               seenKeys |= constants.transformKeysBitwise.rotateX;\r\n               mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\r\n               break;\r\n\r\n            case 'rotateY':\r\n               seenKeys |= constants.transformKeysBitwise.rotateY;\r\n               mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\r\n               break;\r\n\r\n            case 'rotateZ':\r\n               seenKeys |= constants.transformKeysBitwise.rotateZ;\r\n               mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\r\n               break;\r\n\r\n            case 'scale':\r\n               seenKeys |= constants.transformKeysBitwise.scale;\r\n               s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data[key];\r\n               mat4.multiply(matrix, matrix, mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\r\n               break;\r\n\r\n            case 'translateX':\r\n               seenKeys |= constants.transformKeysBitwise.translateX;\r\n               s_TRANSLATE_VECTOR[0] = data.translateX;\r\n               s_TRANSLATE_VECTOR[1] = 0;\r\n               s_TRANSLATE_VECTOR[2] = 0;\r\n               mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\r\n               break;\r\n\r\n            case 'translateY':\r\n               seenKeys |= constants.transformKeysBitwise.translateY;\r\n               s_TRANSLATE_VECTOR[0] = 0;\r\n               s_TRANSLATE_VECTOR[1] = data.translateY;\r\n               s_TRANSLATE_VECTOR[2] = 0;\r\n               mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\r\n               break;\r\n\r\n            case 'translateZ':\r\n               seenKeys |= constants.transformKeysBitwise.translateZ;\r\n               s_TRANSLATE_VECTOR[0] = 0;\r\n               s_TRANSLATE_VECTOR[1] = 0;\r\n               s_TRANSLATE_VECTOR[2] = data.translateZ;\r\n               mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\r\n               break;\r\n         }\r\n      }\r\n\r\n      // Now apply any new keys not set in local transform data that have not been applied yet.\r\n      if (data !== this._data)\r\n      {\r\n         for (let cntr = 0; cntr < constants.transformKeys.length; cntr++)\r\n         {\r\n            const key = constants.transformKeys[cntr];\r\n\r\n            // Reject bad / no data or if the key has already been applied.\r\n            if (data[key] === null || (seenKeys & constants.transformKeysBitwise[key]) > 0) { continue; }\r\n\r\n            switch (key)\r\n            {\r\n               case 'rotateX':\r\n                  mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\r\n                  break;\r\n\r\n               case 'rotateY':\r\n                  mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\r\n                  break;\r\n\r\n               case 'rotateZ':\r\n                  mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\r\n                  break;\r\n\r\n               case 'scale':\r\n                  s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data[key];\r\n                  mat4.multiply(matrix, matrix, mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\r\n                  break;\r\n\r\n               case 'translateX':\r\n                  s_TRANSLATE_VECTOR[0] = data[key];\r\n                  s_TRANSLATE_VECTOR[1] = 0;\r\n                  s_TRANSLATE_VECTOR[2] = 0;\r\n                  mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\r\n                  break;\r\n\r\n               case 'translateY':\r\n                  s_TRANSLATE_VECTOR[0] = 0;\r\n                  s_TRANSLATE_VECTOR[1] = data[key];\r\n                  s_TRANSLATE_VECTOR[2] = 0;\r\n                  mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\r\n                  break;\r\n\r\n               case 'translateZ':\r\n                  s_TRANSLATE_VECTOR[0] = 0;\r\n                  s_TRANSLATE_VECTOR[1] = 0;\r\n                  s_TRANSLATE_VECTOR[2] = data[key];\r\n                  mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\r\n                  break;\r\n            }\r\n         }\r\n      }\r\n\r\n      return matrix;\r\n   }\r\n\r\n   /**\r\n    * Provides an orthographic enhancement to convert left / top positional data to a translate operation.\r\n    *\r\n    * This transform matrix takes into account that the remaining operations are , but adds any left / top attributes from passed in data to\r\n    * translate X / Y.\r\n    *\r\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\r\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\r\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\r\n    *\r\n    * @param {object}   [data] - PositionData instance or local transform data.\r\n    *\r\n    * @param {Matrix4}  [output] - The output mat4 instance.\r\n    *\r\n    * @returns {Matrix4} Transform matrix.\r\n    */\r\n   getMat4Ortho(data = this._data, output = mat4.create())\r\n   {\r\n      const matrix = mat4.identity(output);\r\n\r\n      // Attempt to retrieve values from passed in data otherwise default to 0.\r\n      // Always perform the translation last regardless of order added to local transform data.\r\n      // Add data.left to translateX and data.top to translateY.\r\n      s_TRANSLATE_VECTOR[0] = (data.left ?? 0) + (data.translateX ?? 0);\r\n      s_TRANSLATE_VECTOR[1] = (data.top ?? 0) + (data.translateY ?? 0);\r\n      s_TRANSLATE_VECTOR[2] = data.translateZ ?? 0;\r\n      mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\r\n\r\n      // Scale can also be applied out of order.\r\n      if (data.scale !== null)\r\n      {\r\n         s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data.scale;\r\n         mat4.multiply(matrix, matrix, mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\r\n      }\r\n\r\n      // Early out if there is not rotation data.\r\n      if (data.rotateX === null && data.rotateY === null && data.rotateZ === null) { return matrix; }\r\n\r\n      // Rotation transforms must be applied in the order they are added.\r\n\r\n      // Bitwise tracks applied transform keys from local transform data.\r\n      let seenKeys = 0;\r\n\r\n      const orderList = this.#orderList;\r\n\r\n      // First apply ordered transforms from local transform data.\r\n      for (let cntr = 0; cntr < orderList.length; cntr++)\r\n      {\r\n         const key = orderList[cntr];\r\n\r\n         switch (key)\r\n         {\r\n            case 'rotateX':\r\n               seenKeys |= constants.transformKeysBitwise.rotateX;\r\n               mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\r\n               break;\r\n\r\n            case 'rotateY':\r\n               seenKeys |= constants.transformKeysBitwise.rotateY;\r\n               mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\r\n               break;\r\n\r\n            case 'rotateZ':\r\n               seenKeys |= constants.transformKeysBitwise.rotateZ;\r\n               mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\r\n               break;\r\n         }\r\n      }\r\n\r\n      // Now apply any new keys not set in local transform data that have not been applied yet.\r\n      if (data !== this._data)\r\n      {\r\n         for (let cntr = 0; cntr < constants.transformKeys.length; cntr++)\r\n         {\r\n            const key = constants.transformKeys[cntr];\r\n\r\n            // Reject bad / no data or if the key has already been applied.\r\n            if (data[key] === null || (seenKeys & constants.transformKeysBitwise[key]) > 0) { continue; }\r\n\r\n            switch (key)\r\n            {\r\n               case 'rotateX':\r\n                  mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\r\n                  break;\r\n\r\n               case 'rotateY':\r\n                  mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\r\n                  break;\r\n\r\n               case 'rotateZ':\r\n                  mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\r\n                  break;\r\n            }\r\n         }\r\n      }\r\n\r\n      return matrix;\r\n   }\r\n\r\n   /**\r\n    * Tests an object if it contains transform keys and the values are finite numbers.\r\n    *\r\n    * @param {object} data - An object to test for transform data.\r\n    *\r\n    * @returns {boolean} Whether the given PositionData has transforms.\r\n    */\r\n   hasTransform(data)\r\n   {\r\n      for (const key of constants.transformKeys)\r\n      {\r\n         if (Number.isFinite(data[key])) { return true; }\r\n      }\r\n\r\n      return false;\r\n   }\r\n\r\n   /**\r\n    * Resets internal data from the given object containing valid transform keys.\r\n    *\r\n    * @param {object}   data - An object with transform data.\r\n    */\r\n   reset(data)\r\n   {\r\n      for (const key in data)\r\n      {\r\n         if (constants.transformKeys.includes(key))\r\n         {\r\n            if (Number.isFinite(data[key]))\r\n            {\r\n               this._data[key] = data[key];\r\n            }\r\n            else\r\n            {\r\n               const index = this.#orderList.findIndex((entry) => entry === key);\r\n               if (index >= 0) { this.#orderList.splice(index, 1); }\r\n\r\n               delete this._data[key];\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * Returns the translations necessary to translate a matrix operation based on the `transformOrigin` parameter of the\r\n * given position instance. The first entry / index 0 is the pre-translation and last entry / index 1 is the post-\r\n * translation.\r\n *\r\n * This method is used internally, but may be useful if you need the origin translation matrices to transform\r\n * bespoke points based on any `transformOrigin` set in {@link PositionData}.\r\n *\r\n * @param {string}   transformOrigin - The transform origin attribute from PositionData.\r\n *\r\n * @param {number}   width - The PositionData width or validation data width when 'auto'.\r\n *\r\n * @param {number}   height - The PositionData height or validation data height when 'auto'.\r\n *\r\n * @param {Matrix4[]}   output - Output Mat4 array.\r\n *\r\n * @returns {Matrix4[]} Output Mat4 array.\r\n */\r\nfunction s_GET_ORIGIN_TRANSLATION(transformOrigin, width, height, output)\r\n{\r\n   const vector = s_VEC3_TEMP;\r\n\r\n   switch (transformOrigin)\r\n   {\r\n      case 'top left':\r\n         vector[0] = vector[1] = 0;\r\n         mat4.fromTranslation(output[0], vector);\r\n         mat4.fromTranslation(output[1], vector);\r\n         break;\r\n\r\n      case 'top center':\r\n         vector[0] = -width * 0.5;\r\n         vector[1] = 0;\r\n         mat4.fromTranslation(output[0], vector);\r\n         vector[0] = width * 0.5;\r\n         mat4.fromTranslation(output[1], vector);\r\n         break;\r\n\r\n      case 'top right':\r\n         vector[0] = -width;\r\n         vector[1] = 0;\r\n         mat4.fromTranslation(output[0], vector);\r\n         vector[0] = width;\r\n         mat4.fromTranslation(output[1], vector);\r\n         break;\r\n\r\n      case 'center left':\r\n         vector[0] = 0;\r\n         vector[1] = -height * 0.5;\r\n         mat4.fromTranslation(output[0], vector);\r\n         vector[1] = height * 0.5;\r\n         mat4.fromTranslation(output[1], vector);\r\n         break;\r\n\r\n      case null: // By default null / no transform is center.\r\n      case 'center':\r\n         vector[0] = -width * 0.5;\r\n         vector[1] = -height * 0.5;\r\n         mat4.fromTranslation(output[0], vector);\r\n         vector[0] = width * 0.5;\r\n         vector[1] = height * 0.5;\r\n         mat4.fromTranslation(output[1], vector);\r\n         break;\r\n\r\n      case 'center right':\r\n         vector[0] = -width;\r\n         vector[1] = -height * 0.5;\r\n         mat4.fromTranslation(output[0], vector);\r\n         vector[0] = width;\r\n         vector[1] = height * 0.5;\r\n         mat4.fromTranslation(output[1], vector);\r\n         break;\r\n\r\n      case 'bottom left':\r\n         vector[0] = 0;\r\n         vector[1] = -height;\r\n         mat4.fromTranslation(output[0], vector);\r\n         vector[1] = height;\r\n         mat4.fromTranslation(output[1], vector);\r\n         break;\r\n\r\n      case 'bottom center':\r\n         vector[0] = -width * 0.5;\r\n         vector[1] = -height;\r\n         mat4.fromTranslation(output[0], vector);\r\n         vector[0] = width * 0.5;\r\n         vector[1] = height;\r\n         mat4.fromTranslation(output[1], vector);\r\n         break;\r\n\r\n      case 'bottom right':\r\n         vector[0] = -width;\r\n         vector[1] = -height;\r\n         mat4.fromTranslation(output[0], vector);\r\n         vector[0] = width;\r\n         vector[1] = height;\r\n         mat4.fromTranslation(output[1], vector);\r\n         break;\r\n\r\n      // No valid transform origin parameter; set identity.\r\n      default:\r\n         mat4.identity(output[0]);\r\n         mat4.identity(output[1]);\r\n         break;\r\n   }\r\n\r\n   return output;\r\n}\r\n","import { writable }        from 'svelte/store';\r\n\r\nimport { TransformData }   from '../transform/TransformData.js';\r\nimport { PositionData }    from '../PositionData.js';\r\n\r\nexport class UpdateElementData\r\n{\r\n   constructor()\r\n   {\r\n      /**\r\n       * Stores the private data from Position.\r\n       *\r\n       * @type {PositionData}\r\n       */\r\n      this.data = void 0;\r\n\r\n      /**\r\n       * Provides a copy of local data sent to subscribers.\r\n       *\r\n       * @type {PositionData}\r\n       */\r\n      this.dataSubscribers = new PositionData();\r\n\r\n      /**\r\n       * Stores the current dimension data used for the readable `dimension` store.\r\n       *\r\n       * @type {{width: number | 'auto', height: number | 'auto'}}\r\n       */\r\n      this.dimensionData = { width: 0, height: 0 };\r\n\r\n      /**\r\n       * @type {PositionChangeSet}\r\n       */\r\n      this.changeSet = void 0;\r\n\r\n      /**\r\n       * @type {PositionOptions}\r\n       */\r\n      this.options = void 0;\r\n\r\n      /**\r\n       * Stores if this Position / update data is queued for update.\r\n       *\r\n       * @type {boolean}\r\n       */\r\n      this.queued = false;\r\n\r\n      /**\r\n       * @type {StyleCache}\r\n       */\r\n      this.styleCache = void 0;\r\n\r\n      /**\r\n       * @type {Transforms}\r\n       */\r\n      this.transforms = void 0;\r\n\r\n      /**\r\n       * Stores the current transform data used for the readable `transform` store. It is only active when there are\r\n       * subscribers to the store or calculateTransform options is true.\r\n       *\r\n       * @type {TransformData}\r\n       */\r\n      this.transformData = new TransformData();\r\n\r\n      /**\r\n       * @type {(function(PositionData): void)[]}\r\n       */\r\n      this.subscriptions = void 0;\r\n\r\n      /**\r\n       * @type {Writable<{width: (number|\"auto\"), height: (number|\"auto\")}>}\r\n       */\r\n      this.storeDimension = writable(this.dimensionData);\r\n\r\n      // When there are subscribers set option to calculate transform updates; set to false when no subscribers.\r\n\r\n      /**\r\n       * @type {Writable<TransformData>}\r\n       */\r\n      this.storeTransform = writable(this.transformData, () =>\r\n      {\r\n         this.options.transformSubscribed = true;\r\n         return () => this.options.transformSubscribed = false;\r\n      });\r\n\r\n      /**\r\n       * Stores the queued state for update element processing.\r\n       *\r\n       * @type {boolean}\r\n       */\r\n      this.queued = false;\r\n\r\n      // Seal data backing readable stores.\r\n      Object.seal(this.dimensionData);\r\n   }\r\n}\r\n","import { isWritableStore } from '@typhonjs-fvtt/runtime/svelte/store';\n\n/**\r\n * Svelte doesn't provide any events for the animate directive.\r\n *\r\n * The provided function below wraps a Svelte animate directive function generating bubbling events for start & end of\r\n * animation.\r\n *\r\n * These events are `animate:start` and `animate:end`.\r\n *\r\n * This is useful for instance if you are animating several nodes in a scrollable container where the overflow parameter\r\n * needs to be set to `none` while animating such that the scrollbar is not activated by the animation.\r\n *\r\n * Optionally you may also provide a boolean writable store that will be set to true when animation is active. In some\r\n * cases this leads to an easier implementation for gating on animation state.\r\n *\r\n * @example <caption>With events</caption>\r\n * const flipWithEvents = animateEvents(flip);\r\n * </script>\r\n *\r\n * <main on:animate:start={() => console.log('animate:start')\r\n *       on:animate:end={() => console.log('animate:end')}>\r\n *    {#each someData as entry (entry.id)}\r\n *       <section animate:flipWithEvents />\r\n *    {/each}\r\n\r\n * @example <caption>With optional store</caption>\r\n * const isAnimating = writable(false);\r\n * const flipWithEvents = animateEvents(flip, isAnimating);\r\n * </script>\r\n *\r\n * <main class:no-scroll={$isAnimating}>\r\n *    {#each someData as entry (entry.id)}\r\n *       <section animate:flipWithEvents />\r\n *    {/each}\r\n *\r\n * @param {(node: Element, { from: DOMRect, to: DOMRect }, params?: *) =>\r\n *  import('svelte/animate').AnimationConfig} fn - A Svelte animation function.\r\n *\r\n * @param {import('svelte/store').Writable<boolean>} [store] - An optional boolean writable store that is set to true\r\n *                                                             when animation is active.\r\n *\r\n * @returns {(node: Element, { from: DOMRect, to: DOMRect }, params?: *) =>\r\n *  import('svelte/animate').AnimationConfig} Wrapped animation function.\r\n */\r\nfunction animateEvents(fn, store = void 0)\r\n{\r\n   if (typeof fn !== 'function') { throw new TypeError(`'fn' is not a function.`); }\r\n   if (store !== void 0 && !isWritableStore(store)) { throw new TypeError(`'store' is not a writable store.`); }\r\n\r\n   // Track a single start / end sequence across all animations.\r\n   let startFired = false;\r\n   let endFired = false;\r\n\r\n   return (node, animations, params = {}) =>\r\n   {\r\n      const animationConfig = fn(node, animations, params);\r\n\r\n      // Store any existing tick function.\r\n      const existingTick = animationConfig.tick;\r\n\r\n      // Use tick callback to fire events only once when t / time is 0 and 1.\r\n      animationConfig.tick = (t, u) =>\r\n      {\r\n         // If there is any tick function then invoke it.\r\n         if (existingTick) { existingTick(t, u); }\r\n\r\n         if (!startFired && t === 0)\r\n         {\r\n            if (store) { store.set(true); }\r\n            node.dispatchEvent(new CustomEvent('animate:start', { bubbles: true }));\r\n            startFired = true;\r\n            endFired = false;\r\n         }\r\n\r\n         if (!endFired && t === 1)\r\n         {\r\n            if (store) { store.set(false); }\r\n            node.dispatchEvent(new CustomEvent('animate:end', { bubbles: true }));\r\n            endFired = true;\r\n            startFired = false;\r\n         }\r\n      };\r\n\r\n      return animationConfig;\r\n   }\r\n}\n\n/**\r\n * Awaits `requestAnimationFrame` calls by the counter specified. This allows asynchronous applications for direct /\r\n * inline style modification amongst other direct animation techniques.\r\n *\r\n * @param {number}   [cntr=1] - A positive integer greater than 0 for amount of requestAnimationFrames to wait.\r\n *\r\n * @returns {Promise<number>} Returns current time equivalent to `performance.now()`.\r\n */\r\nasync function nextAnimationFrame(cntr = 1)\r\n{\r\n   if (!Number.isInteger(cntr) || cntr < 1)\r\n   {\r\n      throw new TypeError(`nextAnimationFrame error: 'cntr' must be a positive integer greater than 0.`);\r\n   }\r\n\r\n   let currentTime = performance.now();\r\n   for (;--cntr >= 0;)\r\n   {\r\n      currentTime = await new Promise((resolve) => requestAnimationFrame(resolve));\r\n   }\r\n\r\n   return currentTime;\r\n}\n\nexport { animateEvents, nextAnimationFrame };\n//# sourceMappingURL=index.js.map\n","import { nextAnimationFrame }    from '@typhonjs-fvtt/runtime/svelte/animate';\r\n\r\n/**\r\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link Position.elementUpdated} to await\r\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\r\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\r\n * element are in sync with the browser and potentially in the future be further throttled.\r\n *\r\n * @param {HTMLElement} el - The target HTMLElement.\r\n */\r\nexport class UpdateElementManager\r\n{\r\n   static list = [];\r\n   static listCntr = 0;\r\n\r\n   static updatePromise;\r\n\r\n   static get promise() { return this.updatePromise; }\r\n\r\n   /**\r\n    * Potentially adds the given element and internal updateData instance to the list.\r\n    *\r\n    * @param {HTMLElement}       el - An HTMLElement instance.\r\n    *\r\n    * @param {UpdateElementData} updateData - An UpdateElementData instance.\r\n    *\r\n    * @returns {Promise<number>} The unified next frame update promise. Returns `currentTime`.\r\n    */\r\n   static add(el, updateData)\r\n   {\r\n      if (this.listCntr < this.list.length)\r\n      {\r\n         const entry = this.list[this.listCntr];\r\n         entry[0] = el;\r\n         entry[1] = updateData;\r\n      }\r\n      else\r\n      {\r\n         this.list.push([el, updateData]);\r\n      }\r\n\r\n      this.listCntr++;\r\n      updateData.queued = true;\r\n\r\n      if (!this.updatePromise) { this.updatePromise = this.wait(); }\r\n\r\n      return this.updatePromise;\r\n   }\r\n\r\n   /**\r\n    * Await on `nextAnimationFrame` and iterate over list map invoking callback functions.\r\n    *\r\n    * @returns {Promise<number>} The next frame Promise / currentTime from nextAnimationFrame.\r\n    */\r\n   static async wait()\r\n   {\r\n      // Await the next animation frame. In the future this can be extended to multiple frames to divide update rate.\r\n      const currentTime = await nextAnimationFrame();\r\n\r\n      this.updatePromise = void 0;\r\n\r\n      for (let cntr = this.listCntr; --cntr >= 0;)\r\n      {\r\n         // Obtain data for entry.\r\n         const entry = this.list[cntr];\r\n         const el = entry[0];\r\n         const updateData = entry[1];\r\n\r\n         // Clear entry data.\r\n         entry[0] = void 0;\r\n         entry[1] = void 0;\r\n\r\n         // Reset queued state.\r\n         updateData.queued = false;\r\n\r\n         // Early out if the element is no longer connected to the DOM / shadow root.\r\n         // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\r\n         if (!el.isConnected) { continue; }\r\n\r\n         if (updateData.options.ortho)\r\n         {\r\n            s_UPDATE_ELEMENT_ORTHO(el, updateData);\r\n         }\r\n         else\r\n         {\r\n            s_UPDATE_ELEMENT(el, updateData);\r\n         }\r\n\r\n         // If calculate transform options is enabled then update the transform data and set the readable store.\r\n         if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\r\n         {\r\n            s_UPDATE_TRANSFORM(el, updateData);\r\n         }\r\n\r\n         // Update all subscribers with changed data.\r\n         this.updateSubscribers(updateData);\r\n      }\r\n\r\n      this.listCntr = 0;\r\n\r\n      return currentTime;\r\n   }\r\n\r\n   /**\r\n    * Potentially immediately updates the given element.\r\n    *\r\n    * @param {HTMLElement}       el - An HTMLElement instance.\r\n    *\r\n    * @param {UpdateElementData} updateData - An UpdateElementData instance.\r\n    */\r\n   static immediate(el, updateData)\r\n   {\r\n      // Early out if the element is no longer connected to the DOM / shadow root.\r\n      // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\r\n      if (!el.isConnected) { return; }\r\n\r\n      if (updateData.options.ortho)\r\n      {\r\n         s_UPDATE_ELEMENT_ORTHO(el, updateData);\r\n      }\r\n      else\r\n      {\r\n         s_UPDATE_ELEMENT(el, updateData);\r\n      }\r\n\r\n      // If calculate transform options is enabled then update the transform data and set the readable store.\r\n      if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\r\n      {\r\n         s_UPDATE_TRANSFORM(el, updateData);\r\n      }\r\n\r\n      // Update all subscribers with changed data.\r\n      this.updateSubscribers(updateData);\r\n   }\r\n\r\n   /**\r\n    * @param {UpdateElementData} updateData - Data change set.\r\n    */\r\n   static updateSubscribers(updateData)\r\n   {\r\n      const data = updateData.data;\r\n      const changeSet = updateData.changeSet;\r\n\r\n      if (!changeSet.hasChange()) { return; }\r\n\r\n      // Make a copy of the data.\r\n      const output = updateData.dataSubscribers.copy(data);\r\n\r\n      const subscriptions = updateData.subscriptions;\r\n\r\n      // Early out if there are no subscribers.\r\n      if (subscriptions.length > 0)\r\n      {\r\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](output); }\r\n      }\r\n\r\n      // Update dimension data if width / height has changed.\r\n      if (changeSet.width || changeSet.height)\r\n      {\r\n         updateData.dimensionData.width = data.width;\r\n         updateData.dimensionData.height = data.height;\r\n         updateData.storeDimension.set(updateData.dimensionData);\r\n      }\r\n\r\n      changeSet.set(false);\r\n   }\r\n}\r\n\r\n/**\r\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link Position.elementUpdated} to await\r\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\r\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\r\n * element are in sync with the browser and potentially in the future be further throttled.\r\n *\r\n * @param {HTMLElement} el - The target HTMLElement.\r\n *\r\n * @param {UpdateElementData} updateData - Update data.\r\n */\r\nfunction s_UPDATE_ELEMENT(el, updateData)\r\n{\r\n   const changeSet = updateData.changeSet;\r\n   const data = updateData.data;\r\n\r\n   if (changeSet.left)\r\n   {\r\n      el.style.left = `${data.left}px`;\r\n   }\r\n\r\n   if (changeSet.top)\r\n   {\r\n      el.style.top = `${data.top}px`;\r\n   }\r\n\r\n   if (changeSet.zIndex)\r\n   {\r\n      el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\r\n   }\r\n\r\n   if (changeSet.width)\r\n   {\r\n      el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\r\n   }\r\n\r\n   if (changeSet.height)\r\n   {\r\n      el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\r\n   }\r\n\r\n   if (changeSet.transformOrigin)\r\n   {\r\n      // When set to 'center' we can simply set the transform to null which is center by default.\r\n      el.style.transformOrigin = data.transformOrigin === 'center' ? null : data.transformOrigin;\r\n   }\r\n\r\n   // Update all transforms in order added to transforms object.\r\n   if (changeSet.transform)\r\n   {\r\n      el.style.transform = updateData.transforms.isActive ? updateData.transforms.getCSS() : null;\r\n   }\r\n}\r\n\r\n/**\r\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link Position.elementUpdated} to await\r\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\r\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\r\n * element are in sync with the browser and potentially in the future be further throttled.\r\n *\r\n * @param {HTMLElement} el - The target HTMLElement.\r\n *\r\n * @param {UpdateElementData} updateData - Update data.\r\n */\r\nfunction s_UPDATE_ELEMENT_ORTHO(el, updateData)\r\n{\r\n   const changeSet = updateData.changeSet;\r\n   const data = updateData.data;\r\n\r\n   if (changeSet.zIndex)\r\n   {\r\n      el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\r\n   }\r\n\r\n   if (changeSet.width)\r\n   {\r\n      el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\r\n   }\r\n\r\n   if (changeSet.height)\r\n   {\r\n      el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\r\n   }\r\n\r\n   if (changeSet.transformOrigin)\r\n   {\r\n      // When set to 'center' we can simply set the transform to null which is center by default.\r\n      el.style.transformOrigin = data.transformOrigin === 'center' ? null : data.transformOrigin;\r\n   }\r\n\r\n   // Update all transforms in order added to transforms object.\r\n   if (changeSet.left || changeSet.top || changeSet.transform)\r\n   {\r\n      el.style.transform = updateData.transforms.getCSSOrtho(data);\r\n   }\r\n}\r\n\r\n/**\r\n * Updates the applied transform data and sets the readble `transform` store.\r\n *\r\n * @param {HTMLElement} el - The target HTMLElement.\r\n *\r\n * @param {UpdateElementData} updateData - Update element data.\r\n */\r\nfunction s_UPDATE_TRANSFORM(el, updateData)\r\n{\r\n   s_VALIDATION_DATA.height = updateData.data.height !== 'auto' ? updateData.data.height :\r\n    updateData.styleCache.offsetHeight;\r\n\r\n   s_VALIDATION_DATA.width = updateData.data.width !== 'auto' ? updateData.data.width :\r\n    updateData.styleCache.offsetWidth;\r\n\r\n   s_VALIDATION_DATA.marginLeft = updateData.styleCache.marginLeft;\r\n\r\n   s_VALIDATION_DATA.marginTop = updateData.styleCache.marginTop;\r\n\r\n   // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\r\n   // when position width / height is 'auto'.\r\n   updateData.transforms.getData(updateData.data, updateData.transformData, s_VALIDATION_DATA);\r\n\r\n   updateData.storeTransform.set(updateData.transformData);\r\n}\r\n\r\nconst s_VALIDATION_DATA = {\r\n   height: void 0,\r\n   width: void 0,\r\n   marginLeft: void 0,\r\n   marginTop: void 0\r\n};\r\n","import {\r\n   propertyStore,\r\n   subscribeIgnoreFirst }        from '@typhonjs-fvtt/runtime/svelte/store';\r\n\r\nimport {\r\n   isIterable,\r\n   isObject,\r\n   isPlainObject }               from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\nimport { AnimationAPI }          from './animation/AnimationAPI.js';\r\nimport { AnimationGroupAPI }     from './animation/AnimationGroupAPI.js';\r\nimport * as constants            from './constants.js';\r\nimport { convertRelative }       from './convertRelative.js';\r\nimport * as positionInitial      from './initial/index.js';\r\nimport { PositionChangeSet }     from './PositionChangeSet.js';\r\nimport { PositionData }          from './PositionData.js';\r\nimport { PositionStateAPI }      from './PositionStateAPI.js';\r\nimport { StyleCache }            from './StyleCache.js';\r\nimport { TransformData }         from './transform/TransformData.js';\r\nimport { AdapterValidators }     from './validators/AdapterValidators.js';\r\nimport * as positionValidators   from './validators/index.js';\r\nimport { Transforms }            from './transform/Transforms.js';\r\nimport { UpdateElementData }     from './update/UpdateElementData.js';\r\nimport { UpdateElementManager }  from './update/UpdateElementManager.js';\r\n\r\n/**\r\n * Provides a store for position following the subscriber protocol in addition to providing individual writable derived\r\n * stores for each independent variable.\r\n */\r\nexport class Position\r\n{\r\n   /**\r\n    * @type {PositionData}\r\n    */\r\n   #data = new PositionData();\r\n\r\n   /**\r\n    * Provides the animation API.\r\n    *\r\n    * @type {AnimationAPI}\r\n    */\r\n   #animate = new AnimationAPI(this, this.#data);\r\n\r\n   /**\r\n    * Stores the style attributes that changed on update.\r\n    *\r\n    * @type {PositionChangeSet}\r\n    */\r\n   #positionChangeSet = new PositionChangeSet();\r\n\r\n   /**\r\n    * Stores ongoing options that are set in the constructor or by transform store subscription.\r\n    *\r\n    * @type {PositionOptions}\r\n    */\r\n   #options = {\r\n      calculateTransform: false,\r\n      initialHelper: void 0,\r\n      ortho: true,\r\n      transformSubscribed: false\r\n   };\r\n\r\n   /**\r\n    * The associated parent for positional data tracking. Used in validators.\r\n    *\r\n    * @type {PositionParent}\r\n    */\r\n   #parent;\r\n\r\n   /**\r\n    * @type {StorePosition}\r\n    */\r\n   #stores;\r\n\r\n   /**\r\n    * Stores an instance of the computer styles for the target element.\r\n    *\r\n    * @type {StyleCache}\r\n    */\r\n   #styleCache;\r\n\r\n   /**\r\n    * Stores the subscribers.\r\n    *\r\n    * @type {(function(PositionData): void)[]}\r\n    */\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * @type {Transforms}\r\n    */\r\n   #transforms = new Transforms();\r\n\r\n   /**\r\n    * @type {UpdateElementData}\r\n    */\r\n   #updateElementData;\r\n\r\n   /**\r\n    * Stores the UpdateElementManager wait promise.\r\n    *\r\n    * @type {Promise}\r\n    */\r\n   #updateElementPromise;\r\n\r\n   /**\r\n    * @type {AdapterValidators}\r\n    */\r\n   #validators;\r\n\r\n   /**\r\n    * @type {ValidatorData[]}\r\n    */\r\n   #validatorData;\r\n\r\n   /**\r\n    * @type {PositionStateAPI}\r\n    */\r\n   #state = new PositionStateAPI(this, this.#data, this.#transforms);\r\n\r\n   /**\r\n    * @returns {AnimationGroupAPI} Public Animation API.\r\n    */\r\n   static get Animate() { return AnimationGroupAPI; }\r\n\r\n   /**\r\n    * @returns {{browserCentered?: Centered, Centered?: *}} Initial position helpers.\r\n    */\r\n   static get Initial() { return positionInitial; }\r\n\r\n   /**\r\n    * Returns TransformData class / constructor.\r\n    *\r\n    * @returns {TransformData} TransformData class / constructor.\r\n    */\r\n   static get TransformData() { return TransformData; }\r\n\r\n   /**\r\n    * Returns default validators.\r\n    *\r\n    * Note: `basicWindow` and `BasicBounds` will eventually be removed.\r\n    *\r\n    * @returns {{basicWindow?: BasicBounds, transformWindow?: TransformBounds, TransformBounds?: *, BasicBounds?: *}}\r\n    *  Available validators.\r\n    */\r\n   static get Validators() { return positionValidators; }\r\n\r\n   /**\r\n    * Returns a duplicate of a given position instance copying any options and validators.\r\n    *\r\n    * // TODO: Consider more safety over options processing.\r\n    *\r\n    * @param {Position}          position - A position instance.\r\n    *\r\n    * @param {PositionOptions}   options - Position options.\r\n    *\r\n    * @returns {Position} A duplicate position instance.\r\n    */\r\n   static duplicate(position, options)\r\n   {\r\n      if (!(position instanceof Position)) { throw new TypeError(`'position' is not an instance of Position.`); }\r\n\r\n      const newPosition = new Position(options);\r\n\r\n      newPosition.#options = Object.assign({}, position.#options, options);\r\n      newPosition.#validators.add(...position.#validators);\r\n\r\n      newPosition.set(position.#data);\r\n\r\n      return newPosition;\r\n   }\r\n\r\n   /**\r\n    * @param {PositionParent|PositionOptionsAll}   [parent] - A potential parent element or object w/ `elementTarget`\r\n    *                                                      getter. May also be the PositionOptions object w/ 1 argument.\r\n    *\r\n    * @param {PositionOptionsAll}   [options] - Default values.\r\n    */\r\n   constructor(parent, options)\r\n   {\r\n      // Test if `parent` is a plain object; if so treat as options object.\r\n      if (isPlainObject(parent))\r\n      {\r\n         options = parent;\r\n      }\r\n      else\r\n      {\r\n         this.#parent = parent;\r\n      }\r\n\r\n      const data = this.#data;\r\n      const transforms = this.#transforms;\r\n\r\n      this.#styleCache = new StyleCache();\r\n\r\n      const updateData = new UpdateElementData();\r\n\r\n      updateData.changeSet = this.#positionChangeSet;\r\n      updateData.data = this.#data;\r\n      updateData.options = this.#options;\r\n      updateData.styleCache = this.#styleCache;\r\n      updateData.subscriptions = this.#subscriptions;\r\n      updateData.transforms = this.#transforms;\r\n\r\n      this.#updateElementData = updateData;\r\n\r\n      if (typeof options === 'object')\r\n      {\r\n         // Set Position options\r\n         if (typeof options.calculateTransform === 'boolean')\r\n         {\r\n            this.#options.calculateTransform = options.calculateTransform;\r\n         }\r\n\r\n         if (typeof options.ortho === 'boolean')\r\n         {\r\n            this.#options.ortho = options.ortho;\r\n         }\r\n\r\n         // Set default values from options.\r\n\r\n         if (Number.isFinite(options.height) || options.height === 'auto' || options.height === 'inherit' ||\r\n          options.height === null)\r\n         {\r\n            data.height = updateData.dimensionData.height = typeof options.height === 'number' ?\r\n             Math.round(options.height) : options.height;\r\n         }\r\n\r\n         if (Number.isFinite(options.left) || options.left === null)\r\n         {\r\n            data.left = typeof options.left === 'number' ? Math.round(options.left) : options.left;\r\n         }\r\n\r\n         if (Number.isFinite(options.maxHeight) || options.maxHeight === null)\r\n         {\r\n            data.maxHeight = typeof options.maxHeight === 'number' ? Math.round(options.maxHeight) : options.maxHeight;\r\n         }\r\n\r\n         if (Number.isFinite(options.maxWidth) || options.maxWidth === null)\r\n         {\r\n            data.maxWidth = typeof options.maxWidth === 'number' ? Math.round(options.maxWidth) : options.maxWidth;\r\n         }\r\n\r\n         if (Number.isFinite(options.minHeight) || options.minHeight === null)\r\n         {\r\n            data.minHeight = typeof options.minHeight === 'number' ? Math.round(options.minHeight) : options.minHeight;\r\n         }\r\n\r\n         if (Number.isFinite(options.minWidth) || options.minWidth === null)\r\n         {\r\n            data.minWidth = typeof options.minWidth === 'number' ? Math.round(options.minWidth) : options.minWidth;\r\n         }\r\n\r\n         if (Number.isFinite(options.rotateX) || options.rotateX === null)\r\n         {\r\n            transforms.rotateX = data.rotateX = options.rotateX;\r\n         }\r\n\r\n         if (Number.isFinite(options.rotateY) || options.rotateY === null)\r\n         {\r\n            transforms.rotateY = data.rotateY = options.rotateY;\r\n         }\r\n\r\n         if (Number.isFinite(options.rotateZ) || options.rotateZ === null)\r\n         {\r\n            transforms.rotateZ = data.rotateZ = options.rotateZ;\r\n         }\r\n\r\n         if (Number.isFinite(options.scale) || options.scale === null)\r\n         {\r\n            transforms.scale = data.scale = options.scale;\r\n         }\r\n\r\n         if (Number.isFinite(options.top) || options.top === null)\r\n         {\r\n            data.top = typeof options.top === 'number' ? Math.round(options.top) : options.top;\r\n         }\r\n\r\n         if (typeof options.transformOrigin === 'string' || options.transformOrigin === null)\r\n         {\r\n            data.transformOrigin = constants.transformOrigins.includes(options.transformOrigin) ?\r\n             options.transformOrigin : null;\r\n         }\r\n\r\n         if (Number.isFinite(options.translateX) || options.translateX === null)\r\n         {\r\n            transforms.translateX = data.translateX = options.translateX;\r\n         }\r\n\r\n         if (Number.isFinite(options.translateY) || options.translateY === null)\r\n         {\r\n            transforms.translateY = data.translateY = options.translateY;\r\n         }\r\n\r\n         if (Number.isFinite(options.translateZ) || options.translateZ === null)\r\n         {\r\n            transforms.translateZ = data.translateZ = options.translateZ;\r\n         }\r\n\r\n         if (Number.isFinite(options.width) || options.width === 'auto' || options.width === 'inherit' ||\r\n          options.width === null)\r\n         {\r\n            data.width = updateData.dimensionData.width = typeof options.width === 'number' ?\r\n             Math.round(options.width) : options.width;\r\n         }\r\n\r\n         if (Number.isFinite(options.zIndex) || options.zIndex === null)\r\n         {\r\n            data.zIndex = typeof options.zIndex === 'number' ? Math.round(options.zIndex) : options.zIndex;\r\n         }\r\n      }\r\n\r\n      this.#stores = {\r\n         // The main properties for manipulating Position.\r\n         height: propertyStore(this, 'height'),\r\n         left: propertyStore(this, 'left'),\r\n         rotateX: propertyStore(this, 'rotateX'),\r\n         rotateY: propertyStore(this, 'rotateY'),\r\n         rotateZ: propertyStore(this, 'rotateZ'),\r\n         scale: propertyStore(this, 'scale'),\r\n         top: propertyStore(this, 'top'),\r\n         transformOrigin: propertyStore(this, 'transformOrigin'),\r\n         translateX: propertyStore(this, 'translateX'),\r\n         translateY: propertyStore(this, 'translateY'),\r\n         translateZ: propertyStore(this, 'translateZ'),\r\n         width: propertyStore(this, 'width'),\r\n         zIndex: propertyStore(this, 'zIndex'),\r\n\r\n         // Stores that control validation when width / height is not `auto`.\r\n         maxHeight: propertyStore(this, 'maxHeight'),\r\n         maxWidth: propertyStore(this, 'maxWidth'),\r\n         minHeight: propertyStore(this, 'minHeight'),\r\n         minWidth: propertyStore(this, 'minWidth'),\r\n\r\n         // Readable stores based on updates or from resize observer changes.\r\n         dimension: { subscribe: updateData.storeDimension.subscribe },\r\n         element: { subscribe: this.#styleCache.stores.element.subscribe },\r\n         resizeContentHeight: { subscribe: this.#styleCache.stores.resizeContentHeight.subscribe },\r\n         resizeContentWidth: { subscribe: this.#styleCache.stores.resizeContentWidth.subscribe },\r\n         resizeOffsetHeight: { subscribe: this.#styleCache.stores.resizeOffsetHeight.subscribe },\r\n         resizeOffsetWidth: { subscribe: this.#styleCache.stores.resizeOffsetWidth.subscribe },\r\n         transform: { subscribe: updateData.storeTransform.subscribe },\r\n\r\n         // Protected store that should only be set by resizeObserver action.\r\n         resizeObserved: this.#styleCache.stores.resizeObserved,\r\n      };\r\n\r\n      // When resize change from any applied resizeObserver action automatically set data for new validation run.\r\n      // A resizeObserver prop should be set to true for ApplicationShell components or usage of resizeObserver action\r\n      // to monitor for changes. This should only be used on elements that have 'auto' for width or height.\r\n      subscribeIgnoreFirst(this.#stores.resizeObserved, (resizeData) =>\r\n      {\r\n         const parent = this.#parent;\r\n         const el = parent instanceof HTMLElement ? parent : parent?.elementTarget;\r\n\r\n         // Only invoke set if there is a target element and the resize data has a valid offset width & height.\r\n         if (el instanceof HTMLElement && Number.isFinite(resizeData?.offsetWidth) &&\r\n          Number.isFinite(resizeData?.offsetHeight))\r\n         {\r\n            this.set(data);\r\n         }\r\n      });\r\n\r\n      this.#stores.transformOrigin.values = constants.transformOrigins;\r\n\r\n      [this.#validators, this.#validatorData] = new AdapterValidators();\r\n\r\n      if (options?.initial || options?.positionInitial)\r\n      {\r\n         const initialHelper = options.initial ?? options.positionInitial;\r\n\r\n         if (typeof initialHelper?.getLeft !== 'function' || typeof initialHelper?.getTop !== 'function')\r\n         {\r\n            throw new Error(\r\n             `'options.initial' position helper does not contain 'getLeft' and / or 'getTop' functions.`);\r\n         }\r\n\r\n         this.#options.initialHelper = options.initial;\r\n      }\r\n\r\n      if (options?.validator)\r\n      {\r\n         if (isIterable(options?.validator)) { this.validators.add(...options.validator); }\r\n         else { this.validators.add(options.validator); }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns the animation API.\r\n    *\r\n    * @returns {AnimationAPI} Animation API.\r\n    */\r\n   get animate()\r\n   {\r\n      return this.#animate;\r\n   }\r\n\r\n   /**\r\n    * Returns the dimension data for the readable store.\r\n    *\r\n    * @returns {{width: number | 'auto', height: number | 'auto'}} Dimension data.\r\n    */\r\n   get dimension()\r\n   {\r\n      return this.#updateElementData.dimensionData;\r\n   }\r\n\r\n   /**\r\n    * Returns the current HTMLElement being positioned.\r\n    *\r\n    * @returns {HTMLElement|undefined} Current HTMLElement being positioned.\r\n    */\r\n   get element()\r\n   {\r\n      return this.#styleCache.el;\r\n   }\r\n\r\n   /**\r\n    * Returns a promise that is resolved on the next element update with the time of the update.\r\n    *\r\n    * @returns {Promise<number>} Promise resolved on element update.\r\n    */\r\n   get elementUpdated()\r\n   {\r\n      return this.#updateElementPromise;\r\n   }\r\n\r\n   /**\r\n    * Returns the associated {@link PositionParent} instance.\r\n    *\r\n    * @returns {PositionParent} The PositionParent instance.\r\n    */\r\n   get parent() { return this.#parent; }\r\n\r\n   /**\r\n    * Returns the state API.\r\n    *\r\n    * @returns {PositionStateAPI} Position state API.\r\n    */\r\n   get state() { return this.#state; }\r\n\r\n   /**\r\n    * Returns the derived writable stores for individual data variables.\r\n    *\r\n    * @returns {StorePosition} Derived / writable stores.\r\n    */\r\n   get stores() { return this.#stores; }\r\n\r\n   /**\r\n    * Returns the transform data for the readable store.\r\n    *\r\n    * @returns {TransformData} Transform Data.\r\n    */\r\n   get transform()\r\n   {\r\n      return this.#updateElementData.transformData;\r\n   }\r\n\r\n   /**\r\n    * Returns the validators.\r\n    *\r\n    * @returns {AdapterValidators} validators.\r\n    */\r\n   get validators() { return this.#validators; }\r\n\r\n   /**\r\n    * Sets the associated {@link PositionParent} instance. Resets the style cache and default data.\r\n    *\r\n    * @param {PositionParent|void} parent - A PositionParent instance.\r\n    */\r\n   set parent(parent)\r\n   {\r\n      if (parent !== void 0 && !(parent instanceof HTMLElement) && !isObject(parent))\r\n      {\r\n         throw new TypeError(`'parent' is not an HTMLElement, object, or undefined.`);\r\n      }\r\n\r\n      this.#parent = parent;\r\n\r\n      // Reset any stored default data & the style cache.\r\n      this.#state.remove({ name: '#defaultData' });\r\n      this.#styleCache.reset();\r\n\r\n      // If a parent is defined then invoke set to update any parent element.\r\n      if (parent) { this.set(this.#data); }\r\n   }\r\n\r\n// Data accessors ----------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * @returns {number|'auto'|'inherit'|null} height\r\n    */\r\n   get height() { return this.#data.height; }\r\n\r\n   /**\r\n    * @returns {number|null} left\r\n    */\r\n   get left() { return this.#data.left; }\r\n\r\n   /**\r\n    * @returns {number|null} maxHeight\r\n    */\r\n   get maxHeight() { return this.#data.maxHeight; }\r\n\r\n   /**\r\n    * @returns {number|null} maxWidth\r\n    */\r\n   get maxWidth() { return this.#data.maxWidth; }\r\n\r\n   /**\r\n    * @returns {number|null} minHeight\r\n    */\r\n   get minHeight() { return this.#data.minHeight; }\r\n\r\n   /**\r\n    * @returns {number|null} minWidth\r\n    */\r\n   get minWidth() { return this.#data.minWidth; }\r\n\r\n   /**\r\n    * @returns {number|null} rotateX\r\n    */\r\n   get rotateX() { return this.#data.rotateX; }\r\n\r\n   /**\r\n    * @returns {number|null} rotateY\r\n    */\r\n   get rotateY() { return this.#data.rotateY; }\r\n\r\n   /**\r\n    * @returns {number|null} rotateZ\r\n    */\r\n   get rotateZ() { return this.#data.rotateZ; }\r\n\r\n   /**\r\n    * @returns {number|null} alias for rotateZ\r\n    */\r\n   get rotation() { return this.#data.rotateZ; }\r\n\r\n   /**\r\n    * @returns {number|null} scale\r\n    */\r\n   get scale() { return this.#data.scale; }\r\n\r\n   /**\r\n    * @returns {number|null} top\r\n    */\r\n   get top() { return this.#data.top; }\r\n\r\n   /**\r\n    * @returns {string} transformOrigin\r\n    */\r\n   get transformOrigin() { return this.#data.transformOrigin; }\r\n\r\n   /**\r\n    * @returns {number|null} translateX\r\n    */\r\n   get translateX() { return this.#data.translateX; }\r\n\r\n   /**\r\n    * @returns {number|null} translateY\r\n    */\r\n   get translateY() { return this.#data.translateY; }\r\n\r\n   /**\r\n    * @returns {number|null} translateZ\r\n    */\r\n   get translateZ() { return this.#data.translateZ; }\r\n\r\n   /**\r\n    * @returns {number|'auto'|'inherit'|null} width\r\n    */\r\n   get width() { return this.#data.width; }\r\n\r\n   /**\r\n    * @returns {number|null} z-index\r\n    */\r\n   get zIndex() { return this.#data.zIndex; }\r\n\r\n   /**\r\n    * @param {number|string|null} height -\r\n    */\r\n   set height(height)\r\n   {\r\n      this.#stores.height.set(height);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} left -\r\n    */\r\n   set left(left)\r\n   {\r\n      this.#stores.left.set(left);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} maxHeight -\r\n    */\r\n   set maxHeight(maxHeight)\r\n   {\r\n      this.#stores.maxHeight.set(maxHeight);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} maxWidth -\r\n    */\r\n   set maxWidth(maxWidth)\r\n   {\r\n      this.#stores.maxWidth.set(maxWidth);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} minHeight -\r\n    */\r\n   set minHeight(minHeight)\r\n   {\r\n      this.#stores.minHeight.set(minHeight);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} minWidth -\r\n    */\r\n   set minWidth(minWidth)\r\n   {\r\n      this.#stores.minWidth.set(minWidth);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} rotateX -\r\n    */\r\n   set rotateX(rotateX)\r\n   {\r\n      this.#stores.rotateX.set(rotateX);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} rotateY -\r\n    */\r\n   set rotateY(rotateY)\r\n   {\r\n      this.#stores.rotateY.set(rotateY);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} rotateZ -\r\n    */\r\n   set rotateZ(rotateZ)\r\n   {\r\n      this.#stores.rotateZ.set(rotateZ);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} rotateZ - alias for rotateZ\r\n    */\r\n   set rotation(rotateZ)\r\n   {\r\n      this.#stores.rotateZ.set(rotateZ);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} scale -\r\n    */\r\n   set scale(scale)\r\n   {\r\n      this.#stores.scale.set(scale);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} top -\r\n    */\r\n   set top(top)\r\n   {\r\n      this.#stores.top.set(top);\r\n   }\r\n\r\n   /**\r\n    * @param {string} transformOrigin -\r\n    */\r\n   set transformOrigin(transformOrigin)\r\n   {\r\n      if (constants.transformOrigins.includes(transformOrigin)) { this.#stores.transformOrigin.set(transformOrigin); }\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} translateX -\r\n    */\r\n   set translateX(translateX)\r\n   {\r\n      this.#stores.translateX.set(translateX);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} translateY -\r\n    */\r\n   set translateY(translateY)\r\n   {\r\n      this.#stores.translateY.set(translateY);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} translateZ -\r\n    */\r\n   set translateZ(translateZ)\r\n   {\r\n      this.#stores.translateZ.set(translateZ);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} width -\r\n    */\r\n   set width(width)\r\n   {\r\n      this.#stores.width.set(width);\r\n   }\r\n\r\n   /**\r\n    * @param {number|string|null} zIndex -\r\n    */\r\n   set zIndex(zIndex)\r\n   {\r\n      this.#stores.zIndex.set(zIndex);\r\n   }\r\n\r\n   /**\r\n    * Assigns current position to object passed into method.\r\n    *\r\n    * @param {object|PositionData}  [position] - Target to assign current position data.\r\n    *\r\n    * @param {PositionGetOptions}   [options] - Defines options for specific keys and substituting null for numeric\r\n    *                                           default values.\r\n    *\r\n    * @returns {PositionData} Passed in object with current position data.\r\n    */\r\n   get(position = {}, options)\r\n   {\r\n      const keys = options?.keys;\r\n      const excludeKeys = options?.exclude;\r\n      const numeric = options?.numeric ?? false;\r\n\r\n      if (isIterable(keys))\r\n      {\r\n         // Replace any null values potentially with numeric default values.\r\n         if (numeric)\r\n         {\r\n            for (const key of keys) { position[key] = this[key] ?? constants.numericDefaults[key]; }\r\n         }\r\n         else // Accept current values.\r\n         {\r\n            for (const key of keys) { position[key] = this[key]; }\r\n         }\r\n\r\n         // Remove any excluded keys.\r\n         if (isIterable(excludeKeys))\r\n         {\r\n            for (const key of excludeKeys) { delete position[key]; }\r\n         }\r\n\r\n         return position;\r\n      }\r\n      else\r\n      {\r\n         const data = Object.assign(position, this.#data);\r\n\r\n         // Remove any excluded keys.\r\n         if (isIterable(excludeKeys))\r\n         {\r\n            for (const key of excludeKeys) { delete data[key]; }\r\n         }\r\n\r\n         // Potentially set numeric defaults.\r\n         if (numeric) { constants.setNumericDefaults(data); }\r\n\r\n         return data;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @returns {PositionData} Current position data.\r\n    */\r\n   toJSON()\r\n   {\r\n      return Object.assign({}, this.#data);\r\n   }\r\n\r\n   /**\r\n    * All calculation and updates of position are implemented in {@link Position}. This allows position to be fully\r\n    * reactive and in control of updating inline styles for the application.\r\n    *\r\n    * Note: the logic for updating position is improved and changes a few aspects from the default\r\n    * {@link Application.setPosition}. The gate on `popOut` is removed, so to ensure no positional application occurs\r\n    * popOut applications can set `this.options.positionable` to false ensuring no positional inline styles are\r\n    * applied.\r\n    *\r\n    * The initial set call on an application with a target element will always set width / height as this is\r\n    * necessary for correct calculations.\r\n    *\r\n    * When a target element is present updated styles are applied after validation. To modify the behavior of set\r\n    * implement one or more validator functions and add them from the application via\r\n    * `this.position.validators.add(<Function>)`.\r\n    *\r\n    * Updates to any target element are decoupled from the underlying Position data. This method returns this instance\r\n    * that you can then await on the target element inline style update by using {@link Position.elementUpdated}.\r\n    *\r\n    * @param {PositionDataExtended} [position] - Position data to set.\r\n    *\r\n    * @returns {Position} This Position instance.\r\n    */\r\n   set(position = {})\r\n   {\r\n      if (typeof position !== 'object') { throw new TypeError(`Position - set error: 'position' is not an object.`); }\r\n\r\n      const parent = this.#parent;\r\n\r\n      // An early out to prevent `set` from taking effect if options `positionable` is false.\r\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\r\n      {\r\n         return this;\r\n      }\r\n\r\n      // Callers can specify to immediately update an associated element. This is useful if set is called from\r\n      // requestAnimationFrame / rAF. Library integrations like GSAP invoke set from rAF.\r\n      const immediateElementUpdate = position.immediateElementUpdate === true;\r\n\r\n      const data = this.#data;\r\n      const transforms = this.#transforms;\r\n\r\n      // Find the target HTML element and verify that it is connected storing it in `el`.\r\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\r\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\r\n\r\n      const changeSet = this.#positionChangeSet;\r\n      const styleCache = this.#styleCache;\r\n\r\n      if (el)\r\n      {\r\n         // Cache the computed styles of the element.\r\n         if (!styleCache.hasData(el))\r\n         {\r\n            styleCache.update(el);\r\n\r\n            // Add will-change property if not already set in inline or computed styles.\r\n            if (!styleCache.hasWillChange)\r\n            {\r\n               el.style.willChange = this.#options.ortho ? 'transform' : 'top, left, transform';\r\n            }\r\n\r\n            // Update all properties / clear queued state.\r\n            changeSet.set(true);\r\n            this.#updateElementData.queued = false;\r\n         }\r\n\r\n         // Converts any relative string position data to numeric inputs.\r\n         convertRelative(position, this);\r\n\r\n         position = this.#updatePosition(position, parent, el, styleCache);\r\n\r\n         // Check if a validator cancelled the update.\r\n         if (position === null) { return this; }\r\n      }\r\n\r\n      if (Number.isFinite(position.left))\r\n      {\r\n         position.left = Math.round(position.left);\r\n\r\n         if (data.left !== position.left) { data.left = position.left; changeSet.left = true; }\r\n      }\r\n\r\n      if (Number.isFinite(position.top))\r\n      {\r\n         position.top = Math.round(position.top);\r\n\r\n         if (data.top !== position.top) { data.top = position.top; changeSet.top = true; }\r\n      }\r\n\r\n      if (Number.isFinite(position.maxHeight) || position.maxHeight === null)\r\n      {\r\n         position.maxHeight = typeof position.maxHeight === 'number' ? Math.round(position.maxHeight) : null;\r\n\r\n         if (data.maxHeight !== position.maxHeight) { data.maxHeight = position.maxHeight; changeSet.maxHeight = true; }\r\n      }\r\n\r\n      if (Number.isFinite(position.maxWidth) || position.maxWidth === null)\r\n      {\r\n         position.maxWidth = typeof position.maxWidth === 'number' ? Math.round(position.maxWidth) : null;\r\n\r\n         if (data.maxWidth !== position.maxWidth) { data.maxWidth = position.maxWidth; changeSet.maxWidth = true; }\r\n      }\r\n\r\n      if (Number.isFinite(position.minHeight) || position.minHeight === null)\r\n      {\r\n         position.minHeight = typeof position.minHeight === 'number' ? Math.round(position.minHeight) : null;\r\n\r\n         if (data.minHeight !== position.minHeight) { data.minHeight = position.minHeight; changeSet.minHeight = true; }\r\n      }\r\n\r\n      if (Number.isFinite(position.minWidth) || position.minWidth === null)\r\n      {\r\n         position.minWidth = typeof position.minWidth === 'number' ? Math.round(position.minWidth) : null;\r\n\r\n         if (data.minWidth !== position.minWidth) { data.minWidth = position.minWidth; changeSet.minWidth = true; }\r\n      }\r\n\r\n      if (Number.isFinite(position.rotateX) || position.rotateX === null)\r\n      {\r\n         if (data.rotateX !== position.rotateX)\r\n         {\r\n            data.rotateX = transforms.rotateX = position.rotateX;\r\n            changeSet.transform = true;\r\n         }\r\n      }\r\n\r\n      if (Number.isFinite(position.rotateY) || position.rotateY === null)\r\n      {\r\n         if (data.rotateY !== position.rotateY)\r\n         {\r\n            data.rotateY = transforms.rotateY = position.rotateY;\r\n            changeSet.transform = true;\r\n         }\r\n      }\r\n\r\n      if (Number.isFinite(position.rotateZ) || position.rotateZ === null)\r\n      {\r\n         if (data.rotateZ !== position.rotateZ)\r\n         {\r\n            data.rotateZ = transforms.rotateZ = position.rotateZ;\r\n            changeSet.transform = true;\r\n         }\r\n      }\r\n\r\n      if (Number.isFinite(position.scale) || position.scale === null)\r\n      {\r\n         position.scale = typeof position.scale === 'number' ? Math.max(0, Math.min(position.scale, 1000)) : null;\r\n\r\n         if (data.scale !== position.scale)\r\n         {\r\n            data.scale = transforms.scale = position.scale;\r\n            changeSet.transform = true;\r\n         }\r\n      }\r\n\r\n      if ((typeof position.transformOrigin === 'string' && constants.transformOrigins.includes(\r\n       position.transformOrigin)) || position.transformOrigin === null)\r\n      {\r\n         if (data.transformOrigin !== position.transformOrigin)\r\n         {\r\n            data.transformOrigin = position.transformOrigin;\r\n            changeSet.transformOrigin = true;\r\n         }\r\n      }\r\n\r\n      if (Number.isFinite(position.translateX) || position.translateX === null)\r\n      {\r\n         if (data.translateX !== position.translateX)\r\n         {\r\n            data.translateX = transforms.translateX = position.translateX;\r\n            changeSet.transform = true;\r\n         }\r\n      }\r\n\r\n      if (Number.isFinite(position.translateY) || position.translateY === null)\r\n      {\r\n         if (data.translateY !== position.translateY)\r\n         {\r\n            data.translateY = transforms.translateY = position.translateY;\r\n            changeSet.transform = true;\r\n         }\r\n      }\r\n\r\n      if (Number.isFinite(position.translateZ) || position.translateZ === null)\r\n      {\r\n         if (data.translateZ !== position.translateZ)\r\n         {\r\n            data.translateZ = transforms.translateZ = position.translateZ;\r\n            changeSet.transform = true;\r\n         }\r\n      }\r\n\r\n      if (Number.isFinite(position.zIndex))\r\n      {\r\n         position.zIndex = Math.round(position.zIndex);\r\n\r\n         if (data.zIndex !== position.zIndex) { data.zIndex = position.zIndex; changeSet.zIndex = true; }\r\n      }\r\n\r\n      if (Number.isFinite(position.width) || position.width === 'auto' || position.width === 'inherit' ||\r\n       position.width === null)\r\n      {\r\n         position.width = typeof position.width === 'number' ? Math.round(position.width) : position.width;\r\n\r\n         if (data.width !== position.width) { data.width = position.width; changeSet.width = true; }\r\n      }\r\n\r\n      if (Number.isFinite(position.height) || position.height === 'auto' || position.height === 'inherit' ||\r\n       position.height === null)\r\n      {\r\n         position.height = typeof position.height === 'number' ? Math.round(position.height) : position.height;\r\n\r\n         if (data.height !== position.height) { data.height = position.height; changeSet.height = true; }\r\n      }\r\n\r\n      if (el)\r\n      {\r\n         const defaultData = this.#state.getDefault();\r\n\r\n         // Set default data after first set operation that has a target element.\r\n         if (typeof defaultData !== 'object')\r\n         {\r\n            this.#state.save({ name: '#defaultData', ...Object.assign({}, data) });\r\n         }\r\n\r\n         // If `immediateElementUpdate` is true in position data passed to `set` then update the element immediately.\r\n         // This is for rAF based library integrations like GSAP.\r\n         if (immediateElementUpdate)\r\n         {\r\n            UpdateElementManager.immediate(el, this.#updateElementData);\r\n            this.#updateElementPromise = Promise.resolve(performance.now());\r\n         }\r\n         // Else if not queued then queue an update for the next rAF callback.\r\n         else if (!this.#updateElementData.queued)\r\n         {\r\n            this.#updateElementPromise = UpdateElementManager.add(el, this.#updateElementData);\r\n         }\r\n      }\r\n      else\r\n      {\r\n         // Notify main store subscribers.\r\n         UpdateElementManager.updateSubscribers(this.#updateElementData);\r\n      }\r\n\r\n      return this;\r\n   }\r\n\r\n   /**\r\n    *\r\n    * @param {function(PositionData): void} handler - Callback function that is invoked on update / changes. Receives\r\n    *                                                 a copy of the PositionData.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(Object.assign({}, this.#data));                     // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    * @param {PositionDataExtended} opts -\r\n    *\r\n    * @param {number|null} opts.left -\r\n    *\r\n    * @param {number|null} opts.top -\r\n    *\r\n    * @param {number|null} opts.maxHeight -\r\n    *\r\n    * @param {number|null} opts.maxWidth -\r\n    *\r\n    * @param {number|null} opts.minHeight -\r\n    *\r\n    * @param {number|null} opts.minWidth -\r\n    *\r\n    * @param {number|'auto'|null} opts.width -\r\n    *\r\n    * @param {number|'auto'|null} opts.height -\r\n    *\r\n    * @param {number|null} opts.rotateX -\r\n    *\r\n    * @param {number|null} opts.rotateY -\r\n    *\r\n    * @param {number|null} opts.rotateZ -\r\n    *\r\n    * @param {number|null} opts.scale -\r\n    *\r\n    * @param {string} opts.transformOrigin -\r\n    *\r\n    * @param {number|null} opts.translateX -\r\n    *\r\n    * @param {number|null} opts.translateY -\r\n    *\r\n    * @param {number|null} opts.translateZ -\r\n    *\r\n    * @param {number|null} opts.zIndex -\r\n    *\r\n    * @param {number|null} opts.rotation - alias for rotateZ\r\n    *\r\n    * @param {*} opts.rest -\r\n    *\r\n    * @param {object} parent -\r\n    *\r\n    * @param {HTMLElement} el -\r\n    *\r\n    * @param {StyleCache} styleCache -\r\n    *\r\n    * @returns {null|PositionData} Updated position data or null if validation fails.\r\n    */\r\n   #updatePosition({\r\n      // Directly supported parameters\r\n      left, top, maxWidth, maxHeight, minWidth, minHeight, width, height, rotateX, rotateY, rotateZ, scale,\r\n       transformOrigin, translateX, translateY, translateZ, zIndex,\r\n\r\n      // Aliased parameters\r\n      rotation,\r\n\r\n      ...rest\r\n   } = {}, parent, el, styleCache)\r\n   {\r\n      let currentPosition = s_DATA_UPDATE.copy(this.#data);\r\n\r\n      // Update width if an explicit value is passed, or if no width value is set on the element.\r\n      if (el.style.width === '' || width !== void 0)\r\n      {\r\n         if (width === 'auto' || (currentPosition.width === 'auto' && width !== null))\r\n         {\r\n            currentPosition.width = 'auto';\r\n            width = styleCache.offsetWidth;\r\n         }\r\n         else if (width === 'inherit' || (currentPosition.width === 'inherit' && width !== null))\r\n         {\r\n            currentPosition.width = 'inherit';\r\n            width = styleCache.offsetWidth;\r\n         }\r\n         else\r\n         {\r\n            const newWidth = Number.isFinite(width) ? width : currentPosition.width;\r\n            currentPosition.width = width = Number.isFinite(newWidth) ? Math.round(newWidth) : styleCache.offsetWidth;\r\n         }\r\n      }\r\n      else\r\n      {\r\n         width = Number.isFinite(currentPosition.width) ? currentPosition.width : styleCache.offsetWidth;\r\n      }\r\n\r\n      // Update height if an explicit value is passed, or if no height value is set on the element.\r\n      if (el.style.height === '' || height !== void 0)\r\n      {\r\n         if (height === 'auto' || (currentPosition.height === 'auto' && height !== null))\r\n         {\r\n            currentPosition.height = 'auto';\r\n            height = styleCache.offsetHeight;\r\n         }\r\n         else if (height === 'inherit' || (currentPosition.height === 'inherit' && height !== null))\r\n         {\r\n            currentPosition.height = 'inherit';\r\n            height = styleCache.offsetHeight;\r\n         }\r\n         else\r\n         {\r\n            const newHeight = Number.isFinite(height) ? height : currentPosition.height;\r\n            currentPosition.height = height = Number.isFinite(newHeight) ? Math.round(newHeight) :\r\n             styleCache.offsetHeight;\r\n         }\r\n      }\r\n      else\r\n      {\r\n         height = Number.isFinite(currentPosition.height) ? currentPosition.height : styleCache.offsetHeight;\r\n      }\r\n\r\n      // Update left\r\n      if (Number.isFinite(left))\r\n      {\r\n         currentPosition.left = left;\r\n      }\r\n      else if (!Number.isFinite(currentPosition.left))\r\n      {\r\n         // Potentially use any initial position helper if available or set to 0.\r\n         currentPosition.left = typeof this.#options.initialHelper?.getLeft === 'function' ?\r\n          this.#options.initialHelper.getLeft(width) : 0;\r\n      }\r\n\r\n      // Update top\r\n      if (Number.isFinite(top))\r\n      {\r\n         currentPosition.top = top;\r\n      }\r\n      else if (!Number.isFinite(currentPosition.top))\r\n      {\r\n         // Potentially use any initial position helper if available or set to 0.\r\n         currentPosition.top = typeof this.#options.initialHelper?.getTop === 'function' ?\r\n          this.#options.initialHelper.getTop(height) : 0;\r\n      }\r\n\r\n      if (Number.isFinite(maxHeight) || maxHeight === null)\r\n      {\r\n         currentPosition.maxHeight = Number.isFinite(maxHeight) ? Math.round(maxHeight) : null;\r\n      }\r\n\r\n      if (Number.isFinite(maxWidth) || maxWidth === null)\r\n      {\r\n         currentPosition.maxWidth = Number.isFinite(maxWidth) ? Math.round(maxWidth) : null;\r\n      }\r\n\r\n      if (Number.isFinite(minHeight) || minHeight === null)\r\n      {\r\n         currentPosition.minHeight = Number.isFinite(minHeight) ? Math.round(minHeight) : null;\r\n      }\r\n\r\n      if (Number.isFinite(minWidth) || minWidth === null)\r\n      {\r\n         currentPosition.minWidth = Number.isFinite(minWidth) ? Math.round(minWidth) : null;\r\n      }\r\n\r\n      // Update rotate X/Y/Z, scale, z-index\r\n      if (Number.isFinite(rotateX) || rotateX === null) { currentPosition.rotateX = rotateX; }\r\n      if (Number.isFinite(rotateY) || rotateY === null) { currentPosition.rotateY = rotateY; }\r\n\r\n      // Handle alias for rotateZ. First check if `rotateZ` is valid and different from the current value. Next check if\r\n      // `rotation` is valid and use it for `rotateZ`.\r\n      if (rotateZ !== currentPosition.rotateZ && (Number.isFinite(rotateZ) || rotateZ === null))\r\n      {\r\n         currentPosition.rotateZ = rotateZ;\r\n      }\r\n      else if (rotation !== currentPosition.rotateZ && (Number.isFinite(rotation) || rotation === null))\r\n      {\r\n         currentPosition.rotateZ = rotation;\r\n      }\r\n\r\n      if (Number.isFinite(translateX) || translateX === null) { currentPosition.translateX = translateX; }\r\n      if (Number.isFinite(translateY) || translateY === null) { currentPosition.translateY = translateY; }\r\n      if (Number.isFinite(translateZ) || translateZ === null) { currentPosition.translateZ = translateZ; }\r\n\r\n      if (Number.isFinite(scale) || scale === null)\r\n      {\r\n         currentPosition.scale = typeof scale === 'number' ? Math.max(0, Math.min(scale, 1000)) : null;\r\n      }\r\n\r\n      if (typeof transformOrigin === 'string' || transformOrigin === null)\r\n      {\r\n         currentPosition.transformOrigin = constants.transformOrigins.includes(transformOrigin) ? transformOrigin :\r\n          null;\r\n      }\r\n\r\n      if (Number.isFinite(zIndex) || zIndex === null)\r\n      {\r\n         currentPosition.zIndex = typeof zIndex === 'number' ? Math.round(zIndex) : zIndex;\r\n      }\r\n\r\n      const validatorData = this.#validatorData;\r\n\r\n      // If there are any validators allow them to potentially modify position data or reject the update.\r\n      if (validatorData.length)\r\n      {\r\n         s_VALIDATION_DATA.parent = parent;\r\n\r\n         s_VALIDATION_DATA.el = el;\r\n\r\n         s_VALIDATION_DATA.computed = styleCache.computed;\r\n\r\n         s_VALIDATION_DATA.transforms = this.#transforms;\r\n\r\n         s_VALIDATION_DATA.height = height;\r\n\r\n         s_VALIDATION_DATA.width = width;\r\n\r\n         s_VALIDATION_DATA.marginLeft = styleCache.marginLeft;\r\n\r\n         s_VALIDATION_DATA.marginTop = styleCache.marginTop;\r\n\r\n         s_VALIDATION_DATA.maxHeight = styleCache.maxHeight ?? currentPosition.maxHeight;\r\n\r\n         s_VALIDATION_DATA.maxWidth = styleCache.maxWidth ?? currentPosition.maxWidth;\r\n\r\n         // Given a parent w/ reactive state and is minimized ignore styleCache min-width/height.\r\n         const isMinimized = parent?.reactive?.minimized ?? false;\r\n\r\n         // Note the use of || for accessing the style cache as the left hand is ignored w/ falsy values such as '0'.\r\n         s_VALIDATION_DATA.minHeight = isMinimized ? currentPosition.minHeight ?? 0 :\r\n          styleCache.minHeight || (currentPosition.minHeight ?? 0);\r\n\r\n         s_VALIDATION_DATA.minWidth = isMinimized ? currentPosition.minWidth ?? 0 :\r\n          styleCache.minWidth || (currentPosition.minWidth ?? 0);\r\n\r\n         for (let cntr = 0; cntr < validatorData.length; cntr++)\r\n         {\r\n            s_VALIDATION_DATA.position = currentPosition;\r\n            s_VALIDATION_DATA.rest = rest;\r\n            currentPosition = validatorData[cntr].validator(s_VALIDATION_DATA);\r\n\r\n            if (currentPosition === null) { return null; }\r\n         }\r\n      }\r\n\r\n      // Return the updated position object.\r\n      return currentPosition;\r\n   }\r\n}\r\n\r\nconst s_DATA_UPDATE = new PositionData();\r\n\r\n/**\r\n * @type {ValidationData}\r\n */\r\nconst s_VALIDATION_DATA = {\r\n   position: void 0,\r\n   parent: void 0,\r\n   el: void 0,\r\n   computed: void 0,\r\n   transforms: void 0,\r\n   height: void 0,\r\n   width: void 0,\r\n   marginLeft: void 0,\r\n   marginTop: void 0,\r\n   maxHeight: void 0,\r\n   maxWidth: void 0,\r\n   minHeight: void 0,\r\n   minWidth: void 0,\r\n   rest: void 0\r\n};\r\n\r\nObject.seal(s_VALIDATION_DATA);\r\n\r\n/**\r\n * @typedef {object} InitialHelper\r\n *\r\n * @property {Function} getLeft - A function that takes the width parameter and returns the left position.\r\n *\r\n * @property {Function} getTop - A function that takes the height parameter and returns the top position.\r\n */\r\n\r\n/**\r\n * @typedef {object} PositionDataExtended\r\n *\r\n * @property {number|string|null} [height] -\r\n *\r\n * @property {number|string|null} [left] -\r\n *\r\n * @property {number|string|null} [maxHeight] -\r\n *\r\n * @property {number|string|null} [maxWidth] -\r\n *\r\n * @property {number|string|null} [minHeight] -\r\n *\r\n * @property {number|string|null} [minWidth] -\r\n *\r\n * @property {number|string|null} [rotateX] -\r\n *\r\n * @property {number|string|null} [rotateY] -\r\n *\r\n * @property {number|string|null} [rotateZ] -\r\n *\r\n * @property {number|string|null} [scale] -\r\n *\r\n * @property {number|string|null} [top] -\r\n *\r\n * @property {string|null} [transformOrigin] -\r\n *\r\n * @property {number|string|null} [translateX] -\r\n *\r\n * @property {number|string|null} [translateY] -\r\n *\r\n * @property {number|string|null} [translateZ] -\r\n *\r\n * @property {number|string|null} [width] -\r\n *\r\n * @property {number|string|null} [zIndex] -\r\n *\r\n * Extended properties -----------------------------------------------------------------------------------------------\r\n *\r\n * @property {boolean} [immediateElementUpdate] - When true any associated element is updated immediately.\r\n *\r\n * @property {number|null} [rotation] - Alias for `rotateZ`.\r\n */\r\n\r\n/**\r\n * @typedef {object} PositionGetOptions\r\n *\r\n * @property {Iterable<string>} keys - When provided only these keys are copied.\r\n *\r\n * @property {Iterable<string>} exclude - When provided these keys are excluded.\r\n *\r\n * @property {boolean} numeric - When true any `null` values are converted into defaults.\r\n */\r\n\r\n/**\r\n * @typedef {object} PositionOptions - Options set in constructor.\r\n *\r\n * @property {boolean} calculateTransform - When true always calculate transform data.\r\n *\r\n * @property {InitialHelper} initialHelper - Provides a helper for setting initial position data.\r\n *\r\n * @property {boolean} ortho - Sets Position to orthographic mode using just transform / matrix3d for positioning.\r\n *\r\n * @property {boolean} transformSubscribed - Set to true when there are subscribers to the readable transform store.\r\n */\r\n\r\n/**\r\n * @typedef {PositionOptions & PositionData} PositionOptionsAll\r\n */\r\n\r\n/**\r\n * @typedef {HTMLElement | object} PositionParent\r\n *\r\n * @property {Function} [elementTarget] - Potentially returns any parent object.\r\n */\r\n\r\n/**\r\n * @typedef {object} ResizeObserverData\r\n *\r\n * @property {number|undefined} contentHeight -\r\n *\r\n * @property {number|undefined} contentWidth -\r\n *\r\n * @property {number|undefined} offsetHeight -\r\n *\r\n * @property {number|undefined} offsetWidth -\r\n */\r\n\r\n/**\r\n * @typedef {object} StorePosition - Provides individual writable stores for {@link Position}.\r\n *\r\n * @property {import('svelte/store').Readable<{width: number, height: number}>} dimension - Readable store for dimension\r\n *                                                                                          data.\r\n *\r\n * @property {import('svelte/store').Readable<HTMLElement>} element - Readable store for current element.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} left - Derived store for `left` updates.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} top - Derived store for `top` updates.\r\n *\r\n * @property {import('svelte/store').Writable<number|'auto'|null>} width - Derived store for `width` updates.\r\n *\r\n * @property {import('svelte/store').Writable<number|'auto'|null>} height - Derived store for `height` updates.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} maxHeight - Derived store for `maxHeight` updates.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} maxWidth - Derived store for `maxWidth` updates.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} minHeight - Derived store for `minHeight` updates.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} minWidth - Derived store for `minWidth` updates.\r\n *\r\n * @property {import('svelte/store').Readable<number|undefined>} resizeContentHeight - Readable store for `contentHeight`.\r\n *\r\n * @property {import('svelte/store').Readable<number|undefined>} resizeContentWidth - Readable store for `contentWidth`.\r\n *\r\n * @property {import('svelte/store').Writable<ResizeObserverData>} resizeObserved - Protected store for resize observer updates.\r\n *\r\n * @property {import('svelte/store').Readable<number|undefined>} resizeOffsetHeight - Readable store for `offsetHeight`.\r\n *\r\n * @property {import('svelte/store').Readable<number|undefined>} resizeOffsetWidth - Readable store for `offsetWidth`.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} rotate - Derived store for `rotate` updates.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} rotateX - Derived store for `rotateX` updates.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} rotateY - Derived store for `rotateY` updates.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} rotateZ - Derived store for `rotateZ` updates.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} scale - Derived store for `scale` updates.\r\n *\r\n * @property {import('svelte/store').Readable<TransformData>} transform - Readable store for transform data.\r\n *\r\n * @property {import('svelte/store').Writable<string>} transformOrigin - Derived store for `transformOrigin`.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} translateX - Derived store for `translateX` updates.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} translateY - Derived store for `translateY` updates.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} translateZ - Derived store for `translateZ` updates.\r\n *\r\n * @property {import('svelte/store').Writable<number|null>} zIndex - Derived store for `zIndex` updates.\r\n */\r\n\r\n/**\r\n * @typedef {object} ValidationData\r\n *\r\n * @property {PositionData} position -\r\n *\r\n * @property {PositionParent} parent -\r\n *\r\n * @property {HTMLElement} el -\r\n *\r\n * @property {CSSStyleDeclaration} computed -\r\n *\r\n * @property {Transforms} transforms -\r\n *\r\n * @property {number} height -\r\n *\r\n * @property {number} width -\r\n *\r\n * @property {number|undefined} marginLeft -\r\n *\r\n * @property {number|undefined} marginTop -\r\n *\r\n * @property {number|undefined} maxHeight -\r\n *\r\n * @property {number|undefined} maxWidth -\r\n *\r\n * @property {number|undefined} minHeight -\r\n *\r\n * @property {number|undefined} minWidth -\r\n *\r\n * @property {object} rest - The rest of any data submitted to {@link Position.set}\r\n */\r\n","import { linear }    from \"svelte/easing\";\r\nimport { lerp }      from '@typhonjs-fvtt/runtime/svelte/math';\r\nimport { isObject }  from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\nexport class ApplicationState\r\n{\r\n   /** @type {ApplicationShellExt} */\r\n   #application;\r\n\r\n   /** @type {Map<string, ApplicationData>} */\r\n   #dataSaved = new Map();\r\n\r\n   /**\r\n    * @param {ApplicationShellExt}   application - The application.\r\n    */\r\n   constructor(application)\r\n   {\r\n      this.#application = application;\r\n   }\r\n\r\n   /**\r\n    * Returns current application state along with any extra data passed into method.\r\n    *\r\n    * @param {object} [extra] - Extra data to add to application state.\r\n    *\r\n    * @returns {ApplicationData} Passed in object with current application state.\r\n    */\r\n   get(extra = {})\r\n   {\r\n      return Object.assign(extra, {\r\n         position: this.#application?.position?.get(),\r\n         beforeMinimized: this.#application?.position?.state.get({ name: '#beforeMinimized' }),\r\n         options: Object.assign({}, this.#application?.options),\r\n         ui: { minimized: this.#application?.reactive?.minimized }\r\n      });\r\n   }\r\n\r\n   /**\r\n    * Returns any stored save state by name.\r\n    *\r\n    * @param {string}   name - Saved data set name.\r\n    *\r\n    * @returns {ApplicationData} The saved data set.\r\n    */\r\n   getSave({ name })\r\n   {\r\n      if (typeof name !== 'string')\r\n      {\r\n         throw new TypeError(`ApplicationState - getSave error: 'name' is not a string.`);\r\n      }\r\n\r\n      return this.#dataSaved.get(name);\r\n   }\r\n\r\n   /**\r\n    * Removes and returns any application state by name.\r\n    *\r\n    * @param {object}   options - Options.\r\n    *\r\n    * @param {string}   options.name - Name to remove and retrieve.\r\n    *\r\n    * @returns {ApplicationData} Saved application data.\r\n    */\r\n   remove({ name })\r\n   {\r\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - remove: 'name' is not a string.`); }\r\n\r\n      const data = this.#dataSaved.get(name);\r\n      this.#dataSaved.delete(name);\r\n\r\n      return data;\r\n   }\r\n\r\n   /**\r\n    * Restores a saved application state returning the data. Several optional parameters are available\r\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\r\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\r\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\r\n    * returned if awaiting the end of the animation.\r\n    *\r\n    * @param {object}            params - Parameters\r\n    *\r\n    * @param {string}            params.name - Saved data set name.\r\n    *\r\n    * @param {boolean}           [params.remove=false] - Remove data set.\r\n    *\r\n    * @param {boolean}           [params.async=false] - If animating return a Promise that resolves with any saved data.\r\n    *\r\n    * @param {boolean}           [params.animateTo=false] - Animate to restore data.\r\n    *\r\n    * @param {number}            [params.duration=0.1] - Duration in seconds.\r\n    *\r\n    * @param {Function}          [params.ease=linear] - Easing function.\r\n    *\r\n    * @param {Function}          [params.interpolate=lerp] - Interpolation function.\r\n    *\r\n    * @returns {ApplicationData|Promise<ApplicationData>} Saved application data.\r\n    */\r\n   restore({ name, remove = false, async = false, animateTo = false, duration = 0.1, ease = linear,\r\n    interpolate = lerp })\r\n   {\r\n      if (typeof name !== 'string')\r\n      {\r\n         throw new TypeError(`ApplicationState - restore error: 'name' is not a string.`);\r\n      }\r\n\r\n      const dataSaved = this.#dataSaved.get(name);\r\n\r\n      if (dataSaved)\r\n      {\r\n         if (remove) { this.#dataSaved.delete(name); }\r\n\r\n         if (async)\r\n         {\r\n            return this.set(dataSaved, { async, animateTo, duration, ease, interpolate }).then(() => dataSaved);\r\n         }\r\n         else\r\n         {\r\n            this.set(dataSaved, { async, animateTo, duration, ease, interpolate });\r\n         }\r\n      }\r\n\r\n      return dataSaved;\r\n   }\r\n\r\n   /**\r\n    * Saves current application state with the opportunity to add extra data to the saved state.\r\n    *\r\n    * @param {object}   options - Options.\r\n    *\r\n    * @param {string}   options.name - name to index this saved data.\r\n    *\r\n    * @param {...*}     [options.extra] - Extra data to add to saved data.\r\n    *\r\n    * @returns {ApplicationData} Current application data\r\n    */\r\n   save({ name, ...extra })\r\n   {\r\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - save error: 'name' is not a string.`); }\r\n\r\n      const data = this.get(extra);\r\n\r\n      this.#dataSaved.set(name, data);\r\n\r\n      return data;\r\n   }\r\n\r\n   /**\r\n    * Restores a saved application state returning the data. Several optional parameters are available\r\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\r\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\r\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\r\n    * returned if awaiting the end of the animation.\r\n    *\r\n    * Note: If serializing application state any minimized apps will use the before minimized state on initial render\r\n    * of the app as it is currently not possible to render apps with Foundry VTT core API in the minimized state.\r\n    *\r\n    * TODO: THIS METHOD NEEDS TO BE REFACTORED WHEN TRL IS MADE INTO A STANDALONE FRAMEWORK.\r\n    *\r\n    * @param {ApplicationData}   data - Saved data set name.\r\n    *\r\n    * @param {object}            [opts] - Optional parameters\r\n    *\r\n    * @param {boolean}           [opts.async=false] - If animating return a Promise that resolves with any saved data.\r\n    *\r\n    * @param {boolean}           [opts.animateTo=false] - Animate to restore data.\r\n    *\r\n    * @param {number}            [opts.duration=0.1] - Duration in seconds.\r\n    *\r\n    * @param {Function}          [opts.ease=linear] - Easing function.\r\n    *\r\n    * @param {Function}          [opts.interpolate=lerp] - Interpolation function.\r\n    *\r\n    * @returns {ApplicationShellExt|Promise<ApplicationShellExt>} When synchronous the application or Promise when\r\n    *                                                             animating resolving with application.\r\n    */\r\n   set(data, { async = false, animateTo = false, duration = 0.1, ease = linear, interpolate = lerp } = {})\r\n   {\r\n      if (!isObject(data))\r\n      {\r\n         throw new TypeError(`ApplicationState - restore error: 'data' is not an object.`);\r\n      }\r\n\r\n      const application = this.#application;\r\n\r\n      if (!isObject(data?.position))\r\n      {\r\n         console.warn(`ApplicationState.set warning: 'data.position' is not an object.`);\r\n         return application;\r\n      }\r\n\r\n      // TODO: TAKE NOTE THAT WE ARE ACCESSING A FOUNDRY APP v1 GETTER HERE TO DETERMINE IF APPLICATION IS RENDERED.\r\n      // TODO: THIS NEEDS TO BE REFACTORED WHEN CONVERTING TRL TO A GENERIC FRAMEWORK.\r\n      const rendered = application.rendered;\r\n\r\n      if (animateTo && !rendered)\r\n      {\r\n         console.warn(`ApplicationState.set warning: Application is not rendered and 'animateTo' is true.`);\r\n         return application;\r\n      }\r\n\r\n      // Update data directly with no store or inline style updates.\r\n      if (animateTo)  // Animate to saved data.\r\n      {\r\n         // Provide special handling to potentially change transform origin as this parameter is not animated.\r\n         if (data.position.transformOrigin !== application.position.transformOrigin)\r\n         {\r\n            application.position.transformOrigin = data.position.transformOrigin;\r\n         }\r\n\r\n         if (isObject(data?.ui))\r\n         {\r\n            const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\r\n\r\n            if (application?.reactive?.minimized && !minimized)\r\n            {\r\n               application.maximize({ animate: false, duration: 0 });\r\n            }\r\n         }\r\n\r\n         const promise = application.position.animate.to(data.position,\r\n          { duration, ease, interpolate }).finished.then((cancelled) =>\r\n         {\r\n            if (cancelled) { return application; }\r\n\r\n            // Merge in saved options to application.\r\n            if (isObject(data?.options))\r\n            {\r\n               application?.reactive.mergeOptions(data.options);\r\n            }\r\n\r\n            if (isObject(data?.ui))\r\n            {\r\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\r\n\r\n               // Application is currently minimized and stored state is not, so reset minimized state without\r\n               // animation.\r\n               if (!application?.reactive?.minimized && minimized)\r\n               {\r\n                  application.minimize({ animate: false, duration: 0 });\r\n               }\r\n            }\r\n\r\n            if (isObject(data?.beforeMinimized))\r\n            {\r\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\r\n            }\r\n\r\n            return application;\r\n         });\r\n\r\n         // Return a Promise with the application that resolves after animation ends.\r\n         if (async) { return promise; }\r\n      }\r\n      else\r\n      {\r\n         if (rendered)\r\n         {\r\n            // Merge in saved options to application.\r\n            if (isObject(data?.options))\r\n            {\r\n               application?.reactive.mergeOptions(data.options);\r\n            }\r\n\r\n            if (isObject(data?.ui))\r\n            {\r\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\r\n\r\n               // Application is currently minimized and stored state is not, so reset minimized state without\r\n               // animation.\r\n               if (application?.reactive?.minimized && !minimized)\r\n               {\r\n                  application.maximize({ animate: false, duration: 0 });\r\n               }\r\n               else if (!application?.reactive?.minimized && minimized)\r\n               {\r\n                  application.minimize({ animate: false, duration });\r\n               }\r\n            }\r\n\r\n            if (isObject(data?.beforeMinimized))\r\n            {\r\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\r\n            }\r\n\r\n            // Default options is to set data for an immediate update.\r\n            application.position.set(data.position);\r\n         }\r\n         else\r\n         {\r\n            // When not rendered set position to the 'beforeMinimized' data if it exists otherwise set w/ 'position'.\r\n            // Currently w/ Foundry core Application API it is impossible to initially render an app in the minimized\r\n            // state.\r\n\r\n            let positionData = data.position;\r\n\r\n            if (isObject(data.beforeMinimized))\r\n            {\r\n               // Take before minimized data.\r\n               positionData = data.beforeMinimized;\r\n\r\n               // Apply position left / top to before minimized data. This covers the case when an app is minimized,\r\n               // but then moved. This allows restoration of the before minimized parameters w/ the last position\r\n               // location.\r\n               positionData.left = data.position.left;\r\n               positionData.top = data.position.top;\r\n            }\r\n\r\n            application.position.set(positionData);\r\n         }\r\n      }\r\n\r\n      return application;\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} ApplicationData\r\n *\r\n * @property {PositionDataExtended}   position - Application position.\r\n *\r\n * @property {object}         beforeMinimized - Any application saved position state for #beforeMinimized\r\n *\r\n * @property {object}         options - Application options.\r\n *\r\n * @property {object}         ui - Application UI state.\r\n */\r\n","/**\r\n * Provides a helper class for {@link SvelteApplication} by combining all methods that work on the {@link SvelteData[]}\r\n * of mounted components. This class is instantiated and can be retrieved by the getter `svelte` via SvelteApplication.\r\n */\r\nexport class GetSvelteData\r\n{\r\n   /**\r\n    * @type {MountedAppShell[]|null[]}\r\n    */\r\n   #applicationShellHolder;\r\n\r\n   /**\r\n    * @type {SvelteData[]}\r\n    */\r\n   #svelteData;\r\n\r\n   /**\r\n    * Keep a direct reference to the SvelteData array in an associated {@link SvelteApplication}.\r\n    *\r\n    * @param {MountedAppShell[]|null[]}  applicationShellHolder - A reference to the MountedAppShell array.\r\n    *\r\n    * @param {SvelteData[]}  svelteData - A reference to the SvelteData array of mounted components.\r\n    */\r\n   constructor(applicationShellHolder, svelteData)\r\n   {\r\n      this.#applicationShellHolder = applicationShellHolder;\r\n      this.#svelteData = svelteData;\r\n   }\r\n\r\n   /**\r\n    * Returns any mounted {@link MountedAppShell}.\r\n    *\r\n    * @returns {MountedAppShell|null} Any mounted application shell.\r\n    */\r\n   get applicationShell() { return this.#applicationShellHolder[0]; }\r\n\r\n   /**\r\n    * Returns the indexed Svelte component.\r\n    *\r\n    * @param {number}   index -\r\n    *\r\n    * @returns {object} The loaded Svelte component.\r\n    */\r\n   component(index)\r\n   {\r\n      const data = this.#svelteData[index];\r\n      return typeof data === 'object' ? data?.component : void 0;\r\n   }\r\n\r\n   /**\r\n    * Returns the Svelte component entries iterator.\r\n    *\r\n    * @returns {Generator<Array<number|SvelteComponent>>} Svelte component entries iterator.\r\n    * @yields\r\n    */\r\n   *componentEntries()\r\n   {\r\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\r\n      {\r\n         yield [cntr, this.#svelteData[cntr].component];\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns the Svelte component values iterator.\r\n    *\r\n    * @returns {Generator<SvelteComponent>} Svelte component values iterator.\r\n    * @yields\r\n    */\r\n   *componentValues()\r\n   {\r\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\r\n      {\r\n         yield this.#svelteData[cntr].component;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns the indexed SvelteData entry.\r\n    *\r\n    * @param {number}   index -\r\n    *\r\n    * @returns {SvelteData} The loaded Svelte config + component.\r\n    */\r\n   data(index)\r\n   {\r\n      return this.#svelteData[index];\r\n   }\r\n\r\n   /**\r\n    * Returns the {@link SvelteData} instance for a given component.\r\n    *\r\n    * @param {object} component - Svelte component.\r\n    *\r\n    * @returns {SvelteData} -  The loaded Svelte config + component.\r\n    */\r\n   dataByComponent(component)\r\n   {\r\n      for (const data of this.#svelteData)\r\n      {\r\n         if (data.component === component) { return data; }\r\n      }\r\n\r\n      return void 0;\r\n   }\r\n\r\n   /**\r\n    * Returns the SvelteData entries iterator.\r\n    *\r\n    * @returns {IterableIterator<[number, SvelteData]>} SvelteData entries iterator.\r\n    */\r\n   dataEntries()\r\n   {\r\n      return this.#svelteData.entries();\r\n   }\r\n\r\n   /**\r\n    * Returns the SvelteData values iterator.\r\n    *\r\n    * @returns {IterableIterator<SvelteData>} SvelteData values iterator.\r\n    */\r\n   dataValues()\r\n   {\r\n      return this.#svelteData.values();\r\n   }\r\n\r\n   /**\r\n    * Returns the length of the mounted Svelte component list.\r\n    *\r\n    * @returns {number} Length of mounted Svelte component list.\r\n    */\r\n   get length()\r\n   {\r\n      return this.#svelteData.length;\r\n   }\r\n}\r\n","import {\r\n   isApplicationShell,\r\n   parseSvelteConfig }  from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\n/**\r\n * Instantiates and attaches a Svelte component to the main inserted HTML.\r\n *\r\n * @param {object}            opts - Optional parameters.\r\n *\r\n * @param {object}            opts.app - The target application\r\n *\r\n * @param {HTMLElement}       opts.template - Any HTML template.\r\n *\r\n * @param {object}            opts.config - Svelte component options\r\n *\r\n * @param {Function}          opts.elementRootUpdate - A callback to assign to the external context.\r\n *\r\n * @returns {SvelteData} The config + instantiated Svelte component.\r\n */\r\nexport function loadSvelteConfig({ app, template, config, elementRootUpdate } = {})\r\n{\r\n   const svelteOptions = typeof config.options === 'object' ? config.options : {};\r\n\r\n   let target;\r\n\r\n   // A specific HTMLElement to append Svelte component.\r\n   if (config.target instanceof HTMLElement)\r\n   {\r\n      target = config.target;\r\n   }\r\n   // A string target defines a selector to find in existing HTML.\r\n   else if (template instanceof HTMLElement && typeof config.target === 'string')\r\n   {\r\n      target = template.querySelector(config.target);\r\n   }\r\n   else                                            // No target defined, create a document fragment.\r\n   {\r\n      target = document.createDocumentFragment();\r\n   }\r\n\r\n   if (target === void 0)\r\n   {\r\n      console.log(\r\n       `%c[TRL] loadSvelteConfig error - could not find target selector, '${config.target}', for config:\\n`,\r\n       'background: rgb(57,34,34)', config);\r\n\r\n      throw new Error();\r\n   }\r\n\r\n   const NewSvelteComponent = config.class;\r\n\r\n   const svelteConfig = parseSvelteConfig({ ...config, target }, app);\r\n\r\n   const externalContext = svelteConfig.context.get('external');\r\n\r\n   // Inject the Foundry application instance and `elementRootUpdate` to the external context.\r\n   externalContext.application = app;\r\n   externalContext.elementRootUpdate = elementRootUpdate;\r\n\r\n   let eventbus;\r\n\r\n   // Potentially inject any TyphonJS eventbus and track the proxy in the SvelteData instance.\r\n   if (typeof app._eventbus === 'object' && typeof app._eventbus.createProxy === 'function')\r\n   {\r\n      eventbus = app._eventbus.createProxy();\r\n      externalContext.eventbus = eventbus;\r\n   }\r\n\r\n   // Create the Svelte component.\r\n   /**\r\n    * @type {import('svelte').SvelteComponent}\r\n    */\r\n   const component = new NewSvelteComponent(svelteConfig);\r\n\r\n   // Set any eventbus to the config.\r\n   svelteConfig.eventbus = eventbus;\r\n\r\n   /**\r\n    * @type {HTMLElement}\r\n    */\r\n   let element;\r\n\r\n   // We can directly get the root element from components which follow the application store contract.\r\n   if (isApplicationShell(component))\r\n   {\r\n      element = component.elementRoot;\r\n   }\r\n\r\n   // Detect if target is a synthesized DocumentFragment with a child element. Child elements will be present\r\n   // if the Svelte component mounts and renders initial content into the document fragment.\r\n   if (target instanceof DocumentFragment && target.firstElementChild)\r\n   {\r\n      if (element === void 0) { element = target.firstElementChild; }\r\n      template.append(target);\r\n   }\r\n   else if (config.target instanceof HTMLElement && element === void 0)\r\n   {\r\n      if (config.target instanceof HTMLElement && typeof svelteOptions.selectorElement !== 'string')\r\n      {\r\n         console.log(\r\n          `%c[TRL] loadSvelteConfig error - HTMLElement target with no 'selectorElement' defined.\\n` +\r\n          `\\nNote: If configuring an application shell and directly targeting a HTMLElement did you bind an` +\r\n          `'elementRoot' and include '<svelte:options accessors={true}/>'?\\n` +\r\n          `\\nOffending config:\\n`, 'background: rgb(57,34,34)', config);\r\n\r\n         throw new Error();\r\n      }\r\n\r\n      // The target is an HTMLElement so find the Application element from `selectorElement` option.\r\n      element = target.querySelector(svelteOptions.selectorElement);\r\n\r\n      if (element === null || element === void 0)\r\n      {\r\n         console.log(\r\n          `%c[TRL] loadSvelteConfig error - HTMLElement target with 'selectorElement', '${\r\n           svelteOptions.selectorElement}', not found for config:\\n`,\r\n          'background: rgb(57,34,34)', config);\r\n\r\n         throw new Error();\r\n      }\r\n   }\r\n\r\n   // If the configuration / original target is an HTML element then do not inject HTML.\r\n   const injectHTML = !(config.target instanceof HTMLElement);\r\n\r\n   return { config: svelteConfig, component, element, injectHTML };\r\n}\r\n","import { derived, writable }  from \"svelte/store\";\r\n\r\nimport {\r\n   propertyStore,\r\n   subscribeIgnoreFirst }     from '@typhonjs-fvtt/runtime/svelte/store';\r\n\r\nimport {\r\n   deepMerge,\r\n   safeAccess,\r\n   safeSet }                  from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\n/**\r\n * Contains the reactive functionality / Svelte stores associated with SvelteApplication.\r\n */\r\nexport class SvelteReactive\r\n{\r\n   /**\r\n    * @type {SvelteApplication}\r\n    */\r\n   #application;\r\n\r\n   /**\r\n    * @type {boolean}\r\n    */\r\n   #initialized = false;\r\n\r\n   /**\r\n    * The Application option store which is injected into mounted Svelte component context under the `external` key.\r\n    *\r\n    * @type {StoreAppOptions}\r\n    */\r\n   #storeAppOptions;\r\n\r\n   /**\r\n    * Stores the update function for `#storeAppOptions`.\r\n    *\r\n    * @type {import('svelte/store').Writable.update}\r\n    */\r\n   #storeAppOptionsUpdate;\r\n\r\n   /**\r\n    * Stores the UI state data to make it accessible via getters.\r\n    *\r\n    * @type {object}\r\n    */\r\n   #dataUIState;\r\n\r\n   /**\r\n    * The UI option store which is injected into mounted Svelte component context under the `external` key.\r\n    *\r\n    * @type {StoreUIOptions}\r\n    */\r\n   #storeUIState;\r\n\r\n   /**\r\n    * Stores the update function for `#storeUIState`.\r\n    *\r\n    * @type {import('svelte/store').Writable.update}\r\n    */\r\n   #storeUIStateUpdate;\r\n\r\n   /**\r\n    * Stores the unsubscribe functions from local store subscriptions.\r\n    *\r\n    * @type {import('svelte/store').Unsubscriber[]}\r\n    */\r\n   #storeUnsubscribe = [];\r\n\r\n   /**\r\n    * @param {SvelteApplication} application - The host Foundry application.\r\n    */\r\n   constructor(application)\r\n   {\r\n      this.#application = application;\r\n   }\r\n\r\n   /**\r\n    * Initializes reactive support. Package private for internal use.\r\n    *\r\n    * @returns {SvelteStores} Internal methods to interact with Svelte stores.\r\n    * @package\r\n    */\r\n   initialize()\r\n   {\r\n      if (this.#initialized) { return; }\r\n\r\n      this.#initialized = true;\r\n\r\n      this.#storesInitialize();\r\n\r\n      return {\r\n         appOptionsUpdate: this.#storeAppOptionsUpdate,\r\n         uiOptionsUpdate: this.#storeUIStateUpdate,\r\n         subscribe: this.#storesSubscribe.bind(this),\r\n         unsubscribe: this.#storesUnsubscribe.bind(this)\r\n      };\r\n   }\r\n\r\n// Only reactive getters ---------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * Returns the current dragging UI state.\r\n    *\r\n    * @returns {boolean} Dragging UI state.\r\n    */\r\n   get dragging() { return this.#dataUIState.dragging; }\r\n\r\n   /**\r\n    * Returns the current minimized UI state.\r\n    *\r\n    * @returns {boolean} Minimized UI state.\r\n    */\r\n   get minimized() { return this.#dataUIState.minimized; }\r\n\r\n   /**\r\n    * Returns the current resizing UI state.\r\n    *\r\n    * @returns {boolean} Resizing UI state.\r\n    */\r\n   get resizing() { return this.#dataUIState.resizing; }\r\n\r\n// Reactive getter / setters -----------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * Returns the draggable app option.\r\n    *\r\n    * @returns {boolean} Draggable app option.\r\n    */\r\n   get draggable() { return this.#application?.options?.draggable; }\r\n\r\n   /**\r\n    * Returns the headerButtonNoClose app option.\r\n    *\r\n    * @returns {boolean} Remove the close the button in header app option.\r\n    */\r\n   get headerButtonNoClose() { return this.#application?.options?.headerButtonNoClose; }\r\n\r\n   /**\r\n    * Returns the headerButtonNoLabel app option.\r\n    *\r\n    * @returns {boolean} Remove the labels from buttons in header app option.\r\n    */\r\n   get headerButtonNoLabel() { return this.#application?.options?.headerButtonNoLabel; }\r\n\r\n   /**\r\n    * Returns the headerNoTitleMinimized app option.\r\n    *\r\n    * @returns {boolean} When true removes the header title when minimized.\r\n    */\r\n   get headerNoTitleMinimized() { return this.#application?.options?.headerNoTitleMinimized; }\r\n\r\n   /**\r\n    * Returns the minimizable app option.\r\n    *\r\n    * @returns {boolean} Minimizable app option.\r\n    */\r\n   get minimizable() { return this.#application?.options?.minimizable; }\r\n\r\n   /**\r\n    * @inheritDoc\r\n    */\r\n   get popOut() { return this.#application.popOut; }\r\n\r\n   /**\r\n    * Returns the resizable option.\r\n    *\r\n    * @returns {boolean} Resizable app option.\r\n    */\r\n   get resizable() { return this.#application?.options?.resizable; }\r\n\r\n   /**\r\n    * Returns the store for app options.\r\n    *\r\n    * @returns {StoreAppOptions} App options store.\r\n    */\r\n   get storeAppOptions() { return this.#storeAppOptions; }\r\n\r\n   /**\r\n    * Returns the store for UI options.\r\n    *\r\n    * @returns {StoreUIOptions} UI options store.\r\n    */\r\n   get storeUIState() { return this.#storeUIState; }\r\n\r\n   /**\r\n    * Returns the title accessor from the parent Application class.\r\n    * TODO: Application v2; note that super.title localizes `this.options.title`; IMHO it shouldn't.\r\n    *\r\n    * @returns {string} Title.\r\n    */\r\n   get title() { return this.#application.title; }\r\n\r\n   /**\r\n    * Sets `this.options.draggable` which is reactive for application shells.\r\n    *\r\n    * @param {boolean}  draggable - Sets the draggable option.\r\n    */\r\n   set draggable(draggable)\r\n   {\r\n      if (typeof draggable === 'boolean') { this.setOptions('draggable', draggable); }\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.headerButtonNoClose` which is reactive for application shells.\r\n    *\r\n    * @param {boolean}  headerButtonNoClose - Sets the headerButtonNoClose option.\r\n    */\r\n   set headerButtonNoClose(headerButtonNoClose)\r\n   {\r\n      if (typeof headerButtonNoClose === 'boolean') { this.setOptions('headerButtonNoClose', headerButtonNoClose); }\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.headerButtonNoLabel` which is reactive for application shells.\r\n    *\r\n    * @param {boolean}  headerButtonNoLabel - Sets the headerButtonNoLabel option.\r\n    */\r\n   set headerButtonNoLabel(headerButtonNoLabel)\r\n   {\r\n      if (typeof headerButtonNoLabel === 'boolean') { this.setOptions('headerButtonNoLabel', headerButtonNoLabel); }\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.headerNoTitleMinimized` which is reactive for application shells.\r\n    *\r\n    * @param {boolean}  headerNoTitleMinimized - Sets the headerNoTitleMinimized option.\r\n    */\r\n   set headerNoTitleMinimized(headerNoTitleMinimized)\r\n   {\r\n      if (typeof headerNoTitleMinimized === 'boolean')\r\n      {\r\n         this.setOptions('headerNoTitleMinimized', headerNoTitleMinimized);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.minimizable` which is reactive for application shells that are also pop out.\r\n    *\r\n    * @param {boolean}  minimizable - Sets the minimizable option.\r\n    */\r\n   set minimizable(minimizable)\r\n   {\r\n      if (typeof minimizable === 'boolean') { this.setOptions('minimizable', minimizable); }\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.popOut` which is reactive for application shells. This will add / remove this application\r\n    * from `ui.windows`.\r\n    *\r\n    * @param {boolean}  popOut - Sets the popOut option.\r\n    */\r\n   set popOut(popOut)\r\n   {\r\n      if (typeof popOut === 'boolean') { this.setOptions('popOut', popOut); }\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.resizable` which is reactive for application shells.\r\n    *\r\n    * @param {boolean}  resizable - Sets the resizable option.\r\n    */\r\n   set resizable(resizable)\r\n   {\r\n      if (typeof resizable === 'boolean') { this.setOptions('resizable', resizable); }\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.title` which is reactive for application shells.\r\n    *\r\n    * Note: Will set empty string if title is undefined or null.\r\n    *\r\n    * @param {string|undefined|null}   title - Application title; will be localized, so a translation key is fine.\r\n    */\r\n   set title(title)\r\n   {\r\n      if (typeof title === 'string')\r\n      {\r\n         this.setOptions('title', title);\r\n      }\r\n      else if (title === void 0 || title === null)\r\n      {\r\n         this.setOptions('title', '');\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Provides a way to safely get this applications options given an accessor string which describes the\r\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\r\n    * to walk.\r\n    *\r\n    * // TODO DOCUMENT the accessor in more detail.\r\n    *\r\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\r\n    *\r\n    * @returns {*} Value at the accessor.\r\n    */\r\n   getOptions(accessor, defaultValue)\r\n   {\r\n      return safeAccess(this.#application.options, accessor, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Provides a way to merge `options` into this applications options and update the appOptions store.\r\n    *\r\n    * @param {object}   options - The options object to merge with `this.options`.\r\n    */\r\n   mergeOptions(options)\r\n   {\r\n      this.#storeAppOptionsUpdate((instanceOptions) => deepMerge(instanceOptions, options));\r\n   }\r\n\r\n   /**\r\n    * Provides a way to safely set this applications options given an accessor string which describes the\r\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\r\n    * to walk.\r\n    *\r\n    * Additionally if an application shell Svelte component is mounted and exports the `appOptions` property then\r\n    * the application options is set to `appOptions` potentially updating the application shell / Svelte component.\r\n    *\r\n    * // TODO DOCUMENT the accessor in more detail.\r\n    *\r\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\r\n    *\r\n    * @param {*}        value - Value to set.\r\n    */\r\n   setOptions(accessor, value)\r\n   {\r\n      const success = safeSet(this.#application.options, accessor, value);\r\n\r\n      // If `this.options` modified then update the app options store.\r\n      if (success)\r\n      {\r\n         this.#storeAppOptionsUpdate(() => this.#application.options);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Initializes the Svelte stores and derived stores for the application options and UI state.\r\n    *\r\n    * While writable stores are created the update method is stored in private variables locally and derived Readable\r\n    * stores are provided for essential options which are commonly used.\r\n    *\r\n    * These stores are injected into all Svelte components mounted under the `external` context: `storeAppOptions` and\r\n    * ` storeUIState`.\r\n    */\r\n   #storesInitialize()\r\n   {\r\n      const writableAppOptions = writable(this.#application.options);\r\n\r\n      // Keep the update function locally, but make the store essentially readable.\r\n      this.#storeAppOptionsUpdate = writableAppOptions.update;\r\n\r\n      /**\r\n       * Create custom store. The main subscribe method for all app options changes is provided along with derived\r\n       * writable stores for all reactive options.\r\n       *\r\n       * @type {StoreAppOptions}\r\n       */\r\n      const storeAppOptions = {\r\n         subscribe: writableAppOptions.subscribe,\r\n\r\n         draggable: propertyStore(writableAppOptions, 'draggable'),\r\n         headerButtonNoClose: propertyStore(writableAppOptions, 'headerButtonNoClose'),\r\n         headerButtonNoLabel: propertyStore(writableAppOptions, 'headerButtonNoLabel'),\r\n         headerNoTitleMinimized: propertyStore(writableAppOptions, 'headerNoTitleMinimized'),\r\n         minimizable: propertyStore(writableAppOptions, 'minimizable'),\r\n         popOut: propertyStore(writableAppOptions, 'popOut'),\r\n         resizable: propertyStore(writableAppOptions, 'resizable'),\r\n         title: propertyStore(writableAppOptions, 'title')\r\n      };\r\n\r\n      Object.freeze(storeAppOptions);\r\n\r\n      this.#storeAppOptions = storeAppOptions;\r\n\r\n      this.#dataUIState = {\r\n         dragging: false,\r\n         headerButtons: [],\r\n         minimized: this.#application._minimized,\r\n         resizing: false\r\n      };\r\n\r\n      // Create a store for UI state data.\r\n      const writableUIOptions = writable(this.#dataUIState);\r\n\r\n      // Keep the update function locally, but make the store essentially readable.\r\n      this.#storeUIStateUpdate = writableUIOptions.update;\r\n\r\n      /**\r\n       * @type {StoreUIOptions}\r\n       */\r\n      const storeUIState = {\r\n         subscribe: writableUIOptions.subscribe,\r\n\r\n         dragging: propertyStore(writableUIOptions, 'dragging'),\r\n         headerButtons: derived(writableUIOptions, ($options, set) => set($options.headerButtons)),\r\n         minimized: derived(writableUIOptions, ($options, set) => set($options.minimized)),\r\n         resizing: propertyStore(writableUIOptions, 'resizing')\r\n      };\r\n\r\n      Object.freeze(storeUIState);\r\n\r\n      // Initialize the store with options set in the Application constructor.\r\n      this.#storeUIState = storeUIState;\r\n   }\r\n\r\n   /**\r\n    * Registers local store subscriptions for app options. `popOut` controls registering this app with `ui.windows`.\r\n    * `zIndex` controls the z-index style of the element root.\r\n    *\r\n    * @see SvelteApplication._injectHTML\r\n    */\r\n   #storesSubscribe()\r\n   {\r\n      // Register local subscriptions.\r\n\r\n      // Handles updating header buttons to add / remove the close button.\r\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoClose, (value) =>\r\n      {\r\n         this.updateHeaderButtons({ headerButtonNoClose: value });\r\n      }));\r\n\r\n      // Handles updating header buttons to add / remove button labels.\r\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoLabel, (value) =>\r\n      {\r\n         this.updateHeaderButtons({ headerButtonNoLabel: value });\r\n      }));\r\n\r\n      // Handles adding / removing this application from `ui.windows` when popOut changes.\r\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.popOut, (value) =>\r\n      {\r\n         if (value && this.#application.rendered)\r\n         {\r\n            ui.windows[this.#application.appId] = this.#application;\r\n         }\r\n         else\r\n         {\r\n            delete ui.windows[this.#application.appId];\r\n         }\r\n      }));\r\n   }\r\n\r\n   /**\r\n    * Unsubscribes from any locally monitored stores.\r\n    *\r\n    * @see SvelteApplication.close\r\n    */\r\n   #storesUnsubscribe()\r\n   {\r\n      this.#storeUnsubscribe.forEach((unsubscribe) => unsubscribe());\r\n      this.#storeUnsubscribe = [];\r\n   }\r\n\r\n   /**\r\n    * Updates the UI Options store with the current header buttons. You may dynamically add / remove header buttons\r\n    * if using an application shell Svelte component. In either overriding `_getHeaderButtons` or responding to the\r\n    * Hooks fired return a new button array and the uiOptions store is updated and the application shell will render\r\n    * the new buttons.\r\n    *\r\n    * Optionally you can set in the Foundry app options `headerButtonNoClose` to remove the close button and\r\n    * `headerButtonNoLabel` to true and labels will be removed from the header buttons.\r\n    *\r\n    * @param {object} opts - Optional parameters (for internal use)\r\n    *\r\n    * @param {boolean} opts.headerButtonNoClose - The value for `headerButtonNoClose`.\r\n    *\r\n    * @param {boolean} opts.headerButtonNoLabel - The value for `headerButtonNoLabel`.\r\n    */\r\n   updateHeaderButtons({ headerButtonNoClose = this.#application.options.headerButtonNoClose,\r\n    headerButtonNoLabel = this.#application.options.headerButtonNoLabel } = {})\r\n   {\r\n      let buttons = this.#application._getHeaderButtons();\r\n\r\n      // Remove close button if this.options.headerButtonNoClose is true;\r\n      if (typeof headerButtonNoClose === 'boolean' && headerButtonNoClose)\r\n      {\r\n         buttons = buttons.filter((button) => button.class !== 'close');\r\n      }\r\n\r\n      // Remove labels if this.options.headerButtonNoLabel is true;\r\n      if (typeof headerButtonNoLabel === 'boolean' && headerButtonNoLabel)\r\n      {\r\n         for (const button of buttons) { button.label = void 0; }\r\n      }\r\n\r\n      this.#storeUIStateUpdate((options) =>\r\n      {\r\n         options.headerButtons = buttons;\r\n         return options;\r\n      });\r\n   }\r\n}\r\n","// import { Position }           from '@typhonjs-fvtt/runtime/svelte/store';\r\nimport { Position }           from './position/Position.js';\r\n\r\nimport {\r\n   deepMerge,\r\n   hasGetter,\r\n   isApplicationShell,\r\n   isHMRProxy,\r\n   outroAndDestroy }          from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\nimport {\r\n   ApplicationState,\r\n   GetSvelteData,\r\n   loadSvelteConfig,\r\n   SvelteReactive }           from './internal/index.js';\r\n\r\n/**\r\n * Provides a Svelte aware extension to Application to control the app lifecycle appropriately. You can declaratively\r\n * load one or more components from `defaultOptions`.\r\n */\r\nexport class SvelteApplication extends Application\r\n{\r\n   /**\r\n    * Stores the first mounted component which follows the application shell contract.\r\n    *\r\n    * @type {MountedAppShell[]|null[]} Application shell.\r\n    */\r\n   #applicationShellHolder = [null];\r\n\r\n   /**\r\n    * Stores and manages application state for saving / restoring / serializing.\r\n    *\r\n    * @type {ApplicationState}\r\n    */\r\n   #applicationState;\r\n\r\n   /**\r\n    * Stores the target element which may not necessarily be the main element.\r\n    *\r\n    * @type {HTMLElement}\r\n    */\r\n   #elementTarget = null;\r\n\r\n   /**\r\n    * Stores the content element which is set for application shells.\r\n    *\r\n    * @type {HTMLElement}\r\n    */\r\n   #elementContent = null;\r\n\r\n   /**\r\n    * Stores initial z-index from `_renderOuter` to set to target element / Svelte component.\r\n    *\r\n    * @type {number}\r\n    */\r\n   #initialZIndex = 95;\r\n\r\n   /**\r\n    * Stores on mount state which is checked in _render to trigger onSvelteMount callback.\r\n    *\r\n    * @type {boolean}\r\n    */\r\n   #onMount = false;\r\n\r\n   /**\r\n    * The position store.\r\n    *\r\n    * @type {Position}\r\n    */\r\n   #position;\r\n\r\n   /**\r\n    * Contains the Svelte stores and reactive accessors.\r\n    *\r\n    * @type {SvelteReactive}\r\n    */\r\n   #reactive;\r\n\r\n   /**\r\n    * Stores SvelteData entries with instantiated Svelte components.\r\n    *\r\n    * @type {SvelteData[]}\r\n    */\r\n   #svelteData = [];\r\n\r\n   /**\r\n    * Provides a helper class that combines multiple methods for interacting with the mounted components tracked in\r\n    * {@link SvelteData}.\r\n    *\r\n    * @type {GetSvelteData}\r\n    */\r\n   #getSvelteData = new GetSvelteData(this.#applicationShellHolder, this.#svelteData);\r\n\r\n   /**\r\n    * Contains methods to interact with the Svelte stores.\r\n    *\r\n    * @type {SvelteStores}\r\n    */\r\n   #stores;\r\n\r\n   /**\r\n    * @inheritDoc\r\n    */\r\n   constructor(options = {})\r\n   {\r\n      super(options);\r\n\r\n      this.#applicationState = new ApplicationState(this);\r\n\r\n      // Initialize Position with the position object set by Application.\r\n      this.#position = new Position(this, {\r\n         ...this.position,\r\n         ...this.options,\r\n         initial: this.options.positionInitial,\r\n         ortho: this.options.positionOrtho,\r\n         validator: this.options.positionValidator\r\n      });\r\n\r\n      // Remove old position field.\r\n      delete this.position;\r\n\r\n      /**\r\n       * Define accessors to retrieve Position by `this.position`.\r\n       *\r\n       * @member {Position} position - Adds accessors to SvelteApplication to get / set the position data.\r\n       *\r\n       * @memberof SvelteApplication#\r\n       */\r\n      Object.defineProperty(this, 'position', {\r\n         get: () => this.#position,\r\n         set: (position) => { if (typeof position === 'object') { this.#position.set(position); } }\r\n      });\r\n\r\n      this.#reactive = new SvelteReactive(this);\r\n\r\n      this.#stores = this.#reactive.initialize();\r\n   }\r\n\r\n   /**\r\n    * Specifies the default options that SvelteApplication supports.\r\n    *\r\n    * @returns {object} options - Application options.\r\n    * @see https://foundryvtt.com/api/Application.html#options\r\n    */\r\n   static get defaultOptions()\r\n   {\r\n      return deepMerge(super.defaultOptions, {\r\n         defaultCloseAnimation: true,     // If false the default slide close animation is not run.\r\n         draggable: true,                 // If true then application shells are draggable.\r\n         headerButtonNoClose: false,      // If true then the close header button is removed.\r\n         headerButtonNoLabel: false,      // If true then header button labels are removed for application shells.\r\n         headerNoTitleMinimized: false,   // If true then header title is hidden when application is minimized.\r\n         minHeight: MIN_WINDOW_HEIGHT,    // Assigned to position. Number specifying minimum window height.\r\n         minWidth: MIN_WINDOW_WIDTH,      // Assigned to position. Number specifying minimum window width.\r\n         positionable: true,              // If false then `position.set` does not take effect.\r\n         positionInitial: Position.Initial.browserCentered,      // A helper for initial position placement.\r\n         positionOrtho: true,             // When true Position is optimized for orthographic use.\r\n         positionValidator: Position.Validators.transformWindow, // A function providing the default validator.\r\n         transformOrigin: 'top left'      // By default, 'top / left' respects rotation when minimizing.\r\n      });\r\n   }\r\n\r\n   /**\r\n    * Returns the content element if an application shell is mounted.\r\n    *\r\n    * @returns {HTMLElement} Content element.\r\n    */\r\n   get elementContent() { return this.#elementContent; }\r\n\r\n   /**\r\n    * Returns the target element or main element if no target defined.\r\n    *\r\n    * @returns {HTMLElement} Target element.\r\n    */\r\n   get elementTarget() { return this.#elementTarget; }\r\n\r\n   /**\r\n    * Returns the reactive accessors & Svelte stores for SvelteApplication.\r\n    *\r\n    * @returns {SvelteReactive} The reactive accessors & Svelte stores.\r\n    */\r\n   get reactive() { return this.#reactive; }\r\n\r\n   /**\r\n    * Returns the application state manager.\r\n    *\r\n    * @returns {ApplicationState} The application state manager.\r\n    */\r\n   get state() { return this.#applicationState; }\r\n\r\n   /**\r\n    * Returns the Svelte helper class w/ various methods to access mounted Svelte components.\r\n    *\r\n    * @returns {GetSvelteData} GetSvelteData\r\n    */\r\n   get svelte() { return this.#getSvelteData; }\r\n\r\n   /**\r\n    * In this case of when a template is defined in app options `html` references the inner HTML / template. However,\r\n    * to activate classic v1 tabs for a Svelte component the element target is passed as an array simulating JQuery as\r\n    * the element is retrieved immediately and the core listeners use standard DOM queries.\r\n    *\r\n    * @inheritDoc\r\n    * @protected\r\n    * @ignore\r\n    */\r\n   _activateCoreListeners(html)\r\n   {\r\n      super._activateCoreListeners(typeof this.options.template === 'string' ? html : [this.#elementTarget]);\r\n   }\r\n\r\n   /**\r\n    * Provide an override to set this application as the active window regardless of z-index. Changes behaviour from\r\n    * Foundry core. This is important / used for instance in dialog key handling for left / right button selection.\r\n    *\r\n    * @param {object} [opts] - Optional parameters.\r\n    *\r\n    * @param {boolean} [opts.force=false] - Force bring to top; will increment z-index by popOut order.\r\n    *\r\n    */\r\n   bringToTop({ force = false } = {})\r\n   {\r\n      if (force || this.popOut) { super.bringToTop(); }\r\n\r\n      // If the activeElement is not `document.body` and not contained in this app via elementTarget then blur the\r\n      // current active element and make `document.body`focused. This allows <esc> key to close all open apps / windows.\r\n      if (document.activeElement !== document.body && !this.elementTarget.contains(document.activeElement))\r\n      {\r\n         // Blur current active element.\r\n         if (document.activeElement instanceof HTMLElement) { document.activeElement.blur(); }\r\n\r\n         // Make document body focused.\r\n         document.body.focus();\r\n      }\r\n\r\n      ui.activeWindow = this;\r\n   }\r\n\r\n   /**\r\n    * Note: This method is fully overridden and duplicated as Svelte components need to be destroyed manually and the\r\n    * best visual result is to destroy them after the default slide up animation occurs, but before the element\r\n    * is removed from the DOM.\r\n    *\r\n    * If you destroy the Svelte components before the slide up animation the Svelte elements are removed immediately\r\n    * from the DOM. The purpose of overriding ensures the slide up animation is always completed before\r\n    * the Svelte components are destroyed and then the element is removed from the DOM.\r\n    *\r\n    * Close the application and un-register references to it within UI mappings.\r\n    * This function returns a Promise which resolves once the window closing animation concludes\r\n    *\r\n    * @param {object}   [options] - Optional parameters.\r\n    *\r\n    * @param {boolean}  [options.force] - Force close regardless of render state.\r\n    *\r\n    * @returns {Promise<void>}    A Promise which resolves once the application is closed.\r\n    * @ignore\r\n    */\r\n   async close(options = {})\r\n   {\r\n      const states = Application.RENDER_STATES;\r\n      if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) { return; }\r\n\r\n      // Unsubscribe from any local stores.\r\n      this.#stores.unsubscribe();\r\n\r\n      /**\r\n       * @ignore\r\n       */\r\n      this._state = states.CLOSING;\r\n\r\n      /**\r\n       * Get the element.\r\n       *\r\n       * @type {HTMLElement}\r\n       */\r\n      const el = this.#elementTarget;\r\n      if (!el) { return this._state = states.CLOSED; }\r\n\r\n      // Make any window content overflow hidden to avoid any scrollbars appearing in default or Svelte outro\r\n      // transitions.\r\n      const content = el.querySelector('.window-content');\r\n      if (content)\r\n      {\r\n         content.style.overflow = 'hidden';\r\n\r\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\r\n         // they are likely one level deep.\r\n         for (let cntr = content.children.length; --cntr >= 0;)\r\n         {\r\n            content.children[cntr].style.overflow = 'hidden';\r\n         }\r\n      }\r\n\r\n      // Dispatch Hooks for closing the base and subclass applications\r\n      for (const cls of this.constructor._getInheritanceChain())\r\n      {\r\n         /**\r\n          * A hook event that fires whenever this Application is closed.\r\n          *\r\n          * @param {Application} app                     The Application instance being closed\r\n          *\r\n          * @param {jQuery[]} html                       The application HTML when it is closed\r\n          *\r\n          * @function closeApplication\r\n          *\r\n          * @memberof hookEvents\r\n          */\r\n         Hooks.call(`close${cls.name}`, this, el);\r\n      }\r\n\r\n      // If options `defaultCloseAnimation` is false then do not execute the standard slide up animation.\r\n      // This allows Svelte components to provide any out transition. Application shells will automatically set\r\n      // `defaultCloseAnimation` based on any out transition set or unset.\r\n      const animate = typeof this.options.defaultCloseAnimation === 'boolean' ? this.options.defaultCloseAnimation :\r\n       true;\r\n\r\n      if (animate)\r\n      {\r\n         // Set min height for full slide.\r\n         el.style.minHeight = '0';\r\n\r\n         const { paddingBottom, paddingTop } = globalThis.getComputedStyle(el);\r\n\r\n         // Slide-up application.\r\n         await el.animate([\r\n            { maxHeight: `${el.clientHeight}px`, paddingTop, paddingBottom },\r\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\r\n         ], { duration: 250, easing: 'ease-in', fill: 'forwards' }).finished;\r\n      }\r\n\r\n      // Stores the Promises returned from running outro transitions and destroying each Svelte component.\r\n      const svelteDestroyPromises = [];\r\n\r\n      // Manually invoke the destroy callbacks for all Svelte components.\r\n      for (const entry of this.#svelteData)\r\n      {\r\n         // Use `outroAndDestroy` to run outro transitions before destroying.\r\n         svelteDestroyPromises.push(outroAndDestroy(entry.component));\r\n\r\n         // If any proxy eventbus has been added then remove all event registrations from the component.\r\n         const eventbus = entry.config.eventbus;\r\n         if (typeof eventbus === 'object' && typeof eventbus.off === 'function')\r\n         {\r\n            eventbus.off();\r\n            entry.config.eventbus = void 0;\r\n         }\r\n      }\r\n\r\n      // Await all Svelte components to destroy.\r\n      await Promise.all(svelteDestroyPromises);\r\n\r\n      // Reset SvelteData like this to maintain reference to GetSvelteData / `this.svelte`.\r\n      this.#svelteData.length = 0;\r\n\r\n      // Remove element from the DOM. Most SvelteComponents have already removed it.\r\n      el.remove();\r\n\r\n      // Silently restore any width / height state before minimized as applicable.\r\n      this.position.state.restore({\r\n         name: '#beforeMinimized',\r\n         properties: ['width', 'height'],\r\n         silent: true,\r\n         remove: true\r\n      });\r\n\r\n      // Clean up data\r\n      this.#applicationShellHolder[0] = null;\r\n      /**\r\n       * @ignore\r\n       */\r\n      this._element = null;\r\n      this.#elementContent = null;\r\n      this.#elementTarget = null;\r\n      delete ui.windows[this.appId];\r\n      /**\r\n       * @ignore\r\n       */\r\n      this._minimized = false;\r\n      /**\r\n       * @ignore\r\n       */\r\n      this._scrollPositions = null;\r\n      this._state = states.CLOSED;\r\n\r\n      this.#onMount = false;\r\n\r\n      // Update the minimized UI store options.\r\n      this.#stores.uiOptionsUpdate((storeOptions) => deepMerge(storeOptions, { minimized: this._minimized }));\r\n   }\r\n\r\n   /**\r\n    * Inject the Svelte components defined in `this.options.svelte`. The Svelte component can attach to the existing\r\n    * pop-out of Application or provide no template and render into a document fragment which is then attached to the\r\n    * DOM.\r\n    *\r\n    * @param {JQuery} html -\r\n    *\r\n    * @inheritDoc\r\n    * @ignore\r\n    */\r\n   _injectHTML(html)\r\n   {\r\n      if (this.popOut && html.length === 0 && Array.isArray(this.options.svelte))\r\n      {\r\n         throw new Error(\r\n          'SvelteApplication - _injectHTML - A popout app with no template can only support one Svelte component.');\r\n      }\r\n\r\n      // Make sure the store is updated with the latest header buttons. Also allows filtering buttons before display.\r\n      this.reactive.updateHeaderButtons();\r\n\r\n      // Create a function to generate a callback for Svelte components to invoke to update the tracked elements for\r\n      // application shells in the rare cases that the main element root changes. The update is only trigged on\r\n      // successive changes of `elementRoot`. Returns a boolean to indicate the element roots are updated.\r\n      const elementRootUpdate = () =>\r\n      {\r\n         let cntr = 0;\r\n\r\n         return (elementRoot) =>\r\n         {\r\n            if (elementRoot !== null && elementRoot !== void 0 && cntr++ > 0)\r\n            {\r\n               this.#updateApplicationShell();\r\n               return true;\r\n            }\r\n\r\n            return false;\r\n         };\r\n      };\r\n\r\n      if (Array.isArray(this.options.svelte))\r\n      {\r\n         for (const svelteConfig of this.options.svelte)\r\n         {\r\n            const svelteData = loadSvelteConfig({\r\n               app: this,\r\n               template: html[0],\r\n               config: svelteConfig,\r\n               elementRootUpdate\r\n            });\r\n\r\n            if (isApplicationShell(svelteData.component))\r\n            {\r\n               if (this.svelte.applicationShell !== null)\r\n               {\r\n                  throw new Error(\r\n                   `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\r\n                    ${JSON.stringify(svelteConfig)}`);\r\n               }\r\n\r\n               this.#applicationShellHolder[0] = svelteData.component;\r\n\r\n               // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\r\n               // refreshes. Update the element root accordingly and force and update to Position by resetting `parent`.\r\n               // See this issue for info about `on_hmr`:\r\n               // https://github.com/sveltejs/svelte-hmr/issues/57\r\n               if (isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\r\n               {\r\n                  svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\r\n               }\r\n            }\r\n\r\n            this.#svelteData.push(svelteData);\r\n         }\r\n      }\r\n      else if (typeof this.options.svelte === 'object')\r\n      {\r\n         const svelteData = loadSvelteConfig({\r\n            app: this,\r\n            template: html[0],\r\n            config: this.options.svelte,\r\n            elementRootUpdate\r\n         });\r\n\r\n         if (isApplicationShell(svelteData.component))\r\n         {\r\n            // A sanity check as shouldn't hit this case as only one component is being mounted.\r\n            if (this.svelte.applicationShell !== null)\r\n            {\r\n               throw new Error(\r\n                `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\r\n                 ${JSON.stringify(this.options.svelte)}`);\r\n            }\r\n\r\n            this.#applicationShellHolder[0] = svelteData.component;\r\n\r\n            // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\r\n            // refreshes. Update the element root accordingly and force and update to Position by resetting `parent`.\r\n            // See this issue for info about `on_hmr`:\r\n            // https://github.com/sveltejs/svelte-hmr/issues/57\r\n            if (isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\r\n            {\r\n               svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\r\n            }\r\n         }\r\n\r\n         this.#svelteData.push(svelteData);\r\n      }\r\n\r\n      // Detect if this is a synthesized DocumentFragment.\r\n      const isDocumentFragment = html.length && html[0] instanceof DocumentFragment;\r\n\r\n      // If any of the Svelte components mounted directly targets an HTMLElement then do not inject HTML.\r\n      let injectHTML = true;\r\n      for (const svelteData of this.#svelteData)\r\n      {\r\n         if (!svelteData.injectHTML) { injectHTML = false; break; }\r\n      }\r\n      if (injectHTML) { super._injectHTML(html); }\r\n\r\n      if (this.svelte.applicationShell !== null)\r\n      {\r\n         this._element = $(this.svelte.applicationShell.elementRoot);\r\n\r\n         // Detect if the application shell exports an `elementContent` accessor.\r\n         this.#elementContent = hasGetter(this.svelte.applicationShell, 'elementContent') ?\r\n          this.svelte.applicationShell.elementContent : null;\r\n\r\n         // Detect if the application shell exports an `elementTarget` accessor.\r\n         this.#elementTarget = hasGetter(this.svelte.applicationShell, 'elementTarget') ?\r\n          this.svelte.applicationShell.elementTarget : null;\r\n      }\r\n      else if (isDocumentFragment) // Set the element of the app to the first child element in order of Svelte components mounted.\r\n      {\r\n         for (const svelteData of this.#svelteData)\r\n         {\r\n            if (svelteData.element instanceof HTMLElement)\r\n            {\r\n               this._element = $(svelteData.element);\r\n               break;\r\n            }\r\n         }\r\n      }\r\n\r\n      // Potentially retrieve a specific target element if `selectorTarget` is defined otherwise make the target the\r\n      // main element.\r\n      if (this.#elementTarget === null)\r\n      {\r\n         const element = typeof this.options.selectorTarget === 'string' ?\r\n          this._element.find(this.options.selectorTarget) : this._element;\r\n\r\n         this.#elementTarget = element[0];\r\n      }\r\n\r\n      // TODO VERIFY THIS CHECK ESPECIALLY `this.#elementTarget.length === 0`.\r\n      if (this.#elementTarget === null || this.#elementTarget === void 0 || this.#elementTarget.length === 0)\r\n      {\r\n         throw new Error(`SvelteApplication - _injectHTML: Target element '${this.options.selectorTarget}' not found.`);\r\n      }\r\n\r\n      // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\r\n      // in `this.#initialZIndex`.\r\n      if (typeof this.options.positionable === 'boolean' && this.options.positionable)\r\n      {\r\n         this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\r\n          this.#initialZIndex ?? 95;\r\n      }\r\n\r\n      // Subscribe to local store handling.\r\n      this.#stores.subscribe();\r\n   }\r\n\r\n   /**\r\n    * Provides a mechanism to update the UI options store for maximized.\r\n    *\r\n    * Note: the sanity check is duplicated from {@link Application.maximize} the store is updated _before_\r\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\r\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\r\n    * to animate the content area.\r\n    *\r\n    * @param {object}   [opts] - Optional parameters.\r\n    *\r\n    * @param {boolean}  [opts.animate=true] - When true perform default maximizing animation.\r\n    *\r\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\r\n    */\r\n   async maximize({ animate = true, duration = 0.1 } = {})\r\n   {\r\n      if (!this.popOut || [false, null].includes(this._minimized)) { return; }\r\n\r\n      this._minimized = null;\r\n\r\n      const durationMS = duration * 1000; // For WAAPI.\r\n\r\n      // Get content\r\n      const element = this.elementTarget;\r\n      const header = element.querySelector('.window-header');\r\n      const content = element.querySelector('.window-content');\r\n\r\n      // Get the complete position before minimized. Used to reset min width & height to initial values later.\r\n      const positionBefore = this.position.state.get({ name: '#beforeMinimized' });\r\n\r\n      // First animate / restore width / async.\r\n      if (animate)\r\n      {\r\n         await this.position.state.restore({\r\n            name: '#beforeMinimized',\r\n            async: true,\r\n            animateTo: true,\r\n            properties: ['width'],\r\n            duration: 0.1\r\n         });\r\n      }\r\n\r\n      // Reset display none on all children of header.\r\n      for (let cntr = header.children.length; --cntr >= 0;) { header.children[cntr].style.display = null; }\r\n\r\n      content.style.display = null;\r\n\r\n      let constraints;\r\n\r\n      if (animate)\r\n      {\r\n         // Next animate / restore height synchronously and remove key. Retrieve constraints data for slide up animation\r\n         // below.\r\n         ({ constraints } = this.position.state.restore({\r\n            name: '#beforeMinimized',\r\n            animateTo: true,\r\n            properties: ['height'],\r\n            remove: true,\r\n            duration\r\n         }));\r\n      }\r\n      else\r\n      {\r\n         ({ constraints } = this.position.state.remove({ name: '#beforeMinimized' }));\r\n      }\r\n\r\n      // Slide down content with stored constraints.\r\n      await content.animate([\r\n         { maxHeight: 0, paddingTop: 0, paddingBottom: 0, offset: 0 },\r\n         { ...constraints, offset: 1 },\r\n         { maxHeight: '100%', offset: 1 },\r\n      ], { duration: durationMS, fill: 'forwards' }).finished; // WAAPI in ms.\r\n\r\n      // Restore previous min width & height from saved data, app options, or default Foundry values.\r\n      this.position.set({\r\n         minHeight: positionBefore.minHeight ?? this.options?.minHeight ?? MIN_WINDOW_HEIGHT,\r\n         minWidth: positionBefore.minWidth ?? this.options?.minWidth ?? MIN_WINDOW_WIDTH,\r\n      });\r\n\r\n      // Remove inline styles that override any styles assigned to the app.\r\n      element.style.minWidth = null;\r\n      element.style.minHeight = null;\r\n\r\n      element.classList.remove('minimized');\r\n\r\n      this._minimized = false;\r\n\r\n      // Using a 50ms timeout prevents any instantaneous display of scrollbars with the above maximize animation.\r\n      setTimeout(() =>\r\n      {\r\n         content.style.overflow = null;\r\n\r\n         // Reset all children of content removing overflow hidden.\r\n         for (let cntr = content.children.length; --cntr >= 0;)\r\n         {\r\n            content.children[cntr].style.overflow = null;\r\n         }\r\n      }, 50);\r\n\r\n      this.#stores.uiOptionsUpdate((options) => deepMerge(options, { minimized: false }));\r\n   }\r\n\r\n   /**\r\n    * Provides a mechanism to update the UI options store for minimized.\r\n    *\r\n    * Note: the sanity check is duplicated from {@link Application.minimize} the store is updated _before_\r\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\r\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\r\n    * to animate the content area.\r\n    *\r\n    * @param {object}   [opts] - Optional parameters\r\n    *\r\n    * @param {boolean}  [opts.animate=true] - When true perform default minimizing animation.\r\n    *\r\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\r\n    */\r\n   async minimize({ animate = true, duration = 0.1 } = {})\r\n   {\r\n      if (!this.rendered || !this.popOut || [true, null].includes(this._minimized)) { return; }\r\n\r\n      this.#stores.uiOptionsUpdate((options) => deepMerge(options, { minimized: true }));\r\n\r\n      this._minimized = null;\r\n\r\n      const durationMS = duration * 1000; // For WAAPI.\r\n\r\n      const element = this.elementTarget;\r\n\r\n      // Get content\r\n      const header = element.querySelector('.window-header');\r\n      const content = element.querySelector('.window-content');\r\n\r\n      // Save current max / min height & width.\r\n      const beforeMinWidth = this.position.minWidth;\r\n      const beforeMinHeight = this.position.minHeight;\r\n\r\n      // Set minimized min width & height for header bar.\r\n      this.position.set({ minWidth: 100, minHeight: 30 });\r\n\r\n      // Also set inline styles to override any styles scoped to the app.\r\n      element.style.minWidth = '100px';\r\n      element.style.minHeight = '30px';\r\n\r\n      if (content)\r\n      {\r\n         content.style.overflow = 'hidden';\r\n\r\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\r\n         // they are likely one level deep.\r\n         for (let cntr = content.children.length; --cntr >= 0;)\r\n         {\r\n            content.children[cntr].style.overflow = 'hidden';\r\n         }\r\n      }\r\n\r\n      const { paddingBottom, paddingTop } = globalThis.getComputedStyle(content);\r\n\r\n      // Extra data that is saved with the current position. Used during `maximize`.\r\n      const constraints = {\r\n         maxHeight: `${content.clientHeight}px`,\r\n         paddingTop,\r\n         paddingBottom\r\n      };\r\n\r\n      // Slide-up content\r\n      if (animate)\r\n      {\r\n         const animation = content.animate([\r\n            constraints,\r\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\r\n         ], { duration: durationMS, fill: 'forwards' }); // WAAPI in ms.\r\n\r\n         // Set display style to none when animation finishes.\r\n         animation.finished.then(() => content.style.display = 'none');\r\n      }\r\n      else\r\n      {\r\n         setTimeout(() => content.style.display = 'none', durationMS);\r\n      }\r\n\r\n      // Save current position state and add the constraint data to use in `maximize`.\r\n      const saved = this.position.state.save({ name: '#beforeMinimized', constraints });\r\n\r\n      // Set the initial before min width & height.\r\n      saved.minWidth = beforeMinWidth;\r\n      saved.minHeight = beforeMinHeight;\r\n\r\n      const headerOffsetHeight = header.offsetHeight;\r\n\r\n      // minHeight needs to be adjusted to header height.\r\n      this.position.minHeight = headerOffsetHeight;\r\n\r\n      if (animate)\r\n      {\r\n         // First await animation of height upward.\r\n         await this.position.animate.to({ height: headerOffsetHeight }, { duration }).finished;\r\n      }\r\n\r\n      // Set all header buttons besides close and the window title to display none.\r\n      for (let cntr = header.children.length; --cntr >= 0;)\r\n      {\r\n         const className = header.children[cntr].className;\r\n\r\n         if (className.includes('window-title') || className.includes('close') ||\r\n          className.includes('keep-minimized'))\r\n         {\r\n            continue;\r\n         }\r\n\r\n         header.children[cntr].style.display = 'none';\r\n      }\r\n\r\n      if (animate)\r\n      {\r\n         // Await animation of width to the left / minimum width.\r\n         await this.position.animate.to({ width: MIN_WINDOW_WIDTH }, { duration: 0.1 }).finished;\r\n      }\r\n\r\n      element.classList.add('minimized');\r\n\r\n      this._minimized = true;\r\n   }\r\n\r\n   /**\r\n    * Provides a callback after all Svelte components are initialized.\r\n    *\r\n    * @param {object}      [opts] - Optional parameters.\r\n    *\r\n    * @param {HTMLElement} [opts.element] - HTMLElement container for main application element.\r\n    *\r\n    * @param {HTMLElement} [opts.elementContent] - HTMLElement container for content area of application shells.\r\n    *\r\n    * @param {HTMLElement} [opts.elementTarget] - HTMLElement container for main application target element.\r\n    */\r\n   onSvelteMount({ element, elementContent, elementTarget } = {}) {} // eslint-disable-line no-unused-vars\r\n\r\n   /**\r\n    * Provides a callback after the main application shell is remounted. This may occur during HMR / hot module\r\n    * replacement or directly invoked from the `elementRootUpdate` callback passed to the application shell component\r\n    * context.\r\n    *\r\n    * @param {object}      [opts] - Optional parameters.\r\n    *\r\n    * @param {HTMLElement} [opts.element] - HTMLElement container for main application element.\r\n    *\r\n    * @param {HTMLElement} [opts.elementContent] - HTMLElement container for content area of application shells.\r\n    *\r\n    * @param {HTMLElement} [opts.elementTarget] - HTMLElement container for main application target element.\r\n    */\r\n   onSvelteRemount({ element, elementContent, elementTarget } = {}) {} // eslint-disable-line no-unused-vars\r\n\r\n   /**\r\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\r\n    * application frame / title for pop-out applications.\r\n    *\r\n    * @inheritDoc\r\n    * @ignore\r\n    */\r\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\r\n   {\r\n      if (!element.length) { return; }\r\n\r\n      this.reactive.updateHeaderButtons();\r\n   }\r\n\r\n   /**\r\n    * Provides an override verifying that a new Application being rendered for the first time doesn't have a\r\n    * corresponding DOM element already loaded. This is a check that only occurs when `this._state` is\r\n    * `Application.RENDER_STATES.NONE`. It is useful in particular when SvelteApplication has a static ID\r\n    * explicitly set in `this.options.id` and long intro / outro transitions are assigned. If a new application\r\n    * sharing this static ID attempts to open / render for the first time while an existing DOM element sharing\r\n    * this static ID exists then the initial render is cancelled below rather than crashing later in the render\r\n    * cycle {@link Position.set}.\r\n    *\r\n    * @inheritDoc\r\n    * @protected\r\n    * @ignore\r\n    */\r\n   async _render(force = false, options = {})\r\n   {\r\n      if (this._state === Application.RENDER_STATES.NONE &&\r\n       document.querySelector(`#${this.id}`) instanceof HTMLElement)\r\n      {\r\n         console.warn(`SvelteApplication - _render: A DOM element already exists for CSS ID '${this.id\r\n         }'. Cancelling initial render for new application with appId '${this.appId}'.`);\r\n\r\n         return;\r\n      }\r\n\r\n      await super._render(force, options);\r\n\r\n      if (!this.#onMount)\r\n      {\r\n         this.onSvelteMount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\r\n          this.#elementTarget });\r\n\r\n         this.#onMount = true;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Render the inner application content. Only render a template if one is defined otherwise provide an empty\r\n    * JQuery element per the core Foundry API.\r\n    *\r\n    * @param {Object} data         The data used to render the inner template\r\n    *\r\n    * @returns {Promise.<JQuery>}   A promise resolving to the constructed jQuery object\r\n    *\r\n    * @protected\r\n    * @ignore\r\n    */\r\n   async _renderInner(data)\r\n   {\r\n      const html = typeof this.template === 'string' ? await renderTemplate(this.template, data) :\r\n       document.createDocumentFragment();\r\n\r\n      return $(html);\r\n   }\r\n\r\n   /**\r\n    * Stores the initial z-index set in `_renderOuter` which is used in `_injectHTML` to set the target element\r\n    * z-index after the Svelte component is mounted.\r\n    *\r\n    * @returns {Promise<JQuery>} Outer frame / unused.\r\n    * @protected\r\n    * @ignore\r\n    */\r\n   async _renderOuter()\r\n   {\r\n      const html = await super._renderOuter();\r\n      this.#initialZIndex = html[0].style.zIndex;\r\n      return html;\r\n   }\r\n\r\n   /**\r\n    * All calculation and updates of position are implemented in {@link Position.set}. This allows position to be fully\r\n    * reactive and in control of updating inline styles for the application.\r\n    *\r\n    * This method remains for backward compatibility with Foundry. If you have a custom override quite likely you need\r\n    * to update to using the {@link Position.validators} functionality.\r\n    *\r\n    * @param {PositionDataExtended}   [position] - Position data.\r\n    *\r\n    * @returns {Position} The updated position object for the application containing the new values\r\n    */\r\n   setPosition(position)\r\n   {\r\n      return this.position.set(position);\r\n   }\r\n\r\n   /**\r\n    * This method is invoked by the `elementRootUpdate` callback that is added to the external context passed to\r\n    * Svelte components. When invoked it updates the local element roots tracked by SvelteApplication.\r\n    *\r\n    * This method may also be invoked by HMR / hot module replacement via `svelte-hmr`.\r\n    */\r\n   #updateApplicationShell()\r\n   {\r\n      const applicationShell = this.svelte.applicationShell;\r\n\r\n      if (applicationShell !== null)\r\n      {\r\n         this._element = $(applicationShell.elementRoot);\r\n\r\n         // Detect if the application shell exports an `elementContent` accessor.\r\n         this.#elementContent = hasGetter(applicationShell, 'elementContent') ?\r\n          applicationShell.elementContent : null;\r\n\r\n         // Detect if the application shell exports an `elementTarget` accessor.\r\n         this.#elementTarget = hasGetter(applicationShell, 'elementTarget') ?\r\n          applicationShell.elementTarget : null;\r\n\r\n         if (this.#elementTarget === null)\r\n         {\r\n            const element = typeof this.options.selectorTarget === 'string' ?\r\n             this._element.find(this.options.selectorTarget) : this._element;\r\n\r\n            this.#elementTarget = element[0];\r\n         }\r\n\r\n         // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\r\n         // in `this.#initialZIndex`.\r\n         if (typeof this.options.positionable === 'boolean' && this.options.positionable)\r\n         {\r\n            this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\r\n             this.#initialZIndex ?? 95;\r\n\r\n            super.bringToTop();\r\n\r\n            // Ensure that new root element has inline position styles set.\r\n            this.position.set(this.position.get());\r\n         }\r\n\r\n         super._activateCoreListeners([this.#elementTarget]);\r\n\r\n         this.onSvelteRemount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\r\n          this.#elementTarget });\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} SvelteData\r\n *\r\n * @property {object}                           config -\r\n *\r\n * @property {import('svelte').SvelteComponent} component -\r\n *\r\n * @property {HTMLElement}                      element -\r\n *\r\n * @property {boolean}                          injectHTML -\r\n */\r\n\r\n/**\r\n * @typedef {object} SvelteStores\r\n *\r\n * @property {import('svelte/store').Writable.update} appOptionsUpdate - Update function for app options store.\r\n *\r\n * @property {Function} subscribe - Subscribes to local stores.\r\n *\r\n * @property {import('svelte/store').Writable.update} uiOptionsUpdate - Update function for UI options store.\r\n *\r\n * @property {Function} unsubscribe - Unsubscribes from local stores.\r\n */\r\n","import { linear } from 'svelte/easing';\nimport { lerp } from '@typhonjs-fvtt/runtime/svelte/math';\nimport { fade, slide } from 'svelte/transition';\n\n/**\r\n * Provides a rotate transition. For options `easing` is applied to to the rotate transition. The default easing is\r\n * linear.\r\n *\r\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\r\n * rotating out transition then `end` and `initial` are swapped.\r\n *\r\n * @param {HTMLElement} node - The transition node.\r\n *\r\n * @param {object}      options - Optional parameters.\r\n *\r\n * @param {number}      [options.delay] - Delay in ms before start of transition.\r\n *\r\n * @param {number}      [options.duration] - Total transition length in ms.\r\n *\r\n * @param {Function}    [options.easing=linear] - The easing function to apply to the rotate transition.\r\n *\r\n * @param {number}      [options.end=0] - End rotation in degrees.\r\n *\r\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\r\n *\r\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\r\n *  Transition object.\r\n */\r\nfunction rotate(node, options)\r\n{\r\n   const easingRotate = options.easing ?? linear;\r\n\r\n   const initialDeg = options.initial ?? 0;\r\n   const endDeg = options.end ?? 0;\r\n\r\n   return {\r\n      delay: options.delay ?? 0,\r\n      duration: options.duration ?? 500,\r\n      easing: linear,\r\n      css: (t) =>\r\n      {\r\n         const rotateT = easingRotate(t);\r\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg)`;\r\n      }\r\n   };\r\n}\n\n/**\r\n * Combines rotate & fade transitions into a single transition. For options `easing` this is applied to both transitions,\r\n * however if provided `easingRotate` and / or `easingFade` will take precedence. The default easing is linear.\r\n *\r\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\r\n * rotating out transition then `end` and `initial` are swapped.\r\n *\r\n * @param {HTMLElement} node - The transition node.\r\n *\r\n * @param {object}      options - Optional parameters.\r\n *\r\n * @param {number}      [options.delay] - Delay in ms before start of transition.\r\n *\r\n * @param {number}      [options.duration] - Total transition length in ms.\r\n *\r\n * @param {Function}    [options.easing=linear] - The easing function to apply to both slide & fade transitions.\r\n *\r\n * @param {Function}    [options.easingFade=linear] - The easing function to apply to the fade transition.\r\n *\r\n * @param {Function}    [options.easingRotate=linear] - The easing function to apply to the rotate transition.\r\n *\r\n * @param {number}      [options.end=0] - End rotation in degrees.\r\n *\r\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\r\n *\r\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\r\n *  Transition object.\r\n */\r\nfunction rotateFade(node, options)\r\n{\r\n   const easingFade = options.easingFade || options.easing || linear;\r\n   const easingRotate = options.easingRotate || options.easing || linear;\r\n\r\n   const fadeTransition = fade(node);\r\n\r\n   const initialDeg = options.initial ?? 0;\r\n   const endDeg = options.end ?? 0;\r\n\r\n   return {\r\n      delay: options.delay ?? 0,\r\n      duration: options.duration ?? 500,\r\n      easing: linear,\r\n      css: (t) =>\r\n      {\r\n         const fadeT = easingFade(t);\r\n         const rotateT = easingRotate(t);\r\n\r\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg); ${fadeTransition.css(fadeT, 1 - fadeT)}`;\r\n      }\r\n   };\r\n}\n\n/**\r\n * Combines slide & fade transitions into a single transition. For options `easing` this is applied to both transitions,\r\n * however if provided `easingSlide` and / or `easingFade` will take precedence. The default easing is linear.\r\n *\r\n * @param {HTMLElement} node - The transition node.\r\n *\r\n * @param {object}      options - Optional parameters.\r\n *\r\n * @param {number}      [options.delay] - Delay in ms before start of transition.\r\n *\r\n * @param {number}      [options.duration] - Total transition length in ms.\r\n *\r\n * @param {Function}    [options.easing=linear] - The easing function to apply to both slide & fade transitions.\r\n *\r\n * @param {Function}    [options.easingFade=linear] - The easing function to apply to the fade transition.\r\n *\r\n * @param {Function}    [options.easingSlide=linear] - The easing function to apply to the slide transition.\r\n *\r\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\r\n *  Transition object.\r\n */\r\nfunction slideFade(node, options)\r\n{\r\n   const fadeEasing = options.easingFade || options.easing || linear;\r\n   const slideEasing = options.easingSlide || options.easing || linear;\r\n\r\n   const fadeTransition = fade(node);\r\n   const slideTransition = slide(node);\r\n\r\n   return {\r\n      delay: options.delay || 0,\r\n      duration: options.duration || 500,\r\n      easing: linear,\r\n      css: (t) =>\r\n      {\r\n         const fadeT = fadeEasing(t);\r\n         const slideT = slideEasing(t);\r\n         return `${slideTransition.css(slideT, 1 - slideT)}; ${fadeTransition.css(fadeT, 1 - fadeT)}`;\r\n      }\r\n   };\r\n}\n\n/**\r\n * Converts a Svelte transition to an animation. Both transitions & animations use the same CSS / styles solution and\r\n * resulting data so wrap the transition function with the signature of an animation.\r\n *\r\n * @param {(node: Element, params?: object) => import('svelte/transition').TransitionConfig} fn - A Svelte transition\r\n *                                                                                                function.\r\n *\r\n * @returns {(node: Element, { from: DOMRect, to: DOMRect }, params?: object) =>\r\n *  import('svelte/transition').TransitionConfig} Transition function converted to an animation.\r\n */\r\nfunction toAnimation(fn) {\r\n   return (node, animations, params = {}) => fn(node, params);\r\n}\n\nconst s_DEFAULT_TRANSITION = () => void 0;\r\nconst s_DEFAULT_TRANSITION_OPTIONS = {};\n\nexport { rotate, rotateFade, s_DEFAULT_TRANSITION, s_DEFAULT_TRANSITION_OPTIONS, slideFade, toAnimation };\n//# sourceMappingURL=index.js.map\n","import { isUpdatableStore, isWritableStore } from '@typhonjs-fvtt/runtime/svelte/store';\nimport { styleParsePixels, debounce, hasSetter } from '@typhonjs-fvtt/runtime/svelte/util';\nimport { cubicOut } from 'svelte/easing';\n\n/**\r\n * Provides an action to always blur the element when any pointer up event occurs on the element.\r\n *\r\n * @param {HTMLElement}   node - The node to handle always blur on pointer up.\r\n */\r\nfunction alwaysBlur(node)\r\n{\r\n   function blur()\r\n   {\r\n      setTimeout(() => { if (document.activeElement === node) { node.blur(); } }, 0);\r\n   }\r\n\r\n   node.addEventListener('pointerup', blur);\r\n\r\n   return {\r\n      destroy: () => node.removeEventListener('pointerup', blur)\r\n   };\r\n}\n\n/**\r\n * Provides an action to monitor the given HTMLElement node with `ResizeObserver` posting width / height changes\r\n * to the target in various ways depending on the shape of the target. The target can be one of the following and the\r\n * precedence order is listed from top to bottom:\r\n *\r\n * - has a `resizeObserved` function as attribute; offset then content width / height are passed as parameters.\r\n * - has a `setContentBounds` function as attribute; content width / height are passed as parameters.\r\n * - has a `setDimension` function as attribute; offset width / height are passed as parameters.\r\n * - target is an object; offset and content width / height attributes are directly set on target.\r\n * - target is a function; the function is invoked with offset then content width / height parameters.\r\n * - has a writable store `resizeObserved` as an attribute; updated with offset & content width / height.\r\n * - has an object 'stores' that has a writable store `resizeObserved` as an attribute; updated with offset &\r\n *   content width / height.\r\n *\r\n * Note: Svelte currently uses an archaic IFrame based workaround to monitor offset / client width & height changes.\r\n * A more up to date way to do this is with ResizeObserver. To track when Svelte receives ResizeObserver support\r\n * monitor this issue: {@link https://github.com/sveltejs/svelte/issues/4233}\r\n *\r\n * Can-I-Use: {@link https://caniuse.com/resizeobserver}\r\n *\r\n * @param {HTMLElement}          node - The node associated with the action.\r\n *\r\n * @param {ResizeObserverTarget} target - An object or function to update with observed width & height changes.\r\n *\r\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\r\n * @see {@link https://github.com/sveltejs/svelte/issues/4233}\r\n */\r\nfunction resizeObserver(node, target)\r\n{\r\n   ResizeObserverManager.add(node, target);\r\n\r\n   return {\r\n      update: (newTarget) =>\r\n      {\r\n         ResizeObserverManager.remove(node, target);\r\n         target = newTarget;\r\n         ResizeObserverManager.add(node, target);\r\n      },\r\n\r\n      destroy: () =>\r\n      {\r\n         ResizeObserverManager.remove(node, target);\r\n      }\r\n   };\r\n}\r\n\r\n/**\r\n * Provides a function that when invoked with an element updates the cached styles for each subscriber of the element.\r\n *\r\n * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\r\n * to update the cache if you change border or padding attributes of the element.\r\n *\r\n * @param {HTMLElement} el - An HTML element.\r\n */\r\nresizeObserver.updateCache = function(el)\r\n{\r\n   if (!(el instanceof HTMLElement)) { throw new TypeError(`resizeObserverUpdate error: 'el' is not an HTMLElement.`); }\r\n\r\n   const subscribers = s_MAP.get(el);\r\n\r\n   if (Array.isArray(subscribers))\r\n   {\r\n      const computed = globalThis.getComputedStyle(el);\r\n\r\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\r\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\r\n      const borderBottom = styleParsePixels(el.style.borderBottom) ?? styleParsePixels(computed.borderBottom) ?? 0;\r\n      const borderLeft = styleParsePixels(el.style.borderLeft) ?? styleParsePixels(computed.borderLeft) ?? 0;\r\n      const borderRight = styleParsePixels(el.style.borderRight) ?? styleParsePixels(computed.borderRight) ?? 0;\r\n      const borderTop = styleParsePixels(el.style.borderTop) ?? styleParsePixels(computed.borderTop) ?? 0;\r\n      const paddingBottom = styleParsePixels(el.style.paddingBottom) ?? styleParsePixels(computed.paddingBottom) ?? 0;\r\n      const paddingLeft = styleParsePixels(el.style.paddingLeft) ?? styleParsePixels(computed.paddingLeft) ?? 0;\r\n      const paddingRight = styleParsePixels(el.style.paddingRight) ?? styleParsePixels(computed.paddingRight) ?? 0;\r\n      const paddingTop = styleParsePixels(el.style.paddingTop) ?? styleParsePixels(computed.paddingTop) ?? 0;\r\n\r\n      const additionalWidth = borderLeft + borderRight + paddingLeft + paddingRight;\r\n      const additionalHeight = borderTop + borderBottom + paddingTop + paddingBottom;\r\n\r\n      for (const subscriber of subscribers)\r\n      {\r\n         subscriber.styles.additionalWidth = additionalWidth;\r\n         subscriber.styles.additionalHeight = additionalHeight;\r\n         s_UPDATE_SUBSCRIBER(subscriber, subscriber.contentWidth, subscriber.contentHeight);\r\n      }\r\n   }\r\n};\r\n\r\n// Below is the static ResizeObserverManager ------------------------------------------------------------------------\r\n\r\nconst s_MAP = new Map();\r\n\r\n/**\r\n * Provides a static / single instance of ResizeObserver that can notify listeners in different ways.\r\n *\r\n * The action, {@link resizeObserver}, utilizes ResizeObserverManager for automatic registration and removal\r\n * via Svelte.\r\n */\r\nclass ResizeObserverManager\r\n{\r\n   /**\r\n    * Add an HTMLElement and ResizeObserverTarget instance for monitoring. Create cached style attributes for the\r\n    * given element include border & padding dimensions for offset width / height calculations.\r\n    *\r\n    * @param {HTMLElement}    el - The element to observe.\r\n    *\r\n    * @param {ResizeObserverTarget} target - A target that contains one of several mechanisms for updating resize data.\r\n    */\r\n   static add(el, target)\r\n   {\r\n      const updateType = s_GET_UPDATE_TYPE(target);\r\n\r\n      if (updateType === 0)\r\n      {\r\n         throw new Error(`'target' does not match supported ResizeObserverManager update mechanisms.`);\r\n      }\r\n\r\n      const computed = globalThis.getComputedStyle(el);\r\n\r\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\r\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\r\n      const borderBottom = styleParsePixels(el.style.borderBottom) ?? styleParsePixels(computed.borderBottom) ?? 0;\r\n      const borderLeft = styleParsePixels(el.style.borderLeft) ?? styleParsePixels(computed.borderLeft) ?? 0;\r\n      const borderRight = styleParsePixels(el.style.borderRight) ?? styleParsePixels(computed.borderRight) ?? 0;\r\n      const borderTop = styleParsePixels(el.style.borderTop) ?? styleParsePixels(computed.borderTop) ?? 0;\r\n      const paddingBottom = styleParsePixels(el.style.paddingBottom) ?? styleParsePixels(computed.paddingBottom) ?? 0;\r\n      const paddingLeft = styleParsePixels(el.style.paddingLeft) ?? styleParsePixels(computed.paddingLeft) ?? 0;\r\n      const paddingRight = styleParsePixels(el.style.paddingRight) ?? styleParsePixels(computed.paddingRight) ?? 0;\r\n      const paddingTop = styleParsePixels(el.style.paddingTop) ?? styleParsePixels(computed.paddingTop) ?? 0;\r\n\r\n      const data = {\r\n         updateType,\r\n         target,\r\n\r\n         // Stores most recent contentRect.width and contentRect.height values from ResizeObserver.\r\n         contentWidth: 0,\r\n         contentHeight: 0,\r\n\r\n         // Convenience data for total border & padding for offset width & height calculations.\r\n         styles: {\r\n            additionalWidth: borderLeft + borderRight + paddingLeft + paddingRight,\r\n            additionalHeight: borderTop + borderBottom + paddingTop + paddingBottom\r\n         }\r\n      };\r\n\r\n      if (s_MAP.has(el))\r\n      {\r\n         const subscribers = s_MAP.get(el);\r\n         subscribers.push(data);\r\n      }\r\n      else\r\n      {\r\n         s_MAP.set(el, [data]);\r\n      }\r\n\r\n      s_RESIZE_OBSERVER.observe(el);\r\n   }\r\n\r\n   /**\r\n    * Removes all targets from monitoring when just an element is provided otherwise removes a specific target\r\n    * from the monitoring map. If no more targets remain then the element is removed from monitoring.\r\n    *\r\n    * @param {HTMLElement}          el - Element to remove from monitoring.\r\n    *\r\n    * @param {ResizeObserverTarget} [target] - A specific target to remove from monitoring.\r\n    */\r\n   static remove(el, target = void 0)\r\n   {\r\n      const subscribers = s_MAP.get(el);\r\n      if (Array.isArray(subscribers))\r\n      {\r\n         const index = subscribers.findIndex((entry) => entry.target === target);\r\n         if (index >= 0)\r\n         {\r\n            // Update target subscriber with undefined values.\r\n            s_UPDATE_SUBSCRIBER(subscribers[index], void 0, void 0);\r\n\r\n            subscribers.splice(index, 1);\r\n         }\r\n\r\n         // Remove element monitoring if last target removed.\r\n         if (subscribers.length === 0)\r\n         {\r\n            s_MAP.delete(el);\r\n            s_RESIZE_OBSERVER.unobserve(el);\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * Defines the various shape / update type of the given target.\r\n *\r\n * @type {Record<string, number>}\r\n */\r\nconst s_UPDATE_TYPES = {\r\n   none: 0,\r\n   attribute: 1,\r\n   function: 2,\r\n   resizeObserved: 3,\r\n   setContentBounds: 4,\r\n   setDimension: 5,\r\n   storeObject: 6,\r\n   storesObject: 7\r\n};\r\n\r\nconst s_RESIZE_OBSERVER = new ResizeObserver((entries) =>\r\n{\r\n   for (const entry of entries)\r\n   {\r\n      const subscribers = s_MAP.get(entry?.target);\r\n\r\n      if (Array.isArray(subscribers))\r\n      {\r\n         const contentWidth = entry.contentRect.width;\r\n         const contentHeight = entry.contentRect.height;\r\n\r\n         for (const subscriber of subscribers)\r\n         {\r\n            s_UPDATE_SUBSCRIBER(subscriber, contentWidth, contentHeight);\r\n         }\r\n      }\r\n   }\r\n});\r\n\r\n/**\r\n * Determines the shape of the target instance regarding valid update mechanisms to set width & height changes.\r\n *\r\n * @param {*}  target - The target instance.\r\n *\r\n * @returns {number} Update type value.\r\n */\r\nfunction s_GET_UPDATE_TYPE(target)\r\n{\r\n   if (target?.resizeObserved instanceof Function) { return s_UPDATE_TYPES.resizeObserved; }\r\n   if (target?.setDimension instanceof Function) { return s_UPDATE_TYPES.setDimension; }\r\n   if (target?.setContentBounds instanceof Function) { return s_UPDATE_TYPES.setContentBounds; }\r\n\r\n   const targetType = typeof target;\r\n\r\n   // Does the target have resizeObserved writable store?\r\n   if ((targetType === 'object' || targetType === 'function'))\r\n   {\r\n      if (isUpdatableStore(target.resizeObserved))\r\n      {\r\n         return s_UPDATE_TYPES.storeObject;\r\n      }\r\n\r\n      // Now check for a child stores object which is a common TRL pattern for exposing stores.\r\n      const stores = target?.stores;\r\n      if (typeof stores === 'object' || typeof stores === 'function')\r\n      {\r\n         if (isUpdatableStore(stores.resizeObserved))\r\n         {\r\n            return s_UPDATE_TYPES.storesObject;\r\n         }\r\n      }\r\n   }\r\n\r\n   if (targetType === 'object') { return s_UPDATE_TYPES.attribute; }\r\n\r\n   if (targetType === 'function') { return s_UPDATE_TYPES.function; }\r\n\r\n   return s_UPDATE_TYPES.none;\r\n}\r\n\r\n/**\r\n * Updates a subscriber target with given content width & height values. Offset width & height is calculated from\r\n * the content values + cached styles.\r\n *\r\n * @param {object}            subscriber - Internal data about subscriber.\r\n *\r\n * @param {number|undefined}  contentWidth - ResizeObserver contentRect.width value or undefined.\r\n *\r\n * @param {number|undefined}  contentHeight - ResizeObserver contentRect.height value or undefined.\r\n */\r\nfunction s_UPDATE_SUBSCRIBER(subscriber, contentWidth, contentHeight)\r\n{\r\n   const styles = subscriber.styles;\r\n\r\n   subscriber.contentWidth = contentWidth;\r\n   subscriber.contentHeight = contentHeight;\r\n\r\n   const offsetWidth = Number.isFinite(contentWidth) ? contentWidth + styles.additionalWidth : void 0;\r\n   const offsetHeight = Number.isFinite(contentHeight) ? contentHeight + styles.additionalHeight : void 0;\r\n\r\n   const target = subscriber.target;\r\n\r\n   switch (subscriber.updateType)\r\n   {\r\n      case s_UPDATE_TYPES.attribute:\r\n         target.contentWidth = contentWidth;\r\n         target.contentHeight = contentHeight;\r\n         target.offsetWidth = offsetWidth;\r\n         target.offsetHeight = offsetHeight;\r\n         break;\r\n\r\n      case s_UPDATE_TYPES.function:\r\n         target?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\r\n         break;\r\n\r\n      case s_UPDATE_TYPES.resizeObserved:\r\n         target.resizeObserved?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\r\n         break;\r\n\r\n      case s_UPDATE_TYPES.setContentBounds:\r\n         target.setContentBounds?.(contentWidth, contentHeight);\r\n         break;\r\n\r\n      case s_UPDATE_TYPES.setDimension:\r\n         target.setDimension?.(offsetWidth, offsetHeight);\r\n         break;\r\n\r\n      case s_UPDATE_TYPES.storeObject:\r\n         target.resizeObserved.update((object) =>\r\n         {\r\n            object.contentHeight = contentHeight;\r\n            object.contentWidth = contentWidth;\r\n            object.offsetHeight = offsetHeight;\r\n            object.offsetWidth = offsetWidth;\r\n\r\n            return object;\r\n         });\r\n         break;\r\n\r\n      case s_UPDATE_TYPES.storesObject:\r\n         target.stores.resizeObserved.update((object) =>\r\n         {\r\n            object.contentHeight = contentHeight;\r\n            object.contentWidth = contentWidth;\r\n            object.offsetHeight = offsetHeight;\r\n            object.offsetWidth = offsetWidth;\r\n\r\n            return object;\r\n         });\r\n         break;\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object | Function} ResizeObserverTarget\r\n *\r\n * @property {number} [contentHeight] -\r\n *\r\n * @property {number} [contentWidth] -\r\n *\r\n * @property {number} [offsetHeight] -\r\n *\r\n * @property {number} [offsetWidth] -\r\n *\r\n * @property {Writable<object> | Function} [resizedObserver] - Either a function or a writable store.\r\n *\r\n * @property {Function} [setContentSize] - A function that is invoked with content width & height changes.\r\n *\r\n * @property {Function} [setDimension] - A function that is invoked with offset width & height changes.\r\n *\r\n * @property {{resizedObserver: Writable<object>}} [stores] - An object with a writable store.\r\n */\n\n/**\r\n * Provides an action to save `scrollTop` of an element with a vertical scrollbar. This action should be used on the\r\n * scrollable element and must include a writable store that holds the active store for the current `scrollTop` value.\r\n * You may switch the stores externally and this action will set the `scrollTop` based on the newly set store. This is\r\n * useful for instance providing a select box that controls the scrollable container.\r\n *\r\n * @param {HTMLElement} element - The target scrollable HTML element.\r\n *\r\n * @param {import('svelte/store').Writable<number>}   store - A writable store that stores the element scrollTop.\r\n */\r\nfunction applyScrolltop(element, store)\r\n{\r\n   if (!isWritableStore(store))\r\n   {\r\n      throw new TypeError(`applyScrolltop error: 'store' must be a writable Svelte store.`);\r\n   }\r\n\r\n   function storeUpdate(value)\r\n   {\r\n      if (!Number.isFinite(value)) { return; }\r\n\r\n      // For some reason for scrollTop to take on first update from a new element setTimeout is necessary.\r\n      setTimeout(() => element.scrollTop = value, 0);\r\n   }\r\n\r\n   let unsubscribe = store.subscribe(storeUpdate);\r\n\r\n   const resizeControl = resizeObserver(element, debounce(() => {\r\n      if (element.isConnected) { store.set(element.scrollTop); }\r\n   }, 500));\r\n\r\n   /**\r\n    * Save target `scrollTop` to the current set store.\r\n    *\r\n    * @param {Event} event -\r\n    */\r\n   function onScroll(event)\r\n   {\r\n      store.set(event.target.scrollTop);\r\n   }\r\n\r\n   const debounceFn = debounce((e) => onScroll(e), 500);\r\n\r\n   element.addEventListener('scroll', debounceFn);\r\n\r\n   return {\r\n      update: (newStore) =>\r\n      {\r\n         unsubscribe();\r\n         store = newStore;\r\n\r\n         if (!isWritableStore(store))\r\n         {\r\n            throw new TypeError(`applyScrolltop.update error: 'store' must be a writable Svelte store.`);\r\n         }\r\n\r\n         unsubscribe = store.subscribe(storeUpdate);\r\n      },\r\n\r\n      destroy: () =>\r\n      {\r\n         element.removeEventListener('scroll', debounceFn);\r\n         unsubscribe();\r\n         resizeControl.destroy();\r\n      }\r\n   };\r\n}\n\n/**\r\n * Provides an action to apply style properties provided as an object.\r\n *\r\n * @param {HTMLElement} node - Target element\r\n *\r\n * @param {object}      properties - Key / value object of properties to set.\r\n *\r\n * @returns {Function} Update function.\r\n */\r\nfunction applyStyles(node, properties)\r\n{\r\n   /** Sets properties on node. */\r\n   function setProperties()\r\n   {\r\n      if (typeof properties !== 'object') { return; }\r\n\r\n      for (const prop of Object.keys(properties))\r\n      {\r\n         node.style.setProperty(`${prop}`, properties[prop]);\r\n      }\r\n   }\r\n\r\n   setProperties();\r\n\r\n   return {\r\n      update(newProperties)\r\n      {\r\n         properties = newProperties;\r\n         setProperties();\r\n      }\r\n   };\r\n}\n\n/**\r\n * Provides an action to blur the element when any pointer down event occurs outside the element. This can be useful\r\n * for input elements including select to blur / unfocus the element when any pointer down occurs outside the element.\r\n *\r\n * @param {HTMLElement}   node - The node to handle automatic blur on focus loss.\r\n */\r\nfunction autoBlur(node)\r\n{\r\n   function blur() { document.body.removeEventListener('pointerdown', onPointerDown); }\r\n   function focus() { document.body.addEventListener('pointerdown', onPointerDown); }\r\n\r\n   /**\r\n    * Blur the node if a pointer down event happens outside the node.\r\n    * @param {PointerEvent} event\r\n    */\r\n   function onPointerDown(event)\r\n   {\r\n      if (event.target === node || node.contains(event.target)) { return; }\r\n\r\n      if (document.activeElement === node) { node.blur(); }\r\n   }\r\n\r\n   node.addEventListener('blur', blur);\r\n   node.addEventListener('focus', focus);\r\n\r\n   return {\r\n      destroy: () =>\r\n      {\r\n         document.body.removeEventListener('pointerdown', onPointerDown);\r\n         node.removeEventListener('blur', blur);\r\n         node.removeEventListener('focus', focus);\r\n      }\r\n   };\r\n}\n\n/**\r\n * Provides an action to apply a Position instance to a HTMLElement and invoke `position.parent`\r\n *\r\n * @param {HTMLElement}       node - The node associated with the action.\r\n *\r\n * @param {Position}          position - A position instance.\r\n *\r\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\r\n */\r\nfunction applyPosition(node, position)\r\n{\r\n   if (hasSetter(position, 'parent')) { position.parent = node; }\r\n\r\n   return {\r\n      update: (newPosition) =>\r\n      {\r\n         // Sanity case to short circuit update if positions are the same instance.\r\n         if (newPosition === position && newPosition.parent === position.parent) { return; }\r\n\r\n         if (hasSetter(position)) { position.parent = void 0; }\r\n\r\n         position = newPosition;\r\n\r\n         if (hasSetter(position, 'parent')) { position.parent = node; }\r\n      },\r\n\r\n      destroy: () => { if (hasSetter(position, 'parent')) { position.parent = void 0; } }\r\n   };\r\n}\n\n/**\r\n * Provides an action to enable pointer dragging of an HTMLElement and invoke `position.set` on a given {@link Position}\r\n * instance provided. When the attached boolean store state changes the draggable action is enabled or disabled.\r\n *\r\n * @param {HTMLElement}       node - The node associated with the action.\r\n *\r\n * @param {object}            params - Required parameters.\r\n *\r\n * @param {Position}          params.position - A position instance.\r\n *\r\n * @param {boolean}           [params.active=true] - A boolean value; attached to a readable store.\r\n *\r\n * @param {number}            [params.button=0] - MouseEvent button; {@link https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button}.\r\n *\r\n * @param {Writable<boolean>} [params.storeDragging] - A writable store that tracks \"dragging\" state.\r\n *\r\n * @param {boolean}           [params.ease=true] - When true easing is enabled.\r\n *\r\n * @param {object}            [params.easeOptions] - Gsap `to / `quickTo` vars object.\r\n *\r\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\r\n */\r\nfunction draggable(node, { position, active = true, button = 0, storeDragging = void 0, ease = false,\r\n easeOptions = { duration: 0.1, ease: cubicOut } })\r\n{\r\n   /**\r\n    * Duplicate the app / Positionable starting position to track differences.\r\n    *\r\n    * @type {object}\r\n    */\r\n   let initialPosition = null;\r\n\r\n   /**\r\n    * Stores the initial X / Y on drag down.\r\n    *\r\n    * @type {object}\r\n    */\r\n   let initialDragPoint = {};\r\n\r\n   /**\r\n    * Stores the current dragging state and gates the move pointer as the dragging store is not\r\n    * set until the first pointer move.\r\n    *\r\n    * @type {boolean}\r\n    */\r\n   let dragging = false;\r\n\r\n   /**\r\n    * Stores the quickTo callback to use for optimized tweening when easing is enabled.\r\n    *\r\n    * @type {quickToCallback}\r\n    */\r\n   let quickTo = position.animate.quickTo(['top', 'left'], easeOptions);\r\n\r\n   /**\r\n    * Remember event handlers associated with this action so they may be later unregistered.\r\n    *\r\n    * @type {object}\r\n    */\r\n   const handlers = {\r\n      dragDown: ['pointerdown', (e) => onDragPointerDown(e), false],\r\n      dragMove: ['pointermove', (e) => onDragPointerChange(e), false],\r\n      dragUp: ['pointerup', (e) => onDragPointerUp(e), false]\r\n   };\r\n\r\n   /**\r\n    * Activates listeners.\r\n    */\r\n   function activateListeners()\r\n   {\r\n      // Drag handlers\r\n      node.addEventListener(...handlers.dragDown);\r\n      node.classList.add('draggable');\r\n   }\r\n\r\n   /**\r\n    * Removes listeners.\r\n    */\r\n   function removeListeners()\r\n   {\r\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\r\n\r\n      // Drag handlers\r\n      node.removeEventListener(...handlers.dragDown);\r\n      node.removeEventListener(...handlers.dragMove);\r\n      node.removeEventListener(...handlers.dragUp);\r\n      node.classList.remove('draggable');\r\n   }\r\n\r\n   if (active)\r\n   {\r\n      activateListeners();\r\n   }\r\n\r\n   /**\r\n    * Handle the initial pointer down that activates dragging behavior for the positionable.\r\n    *\r\n    * @param {PointerEvent} event - The pointer down event.\r\n    */\r\n   function onDragPointerDown(event)\r\n   {\r\n      if (event.button !== button || !event.isPrimary) { return; }\r\n\r\n      event.preventDefault();\r\n\r\n      dragging = false;\r\n\r\n      // Record initial position.\r\n      initialPosition = position.get();\r\n      initialDragPoint = { x: event.clientX, y: event.clientY };\r\n\r\n      // Add move and pointer up handlers.\r\n      node.addEventListener(...handlers.dragMove);\r\n      node.addEventListener(...handlers.dragUp);\r\n\r\n      node.setPointerCapture(event.pointerId);\r\n   }\r\n\r\n   /**\r\n    * Move the positionable.\r\n    *\r\n    * @param {PointerEvent} event - The pointer move event.\r\n    */\r\n   function onDragPointerChange(event)\r\n   {\r\n      // See chorded button presses for pointer events:\r\n      // https://www.w3.org/TR/pointerevents3/#chorded-button-interactions\r\n      // TODO: Support different button configurations for PointerEvents.\r\n      if ((event.buttons & 1) === 0)\r\n      {\r\n         onDragPointerUp(event);\r\n         return;\r\n      }\r\n\r\n      if (event.button !== -1 || !event.isPrimary) { return; }\r\n\r\n      event.preventDefault();\r\n\r\n      // Only set store dragging on first move event.\r\n      if (!dragging && typeof storeDragging?.set === 'function')\r\n      {\r\n         dragging = true;\r\n         storeDragging.set(true);\r\n      }\r\n\r\n      /** @type {number} */\r\n      const newLeft = initialPosition.left + (event.clientX - initialDragPoint.x);\r\n      /** @type {number} */\r\n      const newTop = initialPosition.top + (event.clientY - initialDragPoint.y);\r\n\r\n      if (ease)\r\n      {\r\n         quickTo(newTop, newLeft);\r\n      }\r\n      else\r\n      {\r\n         s_POSITION_DATA.left = newLeft;\r\n         s_POSITION_DATA.top = newTop;\r\n\r\n         position.set(s_POSITION_DATA);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Finish dragging and set the final position and removing listeners.\r\n    *\r\n    * @param {PointerEvent} event - The pointer up event.\r\n    */\r\n   function onDragPointerUp(event)\r\n   {\r\n      event.preventDefault();\r\n\r\n      dragging = false;\r\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\r\n\r\n      node.removeEventListener(...handlers.dragMove);\r\n      node.removeEventListener(...handlers.dragUp);\r\n   }\r\n\r\n   return {\r\n      // The default of active being true won't automatically add listeners twice.\r\n      update: (options) =>\r\n      {\r\n         if (typeof options.active === 'boolean')\r\n         {\r\n            active = options.active;\r\n            if (active) { activateListeners(); }\r\n            else { removeListeners(); }\r\n         }\r\n\r\n         if (typeof options.button === 'number')\r\n         {\r\n            button = options.button;\r\n         }\r\n\r\n         if (options.position !== void 0 && options.position !== position)\r\n         {\r\n            position = options.position;\r\n            quickTo = position.animate.quickTo(['top', 'left'], easeOptions);\r\n         }\r\n\r\n         if (typeof options.ease === 'boolean') { ease = options.ease; }\r\n\r\n         if (typeof options.easeOptions === 'object')\r\n         {\r\n            easeOptions = options.easeOptions;\r\n            quickTo.options(easeOptions);\r\n         }\r\n      },\r\n\r\n      destroy: () => removeListeners()\r\n   };\r\n}\r\n\r\nclass DraggableOptions\r\n{\r\n   #ease = false;\r\n\r\n   #easeOptions = { duration: 0.1, ease: cubicOut };\r\n\r\n   /**\r\n    * Stores the subscribers.\r\n    *\r\n    * @type {(function(DraggableOptions): void)[]}\r\n    */\r\n   #subscriptions = [];\r\n\r\n   constructor({ ease, easeOptions } = {})\r\n   {\r\n      // Define the following getters directly on this instance and make them enumerable. This allows them to be\r\n      // picked up w/ `Object.assign`.\r\n      Object.defineProperty(this, 'ease', {\r\n         get: () => { return this.#ease; },\r\n         set: (newEase) =>\r\n         {\r\n            if (typeof newEase !== 'boolean') { throw new TypeError(`'ease' is not a boolean.`); }\r\n\r\n            this.#ease = newEase;\r\n            this.#updateSubscribers();\r\n         },\r\n         enumerable: true\r\n      });\r\n\r\n      Object.defineProperty(this, 'easeOptions', {\r\n         get: () => { return this.#easeOptions; },\r\n         set: (newEaseOptions) =>\r\n         {\r\n            if (newEaseOptions === null || typeof newEaseOptions !== 'object')\r\n            {\r\n               throw new TypeError(`'easeOptions' is not an object.`);\r\n            }\r\n\r\n            if (newEaseOptions.duration !== void 0)\r\n            {\r\n               if (!Number.isFinite(newEaseOptions.duration))\r\n               {\r\n                  throw new TypeError(`'easeOptions.duration' is not a finite number.`);\r\n               }\r\n\r\n               if (newEaseOptions.duration < 0) { throw new Error(`'easeOptions.duration' is less than 0.`); }\r\n\r\n               this.#easeOptions.duration = newEaseOptions.duration;\r\n            }\r\n\r\n            if (newEaseOptions.ease !== void 0)\r\n            {\r\n               if (typeof newEaseOptions.ease !== 'function' && typeof newEaseOptions.ease !== 'string')\r\n               {\r\n                  throw new TypeError(`'easeOptions.ease' is not a function or string.`);\r\n               }\r\n\r\n               this.#easeOptions.ease = newEaseOptions.ease;\r\n            }\r\n\r\n            this.#updateSubscribers();\r\n         },\r\n         enumerable: true\r\n      });\r\n\r\n      // Set default options.\r\n      if (ease !== void 0) { this.ease = ease; }\r\n      if (easeOptions !== void 0) { this.easeOptions = easeOptions; }\r\n   }\r\n\r\n\r\n   /**\r\n    * @returns {number} Get ease duration\r\n    */\r\n   get easeDuration() { return this.#easeOptions.duration; }\r\n\r\n   /**\r\n    * @returns {string|Function} Get easing function value.\r\n    */\r\n   get easeValue() { return this.#easeOptions.ease; }\r\n\r\n\r\n   /**\r\n    * @param {number}   duration - Set ease duration.\r\n    */\r\n   set easeDuration(duration)\r\n   {\r\n      if (!Number.isFinite(duration))\r\n      {\r\n         throw new TypeError(`'duration' is not a finite number.`);\r\n      }\r\n\r\n      if (duration < 0) { throw new Error(`'duration' is less than 0.`); }\r\n\r\n      this.#easeOptions.duration = duration;\r\n      this.#updateSubscribers();\r\n   }\r\n\r\n   /**\r\n    * @param {string|Function} value - Get easing function value.\r\n    */\r\n   set easeValue(value)\r\n   {\r\n      if (typeof value !== 'function' && typeof value !== 'string')\r\n      {\r\n         throw new TypeError(`'value' is not a function or string.`);\r\n      }\r\n\r\n      this.#easeOptions.ease = value;\r\n      this.#updateSubscribers();\r\n   }\r\n\r\n   /**\r\n    * Resets all options data to default values.\r\n    */\r\n   reset()\r\n   {\r\n      this.#ease = false;\r\n      this.#easeOptions = { duration: 0.1, ease: cubicOut };\r\n      this.#updateSubscribers();\r\n   }\r\n\r\n   /**\r\n    * Resets easing options to default values.\r\n    */\r\n   resetEase()\r\n   {\r\n      this.#easeOptions = { duration: 0.1, ease: cubicOut };\r\n      this.#updateSubscribers();\r\n   }\r\n\r\n   /**\r\n    *\r\n    * @param {function(DraggableOptions): void} handler - Callback function that is invoked on update / changes.\r\n    *                                                 Receives the DraggableOptions object / instance.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(this);                     // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   #updateSubscribers()\r\n   {\r\n      const subscriptions = this.#subscriptions;\r\n\r\n      // Early out if there are no subscribers.\r\n      if (subscriptions.length > 0)\r\n      {\r\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this); }\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * Define a function to get a DraggableOptions instance.\r\n *\r\n * @returns {DraggableOptions} A new options instance.\r\n */\r\ndraggable.options = (options) => new DraggableOptions(options);\r\n\r\n/**\r\n * Used for direct call to `position.set`.\r\n *\r\n * @type {{top: number, left: number}}\r\n */\r\nconst s_POSITION_DATA = { left: 0, top: 0 };\n\nexport { alwaysBlur, applyPosition, applyScrolltop, applyStyles, autoBlur, draggable, resizeObserver };\n//# sourceMappingURL=index.js.map\n","/**\r\n * A helper to create a set of radio checkbox input elements in a named set.\r\n * The provided keys are the possible radio values while the provided values are human readable labels.\r\n *\r\n * @param {string} name         The radio checkbox field name\r\n *\r\n * @param {object} choices      A mapping of radio checkbox values to human readable labels\r\n *\r\n * @param {object} options      Options which customize the radio boxes creation\r\n *\r\n * @param {string} options.checked    Which key is currently checked?\r\n *\r\n * @param {boolean} options.localize  Pass each label through string localization?\r\n *\r\n * @returns {string} HTML for radio boxes.\r\n *\r\n * @example <caption>The provided input data</caption>\r\n * let groupName = \"importantChoice\";\r\n * let choices = {a: \"Choice A\", b: \"Choice B\"};\r\n * let chosen = \"a\";\r\n *\r\n * @example <caption>The template HTML structure</caption>\r\n * <div class=\"form-group\">\r\n *   <label>Radio Group Label</label>\r\n *   <div class=\"form-fields\">\r\n *     {@html radioBoxes(groupName, choices, { checked: chosen, localize: true})}\r\n *   </div>\r\n * </div>\r\n */\r\nfunction radioBoxes(name, choices, options)\r\n{\r\n   const checked = options['checked'] || null;\r\n   const localize = options['localize'] || false;\r\n   let html = '';\r\n\r\n   for (let [key, label] of Object.entries(choices)) // eslint-disable-line prefer-const\r\n   {\r\n      if (localize) { label = game.i18n.localize(label); }\r\n      const isChecked = checked === key;\r\n      html += `<label class=\"checkbox\"><input type=\"radio\" name=\"${name}\" value=\"${key}\" ${\r\n       isChecked ? 'checked' : ''}> ${label}</label>`;\r\n   }\r\n\r\n   return html;\r\n}\n\n/**\r\n * Converts the `selectOptions` Handlebars helper to be Svelte compatible. This is useful when initially converting\r\n * over an app to Svelte and for essential usage to several dialogs that mirror the core Foundry experience. For\r\n * an example of usage see {@link TJSFolderPermissions}.\r\n *\r\n * A helper to create a set of <option> elements in a <select> block based on a provided dictionary.\r\n * The provided keys are the option values while the provided values are human-readable labels.\r\n * This helper supports both single-select as well as multi-select input fields.\r\n *\r\n * @param {object} choices                     A mapping of radio checkbox values to human readable labels\r\n *\r\n * @param {object} options                     Helper options\r\n *\r\n * @param {string|string[]} [options.selected] Which key or array of keys that are currently selected?\r\n *\r\n * @param {boolean} [options.localize=false]   Pass each label through string localization?\r\n *\r\n * @param {string} [options.blank]             Add a blank option as the first option with this label\r\n *\r\n * @param {string} [options.nameAttr]          Look up a property in the choice object values to use as the option value\r\n *\r\n * @param {string} [options.labelAttr]         Look up a property in the choice object values to use as the option label\r\n *\r\n * @param {boolean} [options.inverted=false]   Use the choice object value as the option value, and the key as the label\r\n *                                             instead of vice-versa\r\n *\r\n * @returns {string} The <options> HTML element(s).\r\n *\r\n * @example <caption>The provided input data</caption>\r\n * let choices = {a: 'Choice A', b: 'Choice B'};\r\n * let value = 'a';\r\n *\r\n * @example <caption>The template HTML structure</caption>\r\n * <select name=\"importantChoice\">\r\n *   {@html selectOptions(choices { selected: value, localize: true })}\r\n * </select>\r\n *\r\n * @example <caption>The resulting HTML</caption>\r\n * <select name=\"importantChoice\">\r\n *   <option value=\"a\" selected>Choice A</option>\r\n *   <option value=\"b\">Choice B</option>\r\n * </select>\r\n *\r\n * @example <caption>Using inverted</caption>\r\n * let choices = {'Choice A': 'a', 'Choice B': 'b'};\r\n * let value = 'a';\r\n *\r\n * @example <caption>The template HTML structure</caption>\r\n * <select name=\"importantChoice\">\r\n *   {@html selectOptions(choices, { selected: value, inverted: true })}\r\n * </select>\r\n *\r\n * @example <caption>Using nameAttr and labelAttr with objects</caption>\r\n * let choices = {foo: {key: 'a', label: 'Choice A'}, bar: {key: 'b', label: 'Choice B'}};\r\n * let value = 'b';\r\n *\r\n * @example <caption>The template HTML structure</caption>\r\n * <select name=\"importantChoice\">\r\n *   {@html selectOptions(choices, { selected: value, nameAttr: 'key', labelAttr: 'label' })}\r\n * </select>\r\n *\r\n * @example <caption>Using nameAttr and labelAttr with arrays</caption>\r\n * let choices = [{key: 'a', label: 'Choice A'}, {key: 'b', label: 'Choice B'}];\r\n * let value = 'b';\r\n *\r\n * @example <caption>The template HTML structure</caption>\r\n * <select name=\"importantChoice\">\r\n *   {@html selectOptions(choices, { selected: value, nameAttr: 'key', labelAttr: 'label' })}\r\n * </select>\r\n */\r\nfunction selectOptions(choices, options)\r\n{\r\n   const localize = options['localize'] ?? false;\r\n   let selected = options['selected'] ?? null;\r\n   const blank = options['blank'] ?? null;\r\n   const nameAttr = options['nameAttr'];\r\n   const labelAttr = options['labelAttr'];\r\n   const inverted = !!options['inverted'];\r\n\r\n   selected = selected instanceof Array ? selected.map(String) : [String(selected)];\r\n\r\n   // Create an option\r\n   const option = (name, label) =>\r\n   {\r\n      if (localize) { label = game.i18n.localize(label); }\r\n      const isSelected = selected.includes(String(name));\r\n\r\n      html += `<option value=\"${name}\" ${isSelected ? \"selected\" : \"\"}>${label}</option>`;\r\n   };\r\n\r\n   // Create the options\r\n   let html = '';\r\n   if (blank !== null) { option('', blank); }\r\n\r\n   // Options as an Array\r\n   if (choices instanceof Array)\r\n   {\r\n      for (const choice of choices) { option(choice[nameAttr], choice[labelAttr]); }\r\n   }\r\n\r\n   // Choices as an Object\r\n   else\r\n   {\r\n      for (const choice of Object.entries(choices))\r\n      {\r\n         let [key, value] = inverted ? choice.reverse() : choice;\r\n         if (nameAttr) { key = value[nameAttr]; }\r\n         if (labelAttr) { value = value[labelAttr]; }\r\n         option(key, value);\r\n      }\r\n   }\r\n\r\n   return html;\r\n}\n\n/**\r\n * Localize a string including variable formatting for input arguments. Provide a string ID which defines the localized\r\n * template. Variables can be included in the template enclosed in braces and will be substituted using those named\r\n * keys.\r\n *\r\n * @param {string}   stringId - The string ID to translate.\r\n *\r\n * @param {object}   [data] - Provided input data.\r\n *\r\n * @returns {string} The translated and formatted string\r\n */\r\nfunction localize(stringId, data)\r\n{\r\n   const result = typeof data !== 'object' ? game.i18n.localize(stringId) : game.i18n.format(stringId, data);\r\n   return result !== void 0 ? result : '';\r\n}\n\nexport { localize, radioBoxes, selectOptions };\n//# sourceMappingURL=index.js.map\n","import { SvelteComponent, init, safe_not_equal, flush, append_styles, empty, insert, group_outros, transition_out, check_outros, transition_in, detach, create_component, mount_component, noop, destroy_component, create_slot, element, attr, listen, update_slot_base, get_all_dirty_from_scope, get_slot_changes, add_render_callback, create_in_transition, create_out_transition, HtmlTag, text, append, stop_propagation, prevent_default, action_destroyer, set_data, is_function, run_all, space, set_style, get_spread_update, get_spread_object, destroy_each, component_subscribe, update_keyed_each, destroy_block, binding_callbacks, assign, toggle_class, add_resize_listener, bind, add_flush_callback } from 'svelte/internal';\nimport { getContext, setContext } from 'svelte';\nimport { s_DEFAULT_TRANSITION, s_DEFAULT_TRANSITION_OPTIONS } from '@typhonjs-fvtt/runtime/svelte/transition';\nimport { writable } from 'svelte/store';\nimport { applyStyles, draggable, resizeObserver } from '@typhonjs-fvtt/runtime/svelte/action';\nimport { cubicOut } from 'svelte/easing';\nimport { localize } from '@typhonjs-fvtt/runtime/svelte/helper';\nimport { isSvelteComponent, isObject, parseSvelteConfig } from '@typhonjs-fvtt/runtime/svelte/util';\nimport { fade } from 'svelte/transition';\n\n/* src\\component\\core\\TJSContainer.svelte generated by Svelte v3.49.0 */\n\nfunction add_css$5(target) {\n\tappend_styles(target, \"svelte-1s361pr\", \"p.svelte-1s361pr{color:red;font-size:18px}\");\n}\n\nfunction get_each_context$2(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[2] = list[i];\n\treturn child_ctx;\n}\n\n// (12:15) \nfunction create_if_block_1$1(ctx) {\n\tlet p;\n\n\treturn {\n\t\tc() {\n\t\t\tp = element(\"p\");\n\t\t\tp.textContent = \"Container warning: No children.\";\n\t\t\tattr(p, \"class\", \"svelte-1s361pr\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, p, anchor);\n\t\t},\n\t\tp: noop,\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(p);\n\t\t}\n\t};\n}\n\n// (8:0) {#if Array.isArray(children)}\nfunction create_if_block$5(ctx) {\n\tlet each_1_anchor;\n\tlet current;\n\tlet each_value = /*children*/ ctx[1];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$2(get_each_context$2(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(target, anchor);\n\t\t\t}\n\n\t\t\tinsert(target, each_1_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*children*/ 2) {\n\t\t\t\teach_value = /*children*/ ctx[1];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$2(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$2(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tif (detaching) detach(each_1_anchor);\n\t\t}\n\t};\n}\n\n// (9:4) {#each children as child}\nfunction create_each_block$2(ctx) {\n\tlet switch_instance;\n\tlet switch_instance_anchor;\n\tlet current;\n\tconst switch_instance_spread_levels = [/*child*/ ctx[2].props];\n\tvar switch_value = /*child*/ ctx[2].class;\n\n\tfunction switch_props(ctx) {\n\t\tlet switch_instance_props = {};\n\n\t\tfor (let i = 0; i < switch_instance_spread_levels.length; i += 1) {\n\t\t\tswitch_instance_props = assign(switch_instance_props, switch_instance_spread_levels[i]);\n\t\t}\n\n\t\treturn { props: switch_instance_props };\n\t}\n\n\tif (switch_value) {\n\t\tswitch_instance = new switch_value(switch_props());\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tif (switch_instance) create_component(switch_instance.$$.fragment);\n\t\t\tswitch_instance_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (switch_instance) {\n\t\t\t\tmount_component(switch_instance, target, anchor);\n\t\t\t}\n\n\t\t\tinsert(target, switch_instance_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst switch_instance_changes = (dirty & /*children*/ 2)\n\t\t\t? get_spread_update(switch_instance_spread_levels, [get_spread_object(/*child*/ ctx[2].props)])\n\t\t\t: {};\n\n\t\t\tif (switch_value !== (switch_value = /*child*/ ctx[2].class)) {\n\t\t\t\tif (switch_instance) {\n\t\t\t\t\tgroup_outros();\n\t\t\t\t\tconst old_component = switch_instance;\n\n\t\t\t\t\ttransition_out(old_component.$$.fragment, 1, 0, () => {\n\t\t\t\t\t\tdestroy_component(old_component, 1);\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (switch_value) {\n\t\t\t\t\tswitch_instance = new switch_value(switch_props());\n\t\t\t\t\tcreate_component(switch_instance.$$.fragment);\n\t\t\t\t\ttransition_in(switch_instance.$$.fragment, 1);\n\t\t\t\t\tmount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);\n\t\t\t\t} else {\n\t\t\t\t\tswitch_instance = null;\n\t\t\t\t}\n\t\t\t} else if (switch_value) {\n\t\t\t\tswitch_instance.$set(switch_instance_changes);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\tif (switch_instance) transition_in(switch_instance.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tif (switch_instance) transition_out(switch_instance.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(switch_instance_anchor);\n\t\t\tif (switch_instance) destroy_component(switch_instance, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$a(ctx) {\n\tlet show_if;\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet if_block_anchor;\n\tlet current;\n\tconst if_block_creators = [create_if_block$5, create_if_block_1$1];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (dirty & /*children*/ 2) show_if = null;\n\t\tif (show_if == null) show_if = !!Array.isArray(/*children*/ ctx[1]);\n\t\tif (show_if) return 0;\n\t\tif (/*warn*/ ctx[0]) return 1;\n\t\treturn -1;\n\t}\n\n\tif (~(current_block_type_index = select_block_type(ctx, -1))) {\n\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].m(target, anchor);\n\t\t\t}\n\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx, dirty);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif (~current_block_type_index) {\n\t\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tgroup_outros();\n\n\t\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (~current_block_type_index) {\n\t\t\t\t\tif_block = if_blocks[current_block_type_index];\n\n\t\t\t\t\tif (!if_block) {\n\t\t\t\t\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\t\tif_block.c();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t\t}\n\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = null;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].d(detaching);\n\t\t\t}\n\n\t\t\tif (detaching) detach(if_block_anchor);\n\t\t}\n\t};\n}\n\nfunction instance$a($$self, $$props, $$invalidate) {\n\tlet { warn = false } = $$props;\n\tlet { children = void 0 } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('warn' in $$props) $$invalidate(0, warn = $$props.warn);\n\t\tif ('children' in $$props) $$invalidate(1, children = $$props.children);\n\t};\n\n\treturn [warn, children];\n}\n\nclass TJSContainer extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$a, create_fragment$a, safe_not_equal, { warn: 0, children: 1 }, add_css$5);\n\t}\n\n\tget warn() {\n\t\treturn this.$$.ctx[0];\n\t}\n\n\tset warn(warn) {\n\t\tthis.$$set({ warn });\n\t\tflush();\n\t}\n\n\tget children() {\n\t\treturn this.$$.ctx[1];\n\t}\n\n\tset children(children) {\n\t\tthis.$$set({ children });\n\t\tflush();\n\t}\n}\n\n/* src\\component\\core\\TJSComponentShell.svelte generated by Svelte v3.49.0 */\n\nfunction create_fragment$9(ctx) {\n\tlet tjscontainer;\n\tlet current;\n\n\ttjscontainer = new TJSContainer({\n\t\t\tprops: {\n\t\t\t\tchildren: /*allChildren*/ ctx[0],\n\t\t\t\twarn: true\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(tjscontainer.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(tjscontainer, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(tjscontainer.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(tjscontainer.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(tjscontainer, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$9($$self, $$props, $$invalidate) {\n\tlet { children = void 0 } = $$props;\n\tconst context = getContext('external');\n\n\t// This component can host multiple children defined via props or in the TyphonJS SvelteData configuration object\n\t// that are potentially mounted in the content area. If no children defined then this component mounts any slotted\n\t// child.\n\tconst allChildren = Array.isArray(children)\n\t? children\n\t: typeof context === 'object' ? context.children : void 0;\n\n\t$$self.$$set = $$props => {\n\t\tif ('children' in $$props) $$invalidate(1, children = $$props.children);\n\t};\n\n\treturn [allChildren, children];\n}\n\nclass TJSComponentShell extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$9, create_fragment$9, safe_not_equal, { children: 1 });\n\t}\n\n\tget children() {\n\t\treturn this.$$.ctx[1];\n\t}\n\n\tset children(children) {\n\t\tthis.$$set({ children });\n\t\tflush();\n\t}\n}\n\n/* src\\component\\core\\TJSGlassPane.svelte generated by Svelte v3.49.0 */\n\nfunction add_css$4(target) {\n\tappend_styles(target, \"svelte-71db55\", \".tjs-glass-pane.svelte-71db55{position:absolute;overflow:inherit}\");\n}\n\nfunction create_fragment$8(ctx) {\n\tlet div;\n\tlet div_intro;\n\tlet div_outro;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tconst default_slot_template = /*#slots*/ ctx[17].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[16], null);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tif (default_slot) default_slot.c();\n\t\t\tattr(div, \"id\", /*id*/ ctx[4]);\n\t\t\tattr(div, \"tabindex\", \"0\");\n\t\t\tattr(div, \"class\", \"tjs-glass-pane svelte-71db55\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(div, null);\n\t\t\t}\n\n\t\t\t/*div_binding*/ ctx[18](div);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(div, \"keydown\", /*swallow*/ ctx[6]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, [dirty]) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 65536)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[16],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[16])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[16], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*id*/ 16) {\n\t\t\t\tattr(div, \"id\", /*id*/ ctx[4]);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\n\t\t\tadd_render_callback(() => {\n\t\t\t\tif (div_outro) div_outro.end(1);\n\t\t\t\tdiv_intro = create_in_transition(div, /*inTransition*/ ctx[0], /*inTransitionOptions*/ ctx[2]);\n\t\t\t\tdiv_intro.start();\n\t\t\t});\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tif (div_intro) div_intro.invalidate();\n\t\t\tdiv_outro = create_out_transition(div, /*outTransition*/ ctx[1], /*outTransitionOptions*/ ctx[3]);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t\t/*div_binding*/ ctx[18](null);\n\t\t\tif (detaching && div_outro) div_outro.end();\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance$8($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\tlet { id = void 0 } = $$props;\n\tlet { zIndex = Number.MAX_SAFE_INTEGER } = $$props;\n\tlet { background = '#50505080' } = $$props;\n\tlet { captureInput = true } = $$props;\n\tlet { preventDefault = true } = $$props;\n\tlet { stopPropagation = true } = $$props;\n\tlet glassPane;\n\tlet { transition = void 0 } = $$props;\n\tlet { inTransition = s_DEFAULT_TRANSITION } = $$props;\n\tlet { outTransition = s_DEFAULT_TRANSITION } = $$props;\n\tlet { transitionOptions = void 0 } = $$props;\n\tlet { inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS } = $$props;\n\tlet { outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS } = $$props;\n\n\t// Tracks last transition state.\n\tlet oldTransition = void 0;\n\n\tlet oldTransitionOptions = void 0;\n\n\t// ---------------------------------------------------------------------------------------------------------------\n\tfunction swallow(event) {\n\t\tif (captureInput) {\n\t\t\tif (preventDefault) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tif (stopPropagation) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction div_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\tglassPane = $$value;\n\t\t\t((($$invalidate(5, glassPane), $$invalidate(9, captureInput)), $$invalidate(8, background)), $$invalidate(7, zIndex));\n\t\t});\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('id' in $$props) $$invalidate(4, id = $$props.id);\n\t\tif ('zIndex' in $$props) $$invalidate(7, zIndex = $$props.zIndex);\n\t\tif ('background' in $$props) $$invalidate(8, background = $$props.background);\n\t\tif ('captureInput' in $$props) $$invalidate(9, captureInput = $$props.captureInput);\n\t\tif ('preventDefault' in $$props) $$invalidate(10, preventDefault = $$props.preventDefault);\n\t\tif ('stopPropagation' in $$props) $$invalidate(11, stopPropagation = $$props.stopPropagation);\n\t\tif ('transition' in $$props) $$invalidate(12, transition = $$props.transition);\n\t\tif ('inTransition' in $$props) $$invalidate(0, inTransition = $$props.inTransition);\n\t\tif ('outTransition' in $$props) $$invalidate(1, outTransition = $$props.outTransition);\n\t\tif ('transitionOptions' in $$props) $$invalidate(13, transitionOptions = $$props.transitionOptions);\n\t\tif ('inTransitionOptions' in $$props) $$invalidate(2, inTransitionOptions = $$props.inTransitionOptions);\n\t\tif ('outTransitionOptions' in $$props) $$invalidate(3, outTransitionOptions = $$props.outTransitionOptions);\n\t\tif ('$$scope' in $$props) $$invalidate(16, $$scope = $$props.$$scope);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*glassPane*/ 32) {\n\t\t\tif (glassPane) {\n\t\t\t\t$$invalidate(5, glassPane.style.maxWidth = '100%', glassPane);\n\t\t\t\t$$invalidate(5, glassPane.style.maxHeight = '100%', glassPane);\n\t\t\t\t$$invalidate(5, glassPane.style.width = '100%', glassPane);\n\t\t\t\t$$invalidate(5, glassPane.style.height = '100%', glassPane);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*glassPane, captureInput*/ 544) {\n\t\t\tif (glassPane) {\n\t\t\t\tif (captureInput) {\n\t\t\t\t\tglassPane.focus();\n\t\t\t\t}\n\n\t\t\t\t$$invalidate(5, glassPane.style.pointerEvents = captureInput ? 'auto' : 'none', glassPane);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*glassPane, background*/ 288) {\n\t\t\tif (glassPane) {\n\t\t\t\t$$invalidate(5, glassPane.style.background = background, glassPane);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*glassPane, zIndex*/ 160) {\n\t\t\tif (glassPane) {\n\t\t\t\t$$invalidate(5, glassPane.style.zIndex = zIndex, glassPane);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*oldTransition, transition*/ 20480) {\n\t\t\t// Run this reactive block when the last transition state is not equal to the current state.\n\t\t\tif (oldTransition !== transition) {\n\t\t\t\t// If transition is defined and not the default transition then set it to both in and out transition otherwise\n\t\t\t\t// set the default transition to both in & out transitions.\n\t\t\t\tconst newTransition = s_DEFAULT_TRANSITION !== transition && typeof transition === 'function'\n\t\t\t\t? transition\n\t\t\t\t: s_DEFAULT_TRANSITION;\n\n\t\t\t\t$$invalidate(0, inTransition = newTransition);\n\t\t\t\t$$invalidate(1, outTransition = newTransition);\n\t\t\t\t$$invalidate(14, oldTransition = newTransition);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*oldTransitionOptions, transitionOptions*/ 40960) {\n\t\t\t// Run this reactive block when the last transition options state is not equal to the current options state.\n\t\t\tif (oldTransitionOptions !== transitionOptions) {\n\t\t\t\tconst newOptions = transitionOptions !== s_DEFAULT_TRANSITION_OPTIONS && typeof transitionOptions === 'object'\n\t\t\t\t? transitionOptions\n\t\t\t\t: s_DEFAULT_TRANSITION_OPTIONS;\n\n\t\t\t\t$$invalidate(2, inTransitionOptions = newOptions);\n\t\t\t\t$$invalidate(3, outTransitionOptions = newOptions);\n\t\t\t\t$$invalidate(15, oldTransitionOptions = newOptions);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*inTransition*/ 1) {\n\t\t\t// Handle cases if inTransition is unset; assign noop default transition function.\n\t\t\tif (typeof inTransition !== 'function') {\n\t\t\t\t$$invalidate(0, inTransition = s_DEFAULT_TRANSITION);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*outTransition*/ 2) {\n\t\t\t// Handle cases if outTransition is unset; assign noop default transition function.\n\t\t\tif (typeof outTransition !== 'function') {\n\t\t\t\t$$invalidate(1, outTransition = s_DEFAULT_TRANSITION);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*inTransitionOptions*/ 4) {\n\t\t\t// Handle cases if inTransitionOptions is unset; assign empty default transition options.\n\t\t\tif (typeof inTransitionOptions !== 'object') {\n\t\t\t\t$$invalidate(2, inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*outTransitionOptions*/ 8) {\n\t\t\t// Handle cases if outTransitionOptions is unset; assign empty default transition options.\n\t\t\tif (typeof outTransitionOptions !== 'object') {\n\t\t\t\t$$invalidate(3, outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\tinTransition,\n\t\toutTransition,\n\t\tinTransitionOptions,\n\t\toutTransitionOptions,\n\t\tid,\n\t\tglassPane,\n\t\tswallow,\n\t\tzIndex,\n\t\tbackground,\n\t\tcaptureInput,\n\t\tpreventDefault,\n\t\tstopPropagation,\n\t\ttransition,\n\t\ttransitionOptions,\n\t\toldTransition,\n\t\toldTransitionOptions,\n\t\t$$scope,\n\t\tslots,\n\t\tdiv_binding\n\t];\n}\n\nclass TJSGlassPane extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$8,\n\t\t\tcreate_fragment$8,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tid: 4,\n\t\t\t\tzIndex: 7,\n\t\t\t\tbackground: 8,\n\t\t\t\tcaptureInput: 9,\n\t\t\t\tpreventDefault: 10,\n\t\t\t\tstopPropagation: 11,\n\t\t\t\ttransition: 12,\n\t\t\t\tinTransition: 0,\n\t\t\t\toutTransition: 1,\n\t\t\t\ttransitionOptions: 13,\n\t\t\t\tinTransitionOptions: 2,\n\t\t\t\toutTransitionOptions: 3\n\t\t\t},\n\t\t\tadd_css$4\n\t\t);\n\t}\n\n\tget id() {\n\t\treturn this.$$.ctx[4];\n\t}\n\n\tset id(id) {\n\t\tthis.$$set({ id });\n\t\tflush();\n\t}\n\n\tget zIndex() {\n\t\treturn this.$$.ctx[7];\n\t}\n\n\tset zIndex(zIndex) {\n\t\tthis.$$set({ zIndex });\n\t\tflush();\n\t}\n\n\tget background() {\n\t\treturn this.$$.ctx[8];\n\t}\n\n\tset background(background) {\n\t\tthis.$$set({ background });\n\t\tflush();\n\t}\n\n\tget captureInput() {\n\t\treturn this.$$.ctx[9];\n\t}\n\n\tset captureInput(captureInput) {\n\t\tthis.$$set({ captureInput });\n\t\tflush();\n\t}\n\n\tget preventDefault() {\n\t\treturn this.$$.ctx[10];\n\t}\n\n\tset preventDefault(preventDefault) {\n\t\tthis.$$set({ preventDefault });\n\t\tflush();\n\t}\n\n\tget stopPropagation() {\n\t\treturn this.$$.ctx[11];\n\t}\n\n\tset stopPropagation(stopPropagation) {\n\t\tthis.$$set({ stopPropagation });\n\t\tflush();\n\t}\n\n\tget transition() {\n\t\treturn this.$$.ctx[12];\n\t}\n\n\tset transition(transition) {\n\t\tthis.$$set({ transition });\n\t\tflush();\n\t}\n\n\tget inTransition() {\n\t\treturn this.$$.ctx[0];\n\t}\n\n\tset inTransition(inTransition) {\n\t\tthis.$$set({ inTransition });\n\t\tflush();\n\t}\n\n\tget outTransition() {\n\t\treturn this.$$.ctx[1];\n\t}\n\n\tset outTransition(outTransition) {\n\t\tthis.$$set({ outTransition });\n\t\tflush();\n\t}\n\n\tget transitionOptions() {\n\t\treturn this.$$.ctx[13];\n\t}\n\n\tset transitionOptions(transitionOptions) {\n\t\tthis.$$set({ transitionOptions });\n\t\tflush();\n\t}\n\n\tget inTransitionOptions() {\n\t\treturn this.$$.ctx[2];\n\t}\n\n\tset inTransitionOptions(inTransitionOptions) {\n\t\tthis.$$set({ inTransitionOptions });\n\t\tflush();\n\t}\n\n\tget outTransitionOptions() {\n\t\treturn this.$$.ctx[3];\n\t}\n\n\tset outTransitionOptions(outTransitionOptions) {\n\t\tthis.$$set({ outTransitionOptions });\n\t\tflush();\n\t}\n}\n\n/* src\\component\\core\\application\\TJSHeaderButton.svelte generated by Svelte v3.49.0 */\n\nfunction create_fragment$7(ctx) {\n\tlet a;\n\tlet html_tag;\n\tlet t;\n\tlet a_class_value;\n\tlet applyStyles_action;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\ta = element(\"a\");\n\t\t\thtml_tag = new HtmlTag(false);\n\t\t\tt = text(/*label*/ ctx[2]);\n\t\t\thtml_tag.a = t;\n\t\t\tattr(a, \"class\", a_class_value = \"header-button \" + /*button*/ ctx[0].class);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, a, anchor);\n\t\t\thtml_tag.m(/*icon*/ ctx[1], a);\n\t\t\tappend(a, t);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(a, \"click\", stop_propagation(prevent_default(/*onClick*/ ctx[4])), true),\n\t\t\t\t\tlisten(a, \"pointerdown\", stop_propagation(prevent_default(pointerdown_handler)), true),\n\t\t\t\t\tlisten(a, \"mousedown\", stop_propagation(prevent_default(mousedown_handler)), true),\n\t\t\t\t\tlisten(a, \"dblclick\", stop_propagation(prevent_default(dblclick_handler)), true),\n\t\t\t\t\taction_destroyer(applyStyles_action = applyStyles.call(null, a, /*styles*/ ctx[3]))\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*icon*/ 2) html_tag.p(/*icon*/ ctx[1]);\n\t\t\tif (dirty & /*label*/ 4) set_data(t, /*label*/ ctx[2]);\n\n\t\t\tif (dirty & /*button*/ 1 && a_class_value !== (a_class_value = \"header-button \" + /*button*/ ctx[0].class)) {\n\t\t\t\tattr(a, \"class\", a_class_value);\n\t\t\t}\n\n\t\t\tif (applyStyles_action && is_function(applyStyles_action.update) && dirty & /*styles*/ 8) applyStyles_action.update.call(null, /*styles*/ ctx[3]);\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(a);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nconst s_REGEX_HTML$1 = /^\\s*<.*>$/;\nconst pointerdown_handler = () => null;\nconst mousedown_handler = () => null;\nconst dblclick_handler = () => null;\n\nfunction instance$7($$self, $$props, $$invalidate) {\n\tlet { button } = $$props;\n\tlet icon, label, title, styles;\n\n\tfunction onClick(event) {\n\t\t// Accept either callback or onclick as the function / data to invoke.\n\t\tconst invoke = button.callback ?? button.onclick;\n\n\t\tif (typeof invoke === 'function') {\n\t\t\tinvoke.call(button, event);\n\t\t\t$$invalidate(0, button); // This provides a reactive update if button data changes.\n\t\t}\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('button' in $$props) $$invalidate(0, button = $$props.button);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*button, title*/ 33) {\n\t\t\tif (button) {\n\t\t\t\t$$invalidate(5, title = typeof button.title === 'string'\n\t\t\t\t? localize(button.title)\n\t\t\t\t: '');\n\n\t\t\t\t// Handle icon and treat bare strings as the icon class; otherwise assume the icon is fully formed HTML.\n\t\t\t\t$$invalidate(1, icon = typeof button.icon !== 'string'\n\t\t\t\t? void 0\n\t\t\t\t: s_REGEX_HTML$1.test(button.icon)\n\t\t\t\t\t? button.icon\n\t\t\t\t\t: `<i class=\"${button.icon}\" title=\"${title}\"></i>`);\n\n\t\t\t\t$$invalidate(2, label = typeof button.label === 'string'\n\t\t\t\t? localize(button.label)\n\t\t\t\t: '');\n\n\t\t\t\t$$invalidate(3, styles = typeof button.styles === 'object'\n\t\t\t\t? button.styles\n\t\t\t\t: void 0);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [button, icon, label, styles, onClick, title];\n}\n\nclass TJSHeaderButton extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$7, create_fragment$7, safe_not_equal, { button: 0 });\n\t}\n\n\tget button() {\n\t\treturn this.$$.ctx[0];\n\t}\n\n\tset button(button) {\n\t\tthis.$$set({ button });\n\t\tflush();\n\t}\n}\n\n/* src\\component\\core\\application\\TJSApplicationHeader.svelte generated by Svelte v3.49.0 */\n\nfunction add_css$3(target) {\n\tappend_styles(target, \"svelte-3umz0z\", \".window-title.svelte-3umz0z{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}\");\n}\n\nfunction get_each_context$1(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[20] = list[i];\n\treturn child_ctx;\n}\n\n// (86:6) {#each buttons as button}\nfunction create_each_block$1(ctx) {\n\tlet switch_instance;\n\tlet switch_instance_anchor;\n\tlet current;\n\tconst switch_instance_spread_levels = [/*button*/ ctx[20].props];\n\tvar switch_value = /*button*/ ctx[20].class;\n\n\tfunction switch_props(ctx) {\n\t\tlet switch_instance_props = {};\n\n\t\tfor (let i = 0; i < switch_instance_spread_levels.length; i += 1) {\n\t\t\tswitch_instance_props = assign(switch_instance_props, switch_instance_spread_levels[i]);\n\t\t}\n\n\t\treturn { props: switch_instance_props };\n\t}\n\n\tif (switch_value) {\n\t\tswitch_instance = new switch_value(switch_props());\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tif (switch_instance) create_component(switch_instance.$$.fragment);\n\t\t\tswitch_instance_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (switch_instance) {\n\t\t\t\tmount_component(switch_instance, target, anchor);\n\t\t\t}\n\n\t\t\tinsert(target, switch_instance_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst switch_instance_changes = (dirty & /*buttons*/ 8)\n\t\t\t? get_spread_update(switch_instance_spread_levels, [get_spread_object(/*button*/ ctx[20].props)])\n\t\t\t: {};\n\n\t\t\tif (switch_value !== (switch_value = /*button*/ ctx[20].class)) {\n\t\t\t\tif (switch_instance) {\n\t\t\t\t\tgroup_outros();\n\t\t\t\t\tconst old_component = switch_instance;\n\n\t\t\t\t\ttransition_out(old_component.$$.fragment, 1, 0, () => {\n\t\t\t\t\t\tdestroy_component(old_component, 1);\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (switch_value) {\n\t\t\t\t\tswitch_instance = new switch_value(switch_props());\n\t\t\t\t\tcreate_component(switch_instance.$$.fragment);\n\t\t\t\t\ttransition_in(switch_instance.$$.fragment, 1);\n\t\t\t\t\tmount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);\n\t\t\t\t} else {\n\t\t\t\t\tswitch_instance = null;\n\t\t\t\t}\n\t\t\t} else if (switch_value) {\n\t\t\t\tswitch_instance.$set(switch_instance_changes);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\tif (switch_instance) transition_in(switch_instance.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tif (switch_instance) transition_out(switch_instance.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(switch_instance_anchor);\n\t\t\tif (switch_instance) destroy_component(switch_instance, detaching);\n\t\t}\n\t};\n}\n\n// (81:0) {#key draggable}\nfunction create_key_block(ctx) {\n\tlet header;\n\tlet h4;\n\tlet t0_value = localize(/*$storeTitle*/ ctx[5]) + \"\";\n\tlet t0;\n\tlet t1;\n\tlet draggable_action;\n\tlet minimizable_action;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tlet each_value = /*buttons*/ ctx[3];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\theader = element(\"header\");\n\t\t\th4 = element(\"h4\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(h4, \"class\", \"window-title svelte-3umz0z\");\n\t\t\tset_style(h4, \"display\", /*displayHeaderTitle*/ ctx[2], false);\n\t\t\tattr(header, \"class\", \"window-header flexrow\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, header, anchor);\n\t\t\tappend(header, h4);\n\t\t\tappend(h4, t0);\n\t\t\tappend(header, t1);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(header, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\taction_destroyer(draggable_action = /*draggable*/ ctx[0].call(null, header, /*dragOptions*/ ctx[1])),\n\t\t\t\t\taction_destroyer(minimizable_action = /*minimizable*/ ctx[12].call(null, header, /*$storeMinimizable*/ ctx[4]))\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif ((!current || dirty & /*$storeTitle*/ 32) && t0_value !== (t0_value = localize(/*$storeTitle*/ ctx[5]) + \"\")) set_data(t0, t0_value);\n\n\t\t\tif (dirty & /*displayHeaderTitle*/ 4) {\n\t\t\t\tset_style(h4, \"display\", /*displayHeaderTitle*/ ctx[2], false);\n\t\t\t}\n\n\t\t\tif (dirty & /*buttons*/ 8) {\n\t\t\t\teach_value = /*buttons*/ ctx[3];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$1(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$1(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(header, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (draggable_action && is_function(draggable_action.update) && dirty & /*dragOptions*/ 2) draggable_action.update.call(null, /*dragOptions*/ ctx[1]);\n\t\t\tif (minimizable_action && is_function(minimizable_action.update) && dirty & /*$storeMinimizable*/ 16) minimizable_action.update.call(null, /*$storeMinimizable*/ ctx[4]);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(header);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction create_fragment$6(ctx) {\n\tlet previous_key = /*draggable*/ ctx[0];\n\tlet key_block_anchor;\n\tlet current;\n\tlet key_block = create_key_block(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tkey_block.c();\n\t\t\tkey_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tkey_block.m(target, anchor);\n\t\t\tinsert(target, key_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*draggable*/ 1 && safe_not_equal(previous_key, previous_key = /*draggable*/ ctx[0])) {\n\t\t\t\tgroup_outros();\n\t\t\t\ttransition_out(key_block, 1, 1, noop);\n\t\t\t\tcheck_outros();\n\t\t\t\tkey_block = create_key_block(ctx);\n\t\t\t\tkey_block.c();\n\t\t\t\ttransition_in(key_block, 1);\n\t\t\t\tkey_block.m(key_block_anchor.parentNode, key_block_anchor);\n\t\t\t} else {\n\t\t\t\tkey_block.p(ctx, dirty);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(key_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(key_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(key_block_anchor);\n\t\t\tkey_block.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance$6($$self, $$props, $$invalidate) {\n\tlet $storeHeaderButtons;\n\tlet $storeMinimized;\n\tlet $storeHeaderNoTitleMinimized;\n\tlet $storeDraggable;\n\tlet $storeMinimizable;\n\tlet $storeTitle;\n\tlet { draggable: draggable$1 } = $$props;\n\tlet { draggableOptions } = $$props;\n\tconst application = getContext('external').application;\n\tconst storeTitle = application.reactive.storeAppOptions.title;\n\tcomponent_subscribe($$self, storeTitle, value => $$invalidate(5, $storeTitle = value));\n\tconst storeDraggable = application.reactive.storeAppOptions.draggable;\n\tcomponent_subscribe($$self, storeDraggable, value => $$invalidate(17, $storeDraggable = value));\n\tconst storeDragging = application.reactive.storeUIState.dragging;\n\tconst storeHeaderButtons = application.reactive.storeUIState.headerButtons;\n\tcomponent_subscribe($$self, storeHeaderButtons, value => $$invalidate(14, $storeHeaderButtons = value));\n\tconst storeHeaderNoTitleMinimized = application.reactive.storeAppOptions.headerNoTitleMinimized;\n\tcomponent_subscribe($$self, storeHeaderNoTitleMinimized, value => $$invalidate(16, $storeHeaderNoTitleMinimized = value));\n\tconst storeMinimizable = application.reactive.storeAppOptions.minimizable;\n\tcomponent_subscribe($$self, storeMinimizable, value => $$invalidate(4, $storeMinimizable = value));\n\tconst storeMinimized = application.reactive.storeUIState.minimized;\n\tcomponent_subscribe($$self, storeMinimized, value => $$invalidate(15, $storeMinimized = value));\n\tlet dragOptions;\n\tlet displayHeaderTitle;\n\tlet buttons;\n\n\tfunction minimizable(node, booleanStore) {\n\t\tconst callback = application._onToggleMinimize.bind(application);\n\n\t\tfunction activateListeners() {\n\t\t\tnode.addEventListener('dblclick', callback);\n\t\t}\n\n\t\tfunction removeListeners() {\n\t\t\tnode.removeEventListener('dblclick', callback);\n\t\t}\n\n\t\tif (booleanStore) {\n\t\t\tactivateListeners();\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: booleanStore => // eslint-disable-line no-shadow\n\t\t\t{\n\t\t\t\tif (booleanStore) {\n\t\t\t\t\tactivateListeners();\n\t\t\t\t} else {\n\t\t\t\t\tremoveListeners();\n\t\t\t\t}\n\t\t\t},\n\t\t\tdestroy: () => removeListeners()\n\t\t};\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('draggable' in $$props) $$invalidate(0, draggable$1 = $$props.draggable);\n\t\tif ('draggableOptions' in $$props) $$invalidate(13, draggableOptions = $$props.draggableOptions);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*draggable*/ 1) {\n\t\t\t$$invalidate(0, draggable$1 = typeof draggable$1 === 'function'\n\t\t\t? draggable$1\n\t\t\t: draggable);\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*draggableOptions, $storeDraggable*/ 139264) {\n\t\t\t// Combines external options with defaults for TJSApplicationHeader.\n\t\t\t// $: dragOptions = Object.assign({}, typeof draggableOptions === 'object' ? draggableOptions : {},\n\t\t\t//  { position: application.position, active: $storeDraggable, storeDragging });\n\t\t\t// Combines external options with defaults for TJSApplicationHeader. By default, easing is turned on w/ duration of\n\t\t\t// 0.1 and cubicOut, but can be overridden by any provided `draggableOptions`. `position`, `active`, and\n\t\t\t// `storeDragging` are always overridden by application position / stores.\n\t\t\t$$invalidate(1, dragOptions = Object.assign(\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tease: true,\n\t\t\t\t\teaseOptions: { duration: 0.1, ease: cubicOut }\n\t\t\t\t},\n\t\t\t\ttypeof draggableOptions === 'object'\n\t\t\t\t? draggableOptions\n\t\t\t\t: {},\n\t\t\t\t{\n\t\t\t\t\tposition: application.position,\n\t\t\t\t\tactive: $storeDraggable,\n\t\t\t\t\tstoreDragging\n\t\t\t\t}\n\t\t\t));\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*$storeHeaderNoTitleMinimized, $storeMinimized*/ 98304) {\n\t\t\t$$invalidate(2, displayHeaderTitle = $storeHeaderNoTitleMinimized && $storeMinimized\n\t\t\t? 'none'\n\t\t\t: null);\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*$storeHeaderButtons*/ 16384) {\n\t\t\t{\n\t\t\t\t$$invalidate(3, buttons = $storeHeaderButtons.reduce(\n\t\t\t\t\t(array, button) => {\n\t\t\t\t\t\t// If the button is a SvelteComponent set it as the class otherwise use `TJSHeaderButton` w/ button as props.\n\t\t\t\t\t\tarray.push(isSvelteComponent(button)\n\t\t\t\t\t\t? { class: button, props: {} }\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tclass: TJSHeaderButton,\n\t\t\t\t\t\t\t\tprops: { button }\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn array;\n\t\t\t\t\t},\n\t\t\t\t\t[]\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\tdraggable$1,\n\t\tdragOptions,\n\t\tdisplayHeaderTitle,\n\t\tbuttons,\n\t\t$storeMinimizable,\n\t\t$storeTitle,\n\t\tstoreTitle,\n\t\tstoreDraggable,\n\t\tstoreHeaderButtons,\n\t\tstoreHeaderNoTitleMinimized,\n\t\tstoreMinimizable,\n\t\tstoreMinimized,\n\t\tminimizable,\n\t\tdraggableOptions,\n\t\t$storeHeaderButtons,\n\t\t$storeMinimized,\n\t\t$storeHeaderNoTitleMinimized,\n\t\t$storeDraggable\n\t];\n}\n\nclass TJSApplicationHeader extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$6, create_fragment$6, safe_not_equal, { draggable: 0, draggableOptions: 13 }, add_css$3);\n\t}\n}\n\n/* src\\component\\core\\application\\ResizableHandle.svelte generated by Svelte v3.49.0 */\n\nfunction create_fragment$5(ctx) {\n\tlet div;\n\tlet resizable_action;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tdiv.innerHTML = `<i class=\"fas fa-arrows-alt-h\"></i>`;\n\t\t\tattr(div, \"class\", \"window-resizable-handle\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\t/*div_binding*/ ctx[10](div);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = action_destroyer(resizable_action = /*resizable*/ ctx[6].call(null, div, {\n\t\t\t\t\tactive: /*$storeResizable*/ ctx[1],\n\t\t\t\t\tstoreResizing: /*storeResizing*/ ctx[5]\n\t\t\t\t}));\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (resizable_action && is_function(resizable_action.update) && dirty & /*$storeResizable*/ 2) resizable_action.update.call(null, {\n\t\t\t\tactive: /*$storeResizable*/ ctx[1],\n\t\t\t\tstoreResizing: /*storeResizing*/ ctx[5]\n\t\t\t});\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\t/*div_binding*/ ctx[10](null);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance$5($$self, $$props, $$invalidate) {\n\tlet $storeElementRoot;\n\tlet $storeMinimized;\n\tlet $storeResizable;\n\tlet { isResizable = false } = $$props;\n\tconst application = getContext('external').application;\n\n\t// Allows retrieval of the element root at runtime.\n\tconst storeElementRoot = getContext('storeElementRoot');\n\n\tcomponent_subscribe($$self, storeElementRoot, value => $$invalidate(8, $storeElementRoot = value));\n\tconst storeResizable = application.reactive.storeAppOptions.resizable;\n\tcomponent_subscribe($$self, storeResizable, value => $$invalidate(1, $storeResizable = value));\n\tconst storeMinimized = application.reactive.storeUIState.minimized;\n\tcomponent_subscribe($$self, storeMinimized, value => $$invalidate(9, $storeMinimized = value));\n\tconst storeResizing = application.reactive.storeUIState.resizing;\n\tlet elementResize;\n\n\t/**\r\n * Provides an action to handle resizing the application shell based on the resizable app option.\r\n *\r\n * @param {HTMLElement}       node - The node associated with the action.\r\n *\r\n * @param {object}            [opts] - Optional parameters.\r\n *\r\n * @param {boolean}           [opts.active=true] - A boolean value; attached to a readable store.\r\n *\r\n * @param {Writable<boolean>} [opts.storeResizing] - A writable store that tracks \"resizing\" state.\r\n *\r\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\r\n */\n\tfunction resizable(node, { active = true, storeResizing = void 0 } = {}) {\n\t\t/**\r\n * Duplicate the app / Positionable starting position to track differences.\r\n *\r\n * @type {object}\r\n */\n\t\tlet position = null;\n\n\t\t/**\r\n * Stores the initial X / Y on drag down.\r\n *\r\n * @type {object}\r\n */\n\t\tlet initialPosition = {};\n\n\t\t/**\r\n * Stores the current resizing state and gates the move pointer as the resizing store is not\r\n * set until the first pointer move.\r\n *\r\n * @type {boolean}\r\n */\n\t\tlet resizing = false;\n\n\t\t/**\r\n * Remember event handlers associated with this action so they may be later unregistered.\r\n *\r\n * @type {Object}\r\n */\n\t\tconst handlers = {\n\t\t\tresizeDown: ['pointerdown', e => onResizePointerDown(e), false],\n\t\t\tresizeMove: ['pointermove', e => onResizePointerMove(e), false],\n\t\t\tresizeUp: ['pointerup', e => onResizePointerUp(e), false]\n\t\t};\n\n\t\t/**\r\n * Activates listeners.\r\n */\n\t\tfunction activateListeners() {\n\t\t\t// Resize handlers\n\t\t\tnode.addEventListener(...handlers.resizeDown);\n\n\t\t\t$$invalidate(7, isResizable = true);\n\t\t\tnode.style.display = 'block';\n\t\t}\n\n\t\t/**\r\n * Removes listeners.\r\n */\n\t\tfunction removeListeners() {\n\t\t\tif (typeof storeResizing?.set === 'function') {\n\t\t\t\tstoreResizing.set(false);\n\t\t\t}\n\n\t\t\t// Resize handlers\n\t\t\tnode.removeEventListener(...handlers.resizeDown);\n\n\t\t\tnode.removeEventListener(...handlers.resizeMove);\n\t\t\tnode.removeEventListener(...handlers.resizeUp);\n\t\t\tnode.style.display = 'none';\n\t\t\t$$invalidate(7, isResizable = false);\n\t\t}\n\n\t\t// On mount if resizable is true then activate listeners otherwise set element display to `none`.\n\t\tif (active) {\n\t\t\tactivateListeners();\n\t\t} else {\n\t\t\tnode.style.display = 'none';\n\t\t}\n\n\t\t/**\r\n * Handle the initial pointer down that activates resizing capture.\r\n */\n\t\tfunction onResizePointerDown(event) {\n\t\t\tevent.preventDefault();\n\t\t\tresizing = false;\n\n\t\t\t// Record initial position\n\t\t\tposition = application.position.get();\n\n\t\t\tif (position.height === 'auto') {\n\t\t\t\tposition.height = $storeElementRoot.clientHeight;\n\t\t\t}\n\n\t\t\tif (position.width === 'auto') {\n\t\t\t\tposition.width = $storeElementRoot.clientWidth;\n\t\t\t}\n\n\t\t\tinitialPosition = { x: event.clientX, y: event.clientY };\n\n\t\t\t// Add temporary handlers\n\t\t\tnode.addEventListener(...handlers.resizeMove);\n\n\t\t\tnode.addEventListener(...handlers.resizeUp);\n\t\t\tnode.setPointerCapture(event.pointerId);\n\t\t}\n\n\t\t/**\r\n * Sets the width / height of the positionable application.\r\n */\n\t\tfunction onResizePointerMove(event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tif (!resizing && typeof storeResizing?.set === 'function') {\n\t\t\t\tresizing = true;\n\t\t\t\tstoreResizing.set(true);\n\t\t\t}\n\n\t\t\tapplication.position.set({\n\t\t\t\twidth: position.width + (event.clientX - initialPosition.x),\n\t\t\t\theight: position.height + (event.clientY - initialPosition.y)\n\t\t\t});\n\t\t}\n\n\t\t/**\r\n * Conclude the dragging behavior when the pointer is released setting the final position and\r\n * removing listeners.\r\n */\n\t\tfunction onResizePointerUp(event) {\n\t\t\tresizing = false;\n\n\t\t\tif (typeof storeResizing?.set === 'function') {\n\t\t\t\tstoreResizing.set(false);\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\t\t\tnode.removeEventListener(...handlers.resizeMove);\n\t\t\tnode.removeEventListener(...handlers.resizeUp);\n\t\t\tapplication._onResize(event);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: ({ active }) => // eslint-disable-line no-shadow\n\t\t\t{\n\t\t\t\tif (active) {\n\t\t\t\t\tactivateListeners();\n\t\t\t\t} else {\n\t\t\t\t\tremoveListeners();\n\t\t\t\t}\n\t\t\t},\n\t\t\tdestroy: () => removeListeners()\n\t\t};\n\t}\n\n\tfunction div_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\telementResize = $$value;\n\t\t\t((($$invalidate(0, elementResize), $$invalidate(7, isResizable)), $$invalidate(9, $storeMinimized)), $$invalidate(8, $storeElementRoot));\n\t\t});\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('isResizable' in $$props) $$invalidate(7, isResizable = $$props.isResizable);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*elementResize, isResizable, $storeMinimized, $storeElementRoot*/ 897) {\n\t\t\tif (elementResize) {\n\t\t\t\t// Instead of creating a derived store it is easier to use isResizable and the minimized store below.\n\t\t\t\t$$invalidate(0, elementResize.style.display = isResizable && !$storeMinimized ? 'block' : 'none', elementResize);\n\n\t\t\t\t// Add / remove `resizable` class from element root.\n\t\t\t\tconst elementRoot = $storeElementRoot;\n\n\t\t\t\tif (elementRoot) {\n\t\t\t\t\telementRoot.classList[isResizable ? 'add' : 'remove']('resizable');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\telementResize,\n\t\t$storeResizable,\n\t\tstoreElementRoot,\n\t\tstoreResizable,\n\t\tstoreMinimized,\n\t\tstoreResizing,\n\t\tresizable,\n\t\tisResizable,\n\t\t$storeElementRoot,\n\t\t$storeMinimized,\n\t\tdiv_binding\n\t];\n}\n\nclass ResizableHandle extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$5, create_fragment$5, safe_not_equal, { isResizable: 7 });\n\t}\n}\n\n/* src\\component\\core\\application\\ApplicationShell.svelte generated by Svelte v3.49.0 */\n\nfunction add_css$2(target) {\n\tappend_styles(target, \"svelte-are4no\", \".window-app.svelte-are4no.svelte-are4no.svelte-are4no{overflow:inherit}.window-app.svelte-are4no .window-content.svelte-are4no>.svelte-are4no{flex:none}\");\n}\n\n// (226:6) {:else}\nfunction create_else_block$3(ctx) {\n\tlet current;\n\tconst default_slot_template = /*#slots*/ ctx[27].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[26], null);\n\n\treturn {\n\t\tc() {\n\t\t\tif (default_slot) default_slot.c();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(target, anchor);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 67108864)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[26],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[26])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[26], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t}\n\t};\n}\n\n// (224:6) {#if Array.isArray(allChildren)}\nfunction create_if_block$4(ctx) {\n\tlet tjscontainer;\n\tlet current;\n\n\ttjscontainer = new TJSContainer({\n\t\t\tprops: { children: /*allChildren*/ ctx[14] }\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(tjscontainer.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(tjscontainer, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(tjscontainer.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(tjscontainer.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(tjscontainer, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$4(ctx) {\n\tlet div;\n\tlet tjsapplicationheader;\n\tlet t0;\n\tlet section;\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet applyStyles_action;\n\tlet t1;\n\tlet resizablehandle;\n\tlet div_id_value;\n\tlet div_class_value;\n\tlet div_data_appid_value;\n\tlet applyStyles_action_1;\n\tlet div_intro;\n\tlet div_outro;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\n\ttjsapplicationheader = new TJSApplicationHeader({\n\t\t\tprops: {\n\t\t\t\tdraggable: /*draggable*/ ctx[6],\n\t\t\t\tdraggableOptions: /*draggableOptions*/ ctx[7]\n\t\t\t}\n\t\t});\n\n\tconst if_block_creators = [create_if_block$4, create_else_block$3];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (Array.isArray(/*allChildren*/ ctx[14])) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\tresizablehandle = new ResizableHandle({});\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(tjsapplicationheader.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tsection = element(\"section\");\n\t\t\tif_block.c();\n\t\t\tt1 = space();\n\t\t\tcreate_component(resizablehandle.$$.fragment);\n\t\t\tattr(section, \"class\", \"window-content svelte-are4no\");\n\t\t\tattr(div, \"id\", div_id_value = /*application*/ ctx[10].id);\n\t\t\tattr(div, \"class\", div_class_value = \"app window-app \" + /*application*/ ctx[10].options.classes.join(' ') + \" svelte-are4no\");\n\t\t\tattr(div, \"data-appid\", div_data_appid_value = /*application*/ ctx[10].appId);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(tjsapplicationheader, div, null);\n\t\t\tappend(div, t0);\n\t\t\tappend(div, section);\n\t\t\tif_blocks[current_block_type_index].m(section, null);\n\t\t\t/*section_binding*/ ctx[28](section);\n\t\t\tappend(div, t1);\n\t\t\tmount_component(resizablehandle, div, null);\n\t\t\t/*div_binding*/ ctx[29](div);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\taction_destroyer(applyStyles_action = applyStyles.call(null, section, /*stylesContent*/ ctx[9])),\n\t\t\t\t\taction_destroyer(/*contentResizeObserver*/ ctx[12].call(null, section, /*resizeObservedContent*/ ctx[15])),\n\t\t\t\t\tlisten(div, \"pointerdown\", /*bringToTop*/ ctx[13], true),\n\t\t\t\t\taction_destroyer(applyStyles_action_1 = applyStyles.call(null, div, /*stylesApp*/ ctx[8])),\n\t\t\t\t\taction_destroyer(/*appResizeObserver*/ ctx[11].call(null, div, /*resizeObservedApp*/ ctx[16]))\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, [dirty]) {\n\t\t\tctx = new_ctx;\n\t\t\tconst tjsapplicationheader_changes = {};\n\t\t\tif (dirty & /*draggable*/ 64) tjsapplicationheader_changes.draggable = /*draggable*/ ctx[6];\n\t\t\tif (dirty & /*draggableOptions*/ 128) tjsapplicationheader_changes.draggableOptions = /*draggableOptions*/ ctx[7];\n\t\t\ttjsapplicationheader.$set(tjsapplicationheader_changes);\n\t\t\tif_block.p(ctx, dirty);\n\t\t\tif (applyStyles_action && is_function(applyStyles_action.update) && dirty & /*stylesContent*/ 512) applyStyles_action.update.call(null, /*stylesContent*/ ctx[9]);\n\n\t\t\tif (!current || dirty & /*application*/ 1024 && div_id_value !== (div_id_value = /*application*/ ctx[10].id)) {\n\t\t\t\tattr(div, \"id\", div_id_value);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*application*/ 1024 && div_class_value !== (div_class_value = \"app window-app \" + /*application*/ ctx[10].options.classes.join(' ') + \" svelte-are4no\")) {\n\t\t\t\tattr(div, \"class\", div_class_value);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*application*/ 1024 && div_data_appid_value !== (div_data_appid_value = /*application*/ ctx[10].appId)) {\n\t\t\t\tattr(div, \"data-appid\", div_data_appid_value);\n\t\t\t}\n\n\t\t\tif (applyStyles_action_1 && is_function(applyStyles_action_1.update) && dirty & /*stylesApp*/ 256) applyStyles_action_1.update.call(null, /*stylesApp*/ ctx[8]);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(tjsapplicationheader.$$.fragment, local);\n\t\t\ttransition_in(if_block);\n\t\t\ttransition_in(resizablehandle.$$.fragment, local);\n\n\t\t\tadd_render_callback(() => {\n\t\t\t\tif (div_outro) div_outro.end(1);\n\t\t\t\tdiv_intro = create_in_transition(div, /*inTransition*/ ctx[2], /*inTransitionOptions*/ ctx[4]);\n\t\t\t\tdiv_intro.start();\n\t\t\t});\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(tjsapplicationheader.$$.fragment, local);\n\t\t\ttransition_out(if_block);\n\t\t\ttransition_out(resizablehandle.$$.fragment, local);\n\t\t\tif (div_intro) div_intro.invalidate();\n\t\t\tdiv_outro = create_out_transition(div, /*outTransition*/ ctx[3], /*outTransitionOptions*/ ctx[5]);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_component(tjsapplicationheader);\n\t\t\tif_blocks[current_block_type_index].d();\n\t\t\t/*section_binding*/ ctx[28](null);\n\t\t\tdestroy_component(resizablehandle);\n\t\t\t/*div_binding*/ ctx[29](null);\n\t\t\tif (detaching && div_outro) div_outro.end();\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction instance$4($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\tlet { elementContent } = $$props;\n\tlet { elementRoot } = $$props;\n\tlet { draggable } = $$props;\n\tlet { draggableOptions } = $$props;\n\tlet { children = void 0 } = $$props;\n\tlet { stylesApp } = $$props;\n\tlet { stylesContent } = $$props;\n\tlet { appOffsetHeight = false } = $$props;\n\tlet { appOffsetWidth = false } = $$props;\n\n\t// Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n\tconst appResizeObserver = !!appOffsetHeight || !!appOffsetWidth\n\t? resizeObserver\n\t: () => null;\n\n\tlet { contentOffsetHeight = false } = $$props;\n\tlet { contentOffsetWidth = false } = $$props;\n\n\t// Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n\tconst contentResizeObserver = !!contentOffsetHeight || !!contentOffsetWidth\n\t? resizeObserver\n\t: () => null;\n\n\t// If the application is a popOut application then when clicked bring to top. Bound to on pointerdown.\n\tconst bringToTop = event => {\n\t\tif (typeof application.options.popOut === 'boolean' && application.options.popOut) {\n\t\t\tif (application !== ui?.activeWindow) {\n\t\t\t\tapplication.bringToTop.call(application);\n\t\t\t}\n\n\t\t\t// If the activeElement is not `document.body` and the event target isn't the activeElement then blur the\n\t\t\t// current active element and make `document.body` focused. This allows <esc> key to close all open apps /\n\t\t\t// windows.\n\t\t\tif (document.activeElement !== document.body && event.target !== document.activeElement) {\n\t\t\t\t// Blur current active element.\n\t\t\t\tif (document.activeElement instanceof HTMLElement) {\n\t\t\t\t\tdocument.activeElement.blur();\n\t\t\t\t}\n\n\t\t\t\t// Make document body focused.\n\t\t\t\tdocument.body.focus();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Use a writable store to make `elementContent` and `elementRoot` accessible. A store is used in the case when\n\t// One root component with an `elementRoot` is replaced with another. Due to timing issues and the onDestroy / outro\n\t// transitions either of these may be set to null. I will investigate more and file a bug against Svelte.\n\tif (!getContext('storeElementContent')) {\n\t\tsetContext('storeElementContent', writable(elementContent));\n\t}\n\n\tif (!getContext('storeElementRoot')) {\n\t\tsetContext('storeElementRoot', writable(elementRoot));\n\t}\n\n\tconst context = getContext('external');\n\n\t// Store Foundry Application reference.\n\tconst application = context.application;\n\n\t// This component can host multiple children defined via props or in the TyphonJS SvelteData configuration object\n\t// that are potentially mounted in the content area. If no children defined then this component mounts any slotted\n\t// child.\n\tconst allChildren = Array.isArray(children)\n\t? children\n\t: typeof context === 'object' ? context.children : void 0;\n\n\tlet { transition = void 0 } = $$props;\n\tlet { inTransition = s_DEFAULT_TRANSITION } = $$props;\n\tlet { outTransition = s_DEFAULT_TRANSITION } = $$props;\n\tlet { transitionOptions = void 0 } = $$props;\n\tlet { inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS } = $$props;\n\tlet { outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS } = $$props;\n\n\t// Tracks last transition state.\n\tlet oldTransition = void 0;\n\n\tlet oldTransitionOptions = void 0;\n\n\t// ---------------------------------------------------------------------------------------------------------------\n\t/**\r\n * Callback for content resizeObserver action. This is enabled when contentOffsetHeight or contentOffsetWidth is\r\n * bound.\r\n *\r\n * @param {number}   offsetWidth - Observed offsetWidth.\r\n *\r\n * @param {number}   offsetHeight - Observed offsetHeight\r\n */\n\tfunction resizeObservedContent(offsetWidth, offsetHeight) {\n\t\t$$invalidate(20, contentOffsetWidth = offsetWidth);\n\t\t$$invalidate(19, contentOffsetHeight = offsetHeight);\n\t}\n\n\t/**\r\n * Callback for app resizeObserver action. This is enabled when appOffsetHeight or appOffsetWidth is\r\n * bound. Additionally, the Application position resizeObserved store is updated.\r\n *\r\n * @param {number}   contentWidth - Observed contentWidth.\r\n * @param {number}   contentHeight - Observed contentHeight\r\n * @param {number}   offsetWidth - Observed offsetWidth.\r\n * @param {number}   offsetHeight - Observed offsetHeight\r\n */\n\tfunction resizeObservedApp(offsetWidth, offsetHeight, contentWidth, contentHeight) {\n\t\tapplication.position.stores.resizeObserved.update(object => {\n\t\t\tobject.contentWidth = contentWidth;\n\t\t\tobject.contentHeight = contentHeight;\n\t\t\tobject.offsetWidth = offsetWidth;\n\t\t\tobject.offsetHeight = offsetHeight;\n\t\t\treturn object;\n\t\t});\n\n\t\t$$invalidate(17, appOffsetHeight = offsetHeight);\n\t\t$$invalidate(18, appOffsetWidth = offsetWidth);\n\t}\n\n\tfunction section_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\telementContent = $$value;\n\t\t\t$$invalidate(0, elementContent);\n\t\t});\n\t}\n\n\tfunction div_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\telementRoot = $$value;\n\t\t\t$$invalidate(1, elementRoot);\n\t\t});\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('elementContent' in $$props) $$invalidate(0, elementContent = $$props.elementContent);\n\t\tif ('elementRoot' in $$props) $$invalidate(1, elementRoot = $$props.elementRoot);\n\t\tif ('draggable' in $$props) $$invalidate(6, draggable = $$props.draggable);\n\t\tif ('draggableOptions' in $$props) $$invalidate(7, draggableOptions = $$props.draggableOptions);\n\t\tif ('children' in $$props) $$invalidate(21, children = $$props.children);\n\t\tif ('stylesApp' in $$props) $$invalidate(8, stylesApp = $$props.stylesApp);\n\t\tif ('stylesContent' in $$props) $$invalidate(9, stylesContent = $$props.stylesContent);\n\t\tif ('appOffsetHeight' in $$props) $$invalidate(17, appOffsetHeight = $$props.appOffsetHeight);\n\t\tif ('appOffsetWidth' in $$props) $$invalidate(18, appOffsetWidth = $$props.appOffsetWidth);\n\t\tif ('contentOffsetHeight' in $$props) $$invalidate(19, contentOffsetHeight = $$props.contentOffsetHeight);\n\t\tif ('contentOffsetWidth' in $$props) $$invalidate(20, contentOffsetWidth = $$props.contentOffsetWidth);\n\t\tif ('transition' in $$props) $$invalidate(22, transition = $$props.transition);\n\t\tif ('inTransition' in $$props) $$invalidate(2, inTransition = $$props.inTransition);\n\t\tif ('outTransition' in $$props) $$invalidate(3, outTransition = $$props.outTransition);\n\t\tif ('transitionOptions' in $$props) $$invalidate(23, transitionOptions = $$props.transitionOptions);\n\t\tif ('inTransitionOptions' in $$props) $$invalidate(4, inTransitionOptions = $$props.inTransitionOptions);\n\t\tif ('outTransitionOptions' in $$props) $$invalidate(5, outTransitionOptions = $$props.outTransitionOptions);\n\t\tif ('$$scope' in $$props) $$invalidate(26, $$scope = $$props.$$scope);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*elementContent*/ 1) {\n\t\t\t// Only update the `elementContent` store if the new `elementContent` is not null or undefined.\n\t\t\tif (elementContent !== void 0 && elementContent !== null) {\n\t\t\t\tgetContext('storeElementContent').set(elementContent);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*elementRoot*/ 2) {\n\t\t\t// Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\n\t\t\tif (elementRoot !== void 0 && elementRoot !== null) {\n\t\t\t\tgetContext('storeElementRoot').set(elementRoot);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*oldTransition, transition*/ 20971520) {\n\t\t\t// Run this reactive block when the last transition state is not equal to the current state.\n\t\t\tif (oldTransition !== transition) {\n\t\t\t\t// If transition is defined and not the default transition then set it to both in and out transition otherwise\n\t\t\t\t// set the default transition to both in & out transitions.\n\t\t\t\tconst newTransition = s_DEFAULT_TRANSITION !== transition && typeof transition === 'function'\n\t\t\t\t? transition\n\t\t\t\t: s_DEFAULT_TRANSITION;\n\n\t\t\t\t$$invalidate(2, inTransition = newTransition);\n\t\t\t\t$$invalidate(3, outTransition = newTransition);\n\t\t\t\t$$invalidate(24, oldTransition = newTransition);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*oldTransitionOptions, transitionOptions*/ 41943040) {\n\t\t\t// Run this reactive block when the last transition options state is not equal to the current options state.\n\t\t\tif (oldTransitionOptions !== transitionOptions) {\n\t\t\t\tconst newOptions = transitionOptions !== s_DEFAULT_TRANSITION_OPTIONS && typeof transitionOptions === 'object'\n\t\t\t\t? transitionOptions\n\t\t\t\t: s_DEFAULT_TRANSITION_OPTIONS;\n\n\t\t\t\t$$invalidate(4, inTransitionOptions = newOptions);\n\t\t\t\t$$invalidate(5, outTransitionOptions = newOptions);\n\t\t\t\t$$invalidate(25, oldTransitionOptions = newOptions);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*inTransition*/ 4) {\n\t\t\t// Handle cases if inTransition is unset; assign noop default transition function.\n\t\t\tif (typeof inTransition !== 'function') {\n\t\t\t\t$$invalidate(2, inTransition = s_DEFAULT_TRANSITION);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*outTransition, application*/ 1032) {\n\t\t\t{\n\t\t\t\t// Handle cases if outTransition is unset; assign noop default transition function.\n\t\t\t\tif (typeof outTransition !== 'function') {\n\t\t\t\t\t$$invalidate(3, outTransition = s_DEFAULT_TRANSITION);\n\t\t\t\t}\n\n\t\t\t\t// Set jquery close animation to either run or not when an out transition is changed.\n\t\t\t\tif (application && typeof application?.options?.defaultCloseAnimation === 'boolean') {\n\t\t\t\t\t$$invalidate(10, application.options.defaultCloseAnimation = outTransition === s_DEFAULT_TRANSITION, application);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*inTransitionOptions*/ 16) {\n\t\t\t// Handle cases if inTransitionOptions is unset; assign empty default transition options.\n\t\t\tif (typeof inTransitionOptions !== 'object') {\n\t\t\t\t$$invalidate(4, inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*outTransitionOptions*/ 32) {\n\t\t\t// Handle cases if outTransitionOptions is unset; assign empty default transition options.\n\t\t\tif (typeof outTransitionOptions !== 'object') {\n\t\t\t\t$$invalidate(5, outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\telementContent,\n\t\telementRoot,\n\t\tinTransition,\n\t\toutTransition,\n\t\tinTransitionOptions,\n\t\toutTransitionOptions,\n\t\tdraggable,\n\t\tdraggableOptions,\n\t\tstylesApp,\n\t\tstylesContent,\n\t\tapplication,\n\t\tappResizeObserver,\n\t\tcontentResizeObserver,\n\t\tbringToTop,\n\t\tallChildren,\n\t\tresizeObservedContent,\n\t\tresizeObservedApp,\n\t\tappOffsetHeight,\n\t\tappOffsetWidth,\n\t\tcontentOffsetHeight,\n\t\tcontentOffsetWidth,\n\t\tchildren,\n\t\ttransition,\n\t\ttransitionOptions,\n\t\toldTransition,\n\t\toldTransitionOptions,\n\t\t$$scope,\n\t\tslots,\n\t\tsection_binding,\n\t\tdiv_binding\n\t];\n}\n\nclass ApplicationShell extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$4,\n\t\t\tcreate_fragment$4,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\telementContent: 0,\n\t\t\t\telementRoot: 1,\n\t\t\t\tdraggable: 6,\n\t\t\t\tdraggableOptions: 7,\n\t\t\t\tchildren: 21,\n\t\t\t\tstylesApp: 8,\n\t\t\t\tstylesContent: 9,\n\t\t\t\tappOffsetHeight: 17,\n\t\t\t\tappOffsetWidth: 18,\n\t\t\t\tcontentOffsetHeight: 19,\n\t\t\t\tcontentOffsetWidth: 20,\n\t\t\t\ttransition: 22,\n\t\t\t\tinTransition: 2,\n\t\t\t\toutTransition: 3,\n\t\t\t\ttransitionOptions: 23,\n\t\t\t\tinTransitionOptions: 4,\n\t\t\t\toutTransitionOptions: 5\n\t\t\t},\n\t\t\tadd_css$2\n\t\t);\n\t}\n\n\tget elementContent() {\n\t\treturn this.$$.ctx[0];\n\t}\n\n\tset elementContent(elementContent) {\n\t\tthis.$$set({ elementContent });\n\t\tflush();\n\t}\n\n\tget elementRoot() {\n\t\treturn this.$$.ctx[1];\n\t}\n\n\tset elementRoot(elementRoot) {\n\t\tthis.$$set({ elementRoot });\n\t\tflush();\n\t}\n\n\tget draggable() {\n\t\treturn this.$$.ctx[6];\n\t}\n\n\tset draggable(draggable) {\n\t\tthis.$$set({ draggable });\n\t\tflush();\n\t}\n\n\tget draggableOptions() {\n\t\treturn this.$$.ctx[7];\n\t}\n\n\tset draggableOptions(draggableOptions) {\n\t\tthis.$$set({ draggableOptions });\n\t\tflush();\n\t}\n\n\tget children() {\n\t\treturn this.$$.ctx[21];\n\t}\n\n\tset children(children) {\n\t\tthis.$$set({ children });\n\t\tflush();\n\t}\n\n\tget stylesApp() {\n\t\treturn this.$$.ctx[8];\n\t}\n\n\tset stylesApp(stylesApp) {\n\t\tthis.$$set({ stylesApp });\n\t\tflush();\n\t}\n\n\tget stylesContent() {\n\t\treturn this.$$.ctx[9];\n\t}\n\n\tset stylesContent(stylesContent) {\n\t\tthis.$$set({ stylesContent });\n\t\tflush();\n\t}\n\n\tget appOffsetHeight() {\n\t\treturn this.$$.ctx[17];\n\t}\n\n\tset appOffsetHeight(appOffsetHeight) {\n\t\tthis.$$set({ appOffsetHeight });\n\t\tflush();\n\t}\n\n\tget appOffsetWidth() {\n\t\treturn this.$$.ctx[18];\n\t}\n\n\tset appOffsetWidth(appOffsetWidth) {\n\t\tthis.$$set({ appOffsetWidth });\n\t\tflush();\n\t}\n\n\tget contentOffsetHeight() {\n\t\treturn this.$$.ctx[19];\n\t}\n\n\tset contentOffsetHeight(contentOffsetHeight) {\n\t\tthis.$$set({ contentOffsetHeight });\n\t\tflush();\n\t}\n\n\tget contentOffsetWidth() {\n\t\treturn this.$$.ctx[20];\n\t}\n\n\tset contentOffsetWidth(contentOffsetWidth) {\n\t\tthis.$$set({ contentOffsetWidth });\n\t\tflush();\n\t}\n\n\tget transition() {\n\t\treturn this.$$.ctx[22];\n\t}\n\n\tset transition(transition) {\n\t\tthis.$$set({ transition });\n\t\tflush();\n\t}\n\n\tget inTransition() {\n\t\treturn this.$$.ctx[2];\n\t}\n\n\tset inTransition(inTransition) {\n\t\tthis.$$set({ inTransition });\n\t\tflush();\n\t}\n\n\tget outTransition() {\n\t\treturn this.$$.ctx[3];\n\t}\n\n\tset outTransition(outTransition) {\n\t\tthis.$$set({ outTransition });\n\t\tflush();\n\t}\n\n\tget transitionOptions() {\n\t\treturn this.$$.ctx[23];\n\t}\n\n\tset transitionOptions(transitionOptions) {\n\t\tthis.$$set({ transitionOptions });\n\t\tflush();\n\t}\n\n\tget inTransitionOptions() {\n\t\treturn this.$$.ctx[4];\n\t}\n\n\tset inTransitionOptions(inTransitionOptions) {\n\t\tthis.$$set({ inTransitionOptions });\n\t\tflush();\n\t}\n\n\tget outTransitionOptions() {\n\t\treturn this.$$.ctx[5];\n\t}\n\n\tset outTransitionOptions(outTransitionOptions) {\n\t\tthis.$$set({ outTransitionOptions });\n\t\tflush();\n\t}\n}\n\n/* src\\component\\core\\application\\EmptyApplicationShell.svelte generated by Svelte v3.49.0 */\n\nfunction create_else_block$2(ctx) {\n\tlet div;\n\tlet div_id_value;\n\tlet div_class_value;\n\tlet div_data_appid_value;\n\tlet div_intro;\n\tlet div_outro;\n\tlet current;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tattr(div, \"id\", div_id_value = /*application*/ ctx[6].id);\n\t\t\tattr(div, \"class\", div_class_value = /*application*/ ctx[6].options.classes.join(' '));\n\t\t\tattr(div, \"data-appid\", div_data_appid_value = /*application*/ ctx[6].appId);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\t/*div_binding_1*/ ctx[15](div);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (!current || dirty & /*application*/ 64 && div_id_value !== (div_id_value = /*application*/ ctx[6].id)) {\n\t\t\t\tattr(div, \"id\", div_id_value);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*application*/ 64 && div_class_value !== (div_class_value = /*application*/ ctx[6].options.classes.join(' '))) {\n\t\t\t\tattr(div, \"class\", div_class_value);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*application*/ 64 && div_data_appid_value !== (div_data_appid_value = /*application*/ ctx[6].appId)) {\n\t\t\t\tattr(div, \"data-appid\", div_data_appid_value);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tadd_render_callback(() => {\n\t\t\t\tif (div_outro) div_outro.end(1);\n\t\t\t\tdiv_intro = create_in_transition(div, /*inTransition*/ ctx[1], /*inTransitionOptions*/ ctx[3]);\n\t\t\t\tdiv_intro.start();\n\t\t\t});\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tif (div_intro) div_intro.invalidate();\n\t\t\tdiv_outro = create_out_transition(div, /*outTransition*/ ctx[2], /*outTransitionOptions*/ ctx[4]);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\t/*div_binding_1*/ ctx[15](null);\n\t\t\tif (detaching && div_outro) div_outro.end();\n\t\t}\n\t};\n}\n\n// (117:0) {#if bindHeightChanged}\nfunction create_if_block$3(ctx) {\n\tlet div;\n\tlet div_id_value;\n\tlet div_class_value;\n\tlet div_data_appid_value;\n\tlet div_resize_listener;\n\tlet div_intro;\n\tlet div_outro;\n\tlet current;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tattr(div, \"id\", div_id_value = /*application*/ ctx[6].id);\n\t\t\tattr(div, \"class\", div_class_value = /*application*/ ctx[6].options.classes.join(' '));\n\t\t\tattr(div, \"data-appid\", div_data_appid_value = /*application*/ ctx[6].appId);\n\t\t\tadd_render_callback(() => /*div_elementresize_handler*/ ctx[13].call(div));\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tdiv_resize_listener = add_resize_listener(div, /*div_elementresize_handler*/ ctx[13].bind(div));\n\t\t\t/*div_binding*/ ctx[14](div);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (!current || dirty & /*application*/ 64 && div_id_value !== (div_id_value = /*application*/ ctx[6].id)) {\n\t\t\t\tattr(div, \"id\", div_id_value);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*application*/ 64 && div_class_value !== (div_class_value = /*application*/ ctx[6].options.classes.join(' '))) {\n\t\t\t\tattr(div, \"class\", div_class_value);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*application*/ 64 && div_data_appid_value !== (div_data_appid_value = /*application*/ ctx[6].appId)) {\n\t\t\t\tattr(div, \"data-appid\", div_data_appid_value);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tadd_render_callback(() => {\n\t\t\t\tif (div_outro) div_outro.end(1);\n\t\t\t\tdiv_intro = create_in_transition(div, /*inTransition*/ ctx[1], /*inTransitionOptions*/ ctx[3]);\n\t\t\t\tdiv_intro.start();\n\t\t\t});\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tif (div_intro) div_intro.invalidate();\n\t\t\tdiv_outro = create_out_transition(div, /*outTransition*/ ctx[2], /*outTransitionOptions*/ ctx[4]);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdiv_resize_listener();\n\t\t\t/*div_binding*/ ctx[14](null);\n\t\t\tif (detaching && div_outro) div_outro.end();\n\t\t}\n\t};\n}\n\nfunction create_fragment$3(ctx) {\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet if_block_anchor;\n\tlet current;\n\tconst if_block_creators = [create_if_block$3, create_else_block$2];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*bindHeightChanged*/ ctx[7]) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif_blocks[current_block_type_index].m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif_block.p(ctx, dirty);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif_blocks[current_block_type_index].d(detaching);\n\t\t\tif (detaching) detach(if_block_anchor);\n\t\t}\n\t};\n}\n\nfunction instance$3($$self, $$props, $$invalidate) {\n\tlet { elementContent } = $$props;\n\tlet { elementRoot } = $$props;\n\tlet { heightChanged = false } = $$props;\n\n\t// Store the initial `heightChanged` state. If it is truthy then `clientHeight` for the content & root elements\n\t// are bound to `heightChanged` to signal to any parent component of any change to the client & root.\n\tconst bindHeightChanged = !!heightChanged;\n\n\t// Use a writable store to make `elementContent` and `elementRoot` accessible. A store is used in the case when\n\t// One root component with an `elementRoot` is replaced with another. Due to timing issues and the onDestroy / outro\n\t// transitions either of these may be set to null. I will investigate more and file a bug against Svelte.\n\tif (!getContext('storeElementContent')) {\n\t\tsetContext('storeElementContent', writable(elementContent));\n\t}\n\n\tif (!getContext('storeElementRoot')) {\n\t\tsetContext('storeElementRoot', writable(elementRoot));\n\t}\n\n\tconst context = getContext('external');\n\n\t// Store Foundry Application reference.\n\tconst application = context.application;\n\n\tlet { transition = void 0 } = $$props;\n\tlet { inTransition = s_DEFAULT_TRANSITION } = $$props;\n\tlet { outTransition = s_DEFAULT_TRANSITION } = $$props;\n\tlet { transitionOptions = void 0 } = $$props;\n\tlet { inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS } = $$props;\n\tlet { outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS } = $$props;\n\n\t// Tracks last transition state.\n\tlet oldTransition = void 0;\n\n\tlet oldTransitionOptions = void 0;\n\n\tfunction div_elementresize_handler() {\n\t\theightChanged = this.clientHeight;\n\t\t$$invalidate(5, heightChanged);\n\t}\n\n\tfunction div_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\telementRoot = $$value;\n\t\t\t$$invalidate(0, elementRoot);\n\t\t});\n\t}\n\n\tfunction div_binding_1($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\telementRoot = $$value;\n\t\t\t$$invalidate(0, elementRoot);\n\t\t});\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('elementContent' in $$props) $$invalidate(8, elementContent = $$props.elementContent);\n\t\tif ('elementRoot' in $$props) $$invalidate(0, elementRoot = $$props.elementRoot);\n\t\tif ('heightChanged' in $$props) $$invalidate(5, heightChanged = $$props.heightChanged);\n\t\tif ('transition' in $$props) $$invalidate(9, transition = $$props.transition);\n\t\tif ('inTransition' in $$props) $$invalidate(1, inTransition = $$props.inTransition);\n\t\tif ('outTransition' in $$props) $$invalidate(2, outTransition = $$props.outTransition);\n\t\tif ('transitionOptions' in $$props) $$invalidate(10, transitionOptions = $$props.transitionOptions);\n\t\tif ('inTransitionOptions' in $$props) $$invalidate(3, inTransitionOptions = $$props.inTransitionOptions);\n\t\tif ('outTransitionOptions' in $$props) $$invalidate(4, outTransitionOptions = $$props.outTransitionOptions);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*elementRoot*/ 1) {\n\t\t\tif (elementRoot) {\n\t\t\t\t$$invalidate(8, elementContent = elementRoot);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*elementContent*/ 256) {\n\t\t\t// Only update the `elementContent` store if the new `elementContent` is not null or undefined.\n\t\t\tif (elementContent !== void 0 && elementContent !== null) {\n\t\t\t\tgetContext('storeElementContent').set(elementContent);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*elementRoot*/ 1) {\n\t\t\t// Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\n\t\t\tif (elementRoot !== void 0 && elementRoot !== null) {\n\t\t\t\tgetContext('storeElementRoot').set(elementRoot);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*oldTransition, transition*/ 2560) {\n\t\t\t// Run this reactive block when the last transition state is not equal to the current state.\n\t\t\tif (oldTransition !== transition) {\n\t\t\t\t// If transition is defined and not the default transition then set it to both in and out transition otherwise\n\t\t\t\t// set the default transition to both in & out transitions.\n\t\t\t\tconst newTransition = s_DEFAULT_TRANSITION !== transition && typeof transition === 'function'\n\t\t\t\t? transition\n\t\t\t\t: s_DEFAULT_TRANSITION;\n\n\t\t\t\t$$invalidate(1, inTransition = newTransition);\n\t\t\t\t$$invalidate(2, outTransition = newTransition);\n\t\t\t\t$$invalidate(11, oldTransition = newTransition);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*oldTransitionOptions, transitionOptions*/ 5120) {\n\t\t\t// Run this reactive block when the last transition options state is not equal to the current options state.\n\t\t\tif (oldTransitionOptions !== transitionOptions) {\n\t\t\t\tconst newOptions = transitionOptions !== s_DEFAULT_TRANSITION_OPTIONS && typeof transitionOptions === 'object'\n\t\t\t\t? transitionOptions\n\t\t\t\t: s_DEFAULT_TRANSITION_OPTIONS;\n\n\t\t\t\t$$invalidate(3, inTransitionOptions = newOptions);\n\t\t\t\t$$invalidate(4, outTransitionOptions = newOptions);\n\t\t\t\t$$invalidate(12, oldTransitionOptions = newOptions);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*inTransition*/ 2) {\n\t\t\t// Handle cases if inTransition is unset; assign noop default transition function.\n\t\t\tif (typeof inTransition !== 'function') {\n\t\t\t\t$$invalidate(1, inTransition = s_DEFAULT_TRANSITION);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*outTransition, application*/ 68) {\n\t\t\t{\n\t\t\t\t// Handle cases if outTransition is unset; assign noop default transition function.\n\t\t\t\tif (typeof outTransition !== 'function') {\n\t\t\t\t\t$$invalidate(2, outTransition = s_DEFAULT_TRANSITION);\n\t\t\t\t}\n\n\t\t\t\t// Set jquery close animation to either run or not when an out transition is changed.\n\t\t\t\tif (application && typeof application?.options?.defaultCloseAnimation === 'boolean') {\n\t\t\t\t\t$$invalidate(6, application.options.defaultCloseAnimation = outTransition === s_DEFAULT_TRANSITION, application);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*inTransitionOptions*/ 8) {\n\t\t\t// Handle cases if inTransitionOptions is unset; assign empty default transition options.\n\t\t\tif (typeof inTransitionOptions !== 'object') {\n\t\t\t\t$$invalidate(3, inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*outTransitionOptions*/ 16) {\n\t\t\t// Handle cases if outTransitionOptions is unset; assign empty default transition options.\n\t\t\tif (typeof outTransitionOptions !== 'object') {\n\t\t\t\t$$invalidate(4, outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\telementRoot,\n\t\tinTransition,\n\t\toutTransition,\n\t\tinTransitionOptions,\n\t\toutTransitionOptions,\n\t\theightChanged,\n\t\tapplication,\n\t\tbindHeightChanged,\n\t\telementContent,\n\t\ttransition,\n\t\ttransitionOptions,\n\t\toldTransition,\n\t\toldTransitionOptions,\n\t\tdiv_elementresize_handler,\n\t\tdiv_binding,\n\t\tdiv_binding_1\n\t];\n}\n\nclass EmptyApplicationShell extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance$3, create_fragment$3, safe_not_equal, {\n\t\t\telementContent: 8,\n\t\t\telementRoot: 0,\n\t\t\theightChanged: 5,\n\t\t\ttransition: 9,\n\t\t\tinTransition: 1,\n\t\t\toutTransition: 2,\n\t\t\ttransitionOptions: 10,\n\t\t\tinTransitionOptions: 3,\n\t\t\toutTransitionOptions: 4\n\t\t});\n\t}\n\n\tget elementContent() {\n\t\treturn this.$$.ctx[8];\n\t}\n\n\tset elementContent(elementContent) {\n\t\tthis.$$set({ elementContent });\n\t\tflush();\n\t}\n\n\tget elementRoot() {\n\t\treturn this.$$.ctx[0];\n\t}\n\n\tset elementRoot(elementRoot) {\n\t\tthis.$$set({ elementRoot });\n\t\tflush();\n\t}\n\n\tget heightChanged() {\n\t\treturn this.$$.ctx[5];\n\t}\n\n\tset heightChanged(heightChanged) {\n\t\tthis.$$set({ heightChanged });\n\t\tflush();\n\t}\n\n\tget transition() {\n\t\treturn this.$$.ctx[9];\n\t}\n\n\tset transition(transition) {\n\t\tthis.$$set({ transition });\n\t\tflush();\n\t}\n\n\tget inTransition() {\n\t\treturn this.$$.ctx[1];\n\t}\n\n\tset inTransition(inTransition) {\n\t\tthis.$$set({ inTransition });\n\t\tflush();\n\t}\n\n\tget outTransition() {\n\t\treturn this.$$.ctx[2];\n\t}\n\n\tset outTransition(outTransition) {\n\t\tthis.$$set({ outTransition });\n\t\tflush();\n\t}\n\n\tget transitionOptions() {\n\t\treturn this.$$.ctx[10];\n\t}\n\n\tset transitionOptions(transitionOptions) {\n\t\tthis.$$set({ transitionOptions });\n\t\tflush();\n\t}\n\n\tget inTransitionOptions() {\n\t\treturn this.$$.ctx[3];\n\t}\n\n\tset inTransitionOptions(inTransitionOptions) {\n\t\tthis.$$set({ inTransitionOptions });\n\t\tflush();\n\t}\n\n\tget outTransitionOptions() {\n\t\treturn this.$$.ctx[4];\n\t}\n\n\tset outTransitionOptions(outTransitionOptions) {\n\t\tthis.$$set({ outTransitionOptions });\n\t\tflush();\n\t}\n}\n\n/* src\\component\\core\\application\\TJSApplicationShell.svelte generated by Svelte v3.49.0 */\n\nfunction add_css$1(target) {\n\tappend_styles(target, \"svelte-d9hgzf\", \".tjs-app{max-height:100%;background:url(/ui/denim075.png) repeat;border-radius:5px;box-shadow:0 0 20px #000;margin:3px 0;padding:0.5em;color:#f0f0e0;z-index:95;overflow:inherit}.tjs-window-app{display:flex;flex-direction:column;flex-wrap:nowrap;justify-content:flex-start;position:absolute;box-shadow:0 0 20px #000;padding:0;z-index:95}.tjs-window-app > *{flex:1}.tjs-window-app > .flex0{display:block;flex:0}.tjs-window-app > .flex1{flex:1}.tjs-window-app > .flex2{flex:2}.tjs-window-app > .flex3{flex:3}.tjs-window-app .window-header{flex:0 0 30px;overflow:hidden;padding:0 8px;line-height:30px;border-bottom:1px solid #000}.tjs-window-app .window-header .window-title{margin:0;word-break:break-all}.tjs-window-app .window-header a{flex:none;margin:0 0 0 8px}.tjs-window-app .window-header i[class^=fa]{margin-right:3px}.tjs-window-app.minimized .window-header{border:1px solid #000}.tjs-window-app .window-content{display:flex;flex-direction:column;flex-wrap:nowrap;justify-content:flex-start;background:none;padding:8px;color:#191813;overflow-y:auto;overflow-x:hidden}.tjs-window-app.zhover{z-index:calc(var(--z-index-window) + 1)}.tjs-window-app .window-resizable-handle{width:20px;height:20px;position:absolute;bottom:-1px;right:0;background:#444;padding:2px;border:1px solid #111;border-radius:4px 0 0 0}.tjs-window-app .window-resizable-handle i.fas{transform:rotate(45deg)}\");\n}\n\n// (226:7) {:else}\nfunction create_else_block$1(ctx) {\n\tlet current;\n\tconst default_slot_template = /*#slots*/ ctx[27].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[26], null);\n\n\treturn {\n\t\tc() {\n\t\t\tif (default_slot) default_slot.c();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(target, anchor);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 67108864)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[26],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[26])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[26], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t}\n\t};\n}\n\n// (224:7) {#if Array.isArray(allChildren)}\nfunction create_if_block$2(ctx) {\n\tlet tjscontainer;\n\tlet current;\n\n\ttjscontainer = new TJSContainer({\n\t\t\tprops: { children: /*allChildren*/ ctx[14] }\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(tjscontainer.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(tjscontainer, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(tjscontainer.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(tjscontainer.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(tjscontainer, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$2(ctx) {\n\tlet div;\n\tlet tjsapplicationheader;\n\tlet t0;\n\tlet section;\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet applyStyles_action;\n\tlet t1;\n\tlet resizablehandle;\n\tlet div_id_value;\n\tlet div_class_value;\n\tlet div_data_appid_value;\n\tlet applyStyles_action_1;\n\tlet div_intro;\n\tlet div_outro;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\n\ttjsapplicationheader = new TJSApplicationHeader({\n\t\t\tprops: {\n\t\t\t\tdraggable: /*draggable*/ ctx[6],\n\t\t\t\tdraggableOptions: /*draggableOptions*/ ctx[7]\n\t\t\t}\n\t\t});\n\n\tconst if_block_creators = [create_if_block$2, create_else_block$1];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (Array.isArray(/*allChildren*/ ctx[14])) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\tresizablehandle = new ResizableHandle({});\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(tjsapplicationheader.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tsection = element(\"section\");\n\t\t\tif_block.c();\n\t\t\tt1 = space();\n\t\t\tcreate_component(resizablehandle.$$.fragment);\n\t\t\tattr(section, \"class\", \"window-content\");\n\t\t\tattr(div, \"id\", div_id_value = /*application*/ ctx[10].id);\n\t\t\tattr(div, \"class\", div_class_value = \"tjs-app tjs-window-app \" + /*application*/ ctx[10].options.classes.join(' '));\n\t\t\tattr(div, \"data-appid\", div_data_appid_value = /*application*/ ctx[10].appId);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(tjsapplicationheader, div, null);\n\t\t\tappend(div, t0);\n\t\t\tappend(div, section);\n\t\t\tif_blocks[current_block_type_index].m(section, null);\n\t\t\t/*section_binding*/ ctx[28](section);\n\t\t\tappend(div, t1);\n\t\t\tmount_component(resizablehandle, div, null);\n\t\t\t/*div_binding*/ ctx[29](div);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\taction_destroyer(applyStyles_action = applyStyles.call(null, section, /*stylesContent*/ ctx[9])),\n\t\t\t\t\taction_destroyer(/*contentResizeObserver*/ ctx[12].call(null, section, /*resizeObservedContent*/ ctx[15])),\n\t\t\t\t\tlisten(div, \"pointerdown\", /*bringToTop*/ ctx[13], true),\n\t\t\t\t\taction_destroyer(applyStyles_action_1 = applyStyles.call(null, div, /*stylesApp*/ ctx[8])),\n\t\t\t\t\taction_destroyer(/*appResizeObserver*/ ctx[11].call(null, div, /*resizeObservedApp*/ ctx[16]))\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, [dirty]) {\n\t\t\tctx = new_ctx;\n\t\t\tconst tjsapplicationheader_changes = {};\n\t\t\tif (dirty & /*draggable*/ 64) tjsapplicationheader_changes.draggable = /*draggable*/ ctx[6];\n\t\t\tif (dirty & /*draggableOptions*/ 128) tjsapplicationheader_changes.draggableOptions = /*draggableOptions*/ ctx[7];\n\t\t\ttjsapplicationheader.$set(tjsapplicationheader_changes);\n\t\t\tif_block.p(ctx, dirty);\n\t\t\tif (applyStyles_action && is_function(applyStyles_action.update) && dirty & /*stylesContent*/ 512) applyStyles_action.update.call(null, /*stylesContent*/ ctx[9]);\n\n\t\t\tif (!current || dirty & /*application*/ 1024 && div_id_value !== (div_id_value = /*application*/ ctx[10].id)) {\n\t\t\t\tattr(div, \"id\", div_id_value);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*application*/ 1024 && div_class_value !== (div_class_value = \"tjs-app tjs-window-app \" + /*application*/ ctx[10].options.classes.join(' '))) {\n\t\t\t\tattr(div, \"class\", div_class_value);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*application*/ 1024 && div_data_appid_value !== (div_data_appid_value = /*application*/ ctx[10].appId)) {\n\t\t\t\tattr(div, \"data-appid\", div_data_appid_value);\n\t\t\t}\n\n\t\t\tif (applyStyles_action_1 && is_function(applyStyles_action_1.update) && dirty & /*stylesApp*/ 256) applyStyles_action_1.update.call(null, /*stylesApp*/ ctx[8]);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(tjsapplicationheader.$$.fragment, local);\n\t\t\ttransition_in(if_block);\n\t\t\ttransition_in(resizablehandle.$$.fragment, local);\n\n\t\t\tadd_render_callback(() => {\n\t\t\t\tif (div_outro) div_outro.end(1);\n\t\t\t\tdiv_intro = create_in_transition(div, /*inTransition*/ ctx[2], /*inTransitionOptions*/ ctx[4]);\n\t\t\t\tdiv_intro.start();\n\t\t\t});\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(tjsapplicationheader.$$.fragment, local);\n\t\t\ttransition_out(if_block);\n\t\t\ttransition_out(resizablehandle.$$.fragment, local);\n\t\t\tif (div_intro) div_intro.invalidate();\n\t\t\tdiv_outro = create_out_transition(div, /*outTransition*/ ctx[3], /*outTransitionOptions*/ ctx[5]);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_component(tjsapplicationheader);\n\t\t\tif_blocks[current_block_type_index].d();\n\t\t\t/*section_binding*/ ctx[28](null);\n\t\t\tdestroy_component(resizablehandle);\n\t\t\t/*div_binding*/ ctx[29](null);\n\t\t\tif (detaching && div_outro) div_outro.end();\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction instance$2($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\tlet { elementContent } = $$props;\n\tlet { elementRoot } = $$props;\n\tlet { draggable } = $$props;\n\tlet { draggableOptions } = $$props;\n\tlet { children = void 0 } = $$props;\n\tlet { stylesApp } = $$props;\n\tlet { stylesContent } = $$props;\n\tlet { appOffsetHeight = false } = $$props;\n\tlet { appOffsetWidth = false } = $$props;\n\n\t// Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n\tconst appResizeObserver = !!appOffsetHeight || !!appOffsetWidth\n\t? resizeObserver\n\t: () => null;\n\n\tlet { contentOffsetHeight = false } = $$props;\n\tlet { contentOffsetWidth = false } = $$props;\n\n\t// Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n\tconst contentResizeObserver = !!contentOffsetHeight || !!contentOffsetWidth\n\t? resizeObserver\n\t: () => null;\n\n\t// If the application is a popOut application then when clicked bring to top. Bound to on pointerdown.\n\tconst bringToTop = event => {\n\t\tif (typeof application.options.popOut === 'boolean' && application.options.popOut) {\n\t\t\tif (application !== ui?.activeWindow) {\n\t\t\t\tapplication.bringToTop.call(application);\n\t\t\t}\n\n\t\t\t// If the activeElement is not `document.body` and the event target isn't the activeElement then blur the\n\t\t\t// current active element and make `document.body` focused. This allows <esc> key to close all open apps /\n\t\t\t// windows.\n\t\t\tif (document.activeElement !== document.body && event.target !== document.activeElement) {\n\t\t\t\t// Blur current active element.\n\t\t\t\tif (document.activeElement instanceof HTMLElement) {\n\t\t\t\t\tdocument.activeElement.blur();\n\t\t\t\t}\n\n\t\t\t\t// Make document body focused.\n\t\t\t\tdocument.body.focus();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Use a writable store to make `elementContent` and `elementRoot` accessible. A store is used in the case when\n\t// One root component with an `elementRoot` is replaced with another. Due to timing issues and the onDestroy / outro\n\t// transitions either of these may be set to null. I will investigate more and file a bug against Svelte.\n\tif (!getContext('storeElementContent')) {\n\t\tsetContext('storeElementContent', writable(elementContent));\n\t}\n\n\tif (!getContext('storeElementRoot')) {\n\t\tsetContext('storeElementRoot', writable(elementRoot));\n\t}\n\n\tconst context = getContext('external');\n\n\t// Store Foundry Application reference.\n\tconst application = context.application;\n\n\t// This component can host multiple children defined via props or in the TyphonJS SvelteData configuration object\n\t// that are potentially mounted in the content area. If no children defined then this component mounts any slotted\n\t// child.\n\tconst allChildren = Array.isArray(children)\n\t? children\n\t: typeof context === 'object' ? context.children : void 0;\n\n\tlet { transition = void 0 } = $$props;\n\tlet { inTransition = s_DEFAULT_TRANSITION } = $$props;\n\tlet { outTransition = s_DEFAULT_TRANSITION } = $$props;\n\tlet { transitionOptions = void 0 } = $$props;\n\tlet { inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS } = $$props;\n\tlet { outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS } = $$props;\n\n\t// Tracks last transition state.\n\tlet oldTransition = void 0;\n\n\tlet oldTransitionOptions = void 0;\n\n\t// ---------------------------------------------------------------------------------------------------------------\n\t/**\r\n * Callback for content resizeObserver action. This is enabled when contentOffsetHeight or contentOffsetWidth is\r\n * bound.\r\n *\r\n * @param {number}   offsetWidth - Observed offsetWidth.\r\n *\r\n * @param {number}   offsetHeight - Observed offsetHeight\r\n */\n\tfunction resizeObservedContent(offsetWidth, offsetHeight) {\n\t\t$$invalidate(20, contentOffsetWidth = offsetWidth);\n\t\t$$invalidate(19, contentOffsetHeight = offsetHeight);\n\t}\n\n\t/**\r\n * Callback for app resizeObserver action. This is enabled when appOffsetHeight or appOffsetWidth is\r\n * bound. Additionally, the Application position resizeObserved store is updated.\r\n *\r\n * @param {number}   contentWidth - Observed contentWidth.\r\n * @param {number}   contentHeight - Observed contentHeight\r\n * @param {number}   offsetWidth - Observed offsetWidth.\r\n * @param {number}   offsetHeight - Observed offsetHeight\r\n */\n\tfunction resizeObservedApp(offsetWidth, offsetHeight, contentWidth, contentHeight) {\n\t\tapplication.position.stores.resizeObserved.update(object => {\n\t\t\tobject.contentWidth = contentWidth;\n\t\t\tobject.contentHeight = contentHeight;\n\t\t\tobject.offsetWidth = offsetWidth;\n\t\t\tobject.offsetHeight = offsetHeight;\n\t\t\treturn object;\n\t\t});\n\n\t\t$$invalidate(17, appOffsetHeight = offsetHeight);\n\t\t$$invalidate(18, appOffsetWidth = offsetWidth);\n\t}\n\n\tfunction section_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\telementContent = $$value;\n\t\t\t$$invalidate(0, elementContent);\n\t\t});\n\t}\n\n\tfunction div_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\telementRoot = $$value;\n\t\t\t$$invalidate(1, elementRoot);\n\t\t});\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('elementContent' in $$props) $$invalidate(0, elementContent = $$props.elementContent);\n\t\tif ('elementRoot' in $$props) $$invalidate(1, elementRoot = $$props.elementRoot);\n\t\tif ('draggable' in $$props) $$invalidate(6, draggable = $$props.draggable);\n\t\tif ('draggableOptions' in $$props) $$invalidate(7, draggableOptions = $$props.draggableOptions);\n\t\tif ('children' in $$props) $$invalidate(21, children = $$props.children);\n\t\tif ('stylesApp' in $$props) $$invalidate(8, stylesApp = $$props.stylesApp);\n\t\tif ('stylesContent' in $$props) $$invalidate(9, stylesContent = $$props.stylesContent);\n\t\tif ('appOffsetHeight' in $$props) $$invalidate(17, appOffsetHeight = $$props.appOffsetHeight);\n\t\tif ('appOffsetWidth' in $$props) $$invalidate(18, appOffsetWidth = $$props.appOffsetWidth);\n\t\tif ('contentOffsetHeight' in $$props) $$invalidate(19, contentOffsetHeight = $$props.contentOffsetHeight);\n\t\tif ('contentOffsetWidth' in $$props) $$invalidate(20, contentOffsetWidth = $$props.contentOffsetWidth);\n\t\tif ('transition' in $$props) $$invalidate(22, transition = $$props.transition);\n\t\tif ('inTransition' in $$props) $$invalidate(2, inTransition = $$props.inTransition);\n\t\tif ('outTransition' in $$props) $$invalidate(3, outTransition = $$props.outTransition);\n\t\tif ('transitionOptions' in $$props) $$invalidate(23, transitionOptions = $$props.transitionOptions);\n\t\tif ('inTransitionOptions' in $$props) $$invalidate(4, inTransitionOptions = $$props.inTransitionOptions);\n\t\tif ('outTransitionOptions' in $$props) $$invalidate(5, outTransitionOptions = $$props.outTransitionOptions);\n\t\tif ('$$scope' in $$props) $$invalidate(26, $$scope = $$props.$$scope);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*elementContent*/ 1) {\n\t\t\t// Only update the `elementContent` store if the new `elementContent` is not null or undefined.\n\t\t\tif (elementContent !== void 0 && elementContent !== null) {\n\t\t\t\tgetContext('storeElementContent').set(elementContent);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*elementRoot*/ 2) {\n\t\t\t// Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\n\t\t\tif (elementRoot !== void 0 && elementRoot !== null) {\n\t\t\t\tgetContext('storeElementRoot').set(elementRoot);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*oldTransition, transition*/ 20971520) {\n\t\t\t// Run this reactive block when the last transition state is not equal to the current state.\n\t\t\tif (oldTransition !== transition) {\n\t\t\t\t// If transition is defined and not the default transition then set it to both in and out transition otherwise\n\t\t\t\t// set the default transition to both in & out transitions.\n\t\t\t\tconst newTransition = s_DEFAULT_TRANSITION !== transition && typeof transition === 'function'\n\t\t\t\t? transition\n\t\t\t\t: s_DEFAULT_TRANSITION;\n\n\t\t\t\t$$invalidate(2, inTransition = newTransition);\n\t\t\t\t$$invalidate(3, outTransition = newTransition);\n\t\t\t\t$$invalidate(24, oldTransition = newTransition);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*oldTransitionOptions, transitionOptions*/ 41943040) {\n\t\t\t// Run this reactive block when the last transition options state is not equal to the current options state.\n\t\t\tif (oldTransitionOptions !== transitionOptions) {\n\t\t\t\tconst newOptions = transitionOptions !== s_DEFAULT_TRANSITION_OPTIONS && typeof transitionOptions === 'object'\n\t\t\t\t? transitionOptions\n\t\t\t\t: s_DEFAULT_TRANSITION_OPTIONS;\n\n\t\t\t\t$$invalidate(4, inTransitionOptions = newOptions);\n\t\t\t\t$$invalidate(5, outTransitionOptions = newOptions);\n\t\t\t\t$$invalidate(25, oldTransitionOptions = newOptions);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*inTransition*/ 4) {\n\t\t\t// Handle cases if inTransition is unset; assign noop default transition function.\n\t\t\tif (typeof inTransition !== 'function') {\n\t\t\t\t$$invalidate(2, inTransition = s_DEFAULT_TRANSITION);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*outTransition, application*/ 1032) {\n\t\t\t{\n\t\t\t\t// Handle cases if outTransition is unset; assign noop default transition function.\n\t\t\t\tif (typeof outTransition !== 'function') {\n\t\t\t\t\t$$invalidate(3, outTransition = s_DEFAULT_TRANSITION);\n\t\t\t\t}\n\n\t\t\t\t// Set jquery close animation to either run or not when an out transition is changed.\n\t\t\t\tif (application && typeof application?.options?.defaultCloseAnimation === 'boolean') {\n\t\t\t\t\t$$invalidate(10, application.options.defaultCloseAnimation = outTransition === s_DEFAULT_TRANSITION, application);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*inTransitionOptions*/ 16) {\n\t\t\t// Handle cases if inTransitionOptions is unset; assign empty default transition options.\n\t\t\tif (typeof inTransitionOptions !== 'object') {\n\t\t\t\t$$invalidate(4, inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*outTransitionOptions*/ 32) {\n\t\t\t// Handle cases if outTransitionOptions is unset; assign empty default transition options.\n\t\t\tif (typeof outTransitionOptions !== 'object') {\n\t\t\t\t$$invalidate(5, outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\telementContent,\n\t\telementRoot,\n\t\tinTransition,\n\t\toutTransition,\n\t\tinTransitionOptions,\n\t\toutTransitionOptions,\n\t\tdraggable,\n\t\tdraggableOptions,\n\t\tstylesApp,\n\t\tstylesContent,\n\t\tapplication,\n\t\tappResizeObserver,\n\t\tcontentResizeObserver,\n\t\tbringToTop,\n\t\tallChildren,\n\t\tresizeObservedContent,\n\t\tresizeObservedApp,\n\t\tappOffsetHeight,\n\t\tappOffsetWidth,\n\t\tcontentOffsetHeight,\n\t\tcontentOffsetWidth,\n\t\tchildren,\n\t\ttransition,\n\t\ttransitionOptions,\n\t\toldTransition,\n\t\toldTransitionOptions,\n\t\t$$scope,\n\t\tslots,\n\t\tsection_binding,\n\t\tdiv_binding\n\t];\n}\n\nclass TJSApplicationShell extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$2,\n\t\t\tcreate_fragment$2,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\telementContent: 0,\n\t\t\t\telementRoot: 1,\n\t\t\t\tdraggable: 6,\n\t\t\t\tdraggableOptions: 7,\n\t\t\t\tchildren: 21,\n\t\t\t\tstylesApp: 8,\n\t\t\t\tstylesContent: 9,\n\t\t\t\tappOffsetHeight: 17,\n\t\t\t\tappOffsetWidth: 18,\n\t\t\t\tcontentOffsetHeight: 19,\n\t\t\t\tcontentOffsetWidth: 20,\n\t\t\t\ttransition: 22,\n\t\t\t\tinTransition: 2,\n\t\t\t\toutTransition: 3,\n\t\t\t\ttransitionOptions: 23,\n\t\t\t\tinTransitionOptions: 4,\n\t\t\t\toutTransitionOptions: 5\n\t\t\t},\n\t\t\tadd_css$1\n\t\t);\n\t}\n\n\tget elementContent() {\n\t\treturn this.$$.ctx[0];\n\t}\n\n\tset elementContent(elementContent) {\n\t\tthis.$$set({ elementContent });\n\t\tflush();\n\t}\n\n\tget elementRoot() {\n\t\treturn this.$$.ctx[1];\n\t}\n\n\tset elementRoot(elementRoot) {\n\t\tthis.$$set({ elementRoot });\n\t\tflush();\n\t}\n\n\tget draggable() {\n\t\treturn this.$$.ctx[6];\n\t}\n\n\tset draggable(draggable) {\n\t\tthis.$$set({ draggable });\n\t\tflush();\n\t}\n\n\tget draggableOptions() {\n\t\treturn this.$$.ctx[7];\n\t}\n\n\tset draggableOptions(draggableOptions) {\n\t\tthis.$$set({ draggableOptions });\n\t\tflush();\n\t}\n\n\tget children() {\n\t\treturn this.$$.ctx[21];\n\t}\n\n\tset children(children) {\n\t\tthis.$$set({ children });\n\t\tflush();\n\t}\n\n\tget stylesApp() {\n\t\treturn this.$$.ctx[8];\n\t}\n\n\tset stylesApp(stylesApp) {\n\t\tthis.$$set({ stylesApp });\n\t\tflush();\n\t}\n\n\tget stylesContent() {\n\t\treturn this.$$.ctx[9];\n\t}\n\n\tset stylesContent(stylesContent) {\n\t\tthis.$$set({ stylesContent });\n\t\tflush();\n\t}\n\n\tget appOffsetHeight() {\n\t\treturn this.$$.ctx[17];\n\t}\n\n\tset appOffsetHeight(appOffsetHeight) {\n\t\tthis.$$set({ appOffsetHeight });\n\t\tflush();\n\t}\n\n\tget appOffsetWidth() {\n\t\treturn this.$$.ctx[18];\n\t}\n\n\tset appOffsetWidth(appOffsetWidth) {\n\t\tthis.$$set({ appOffsetWidth });\n\t\tflush();\n\t}\n\n\tget contentOffsetHeight() {\n\t\treturn this.$$.ctx[19];\n\t}\n\n\tset contentOffsetHeight(contentOffsetHeight) {\n\t\tthis.$$set({ contentOffsetHeight });\n\t\tflush();\n\t}\n\n\tget contentOffsetWidth() {\n\t\treturn this.$$.ctx[20];\n\t}\n\n\tset contentOffsetWidth(contentOffsetWidth) {\n\t\tthis.$$set({ contentOffsetWidth });\n\t\tflush();\n\t}\n\n\tget transition() {\n\t\treturn this.$$.ctx[22];\n\t}\n\n\tset transition(transition) {\n\t\tthis.$$set({ transition });\n\t\tflush();\n\t}\n\n\tget inTransition() {\n\t\treturn this.$$.ctx[2];\n\t}\n\n\tset inTransition(inTransition) {\n\t\tthis.$$set({ inTransition });\n\t\tflush();\n\t}\n\n\tget outTransition() {\n\t\treturn this.$$.ctx[3];\n\t}\n\n\tset outTransition(outTransition) {\n\t\tthis.$$set({ outTransition });\n\t\tflush();\n\t}\n\n\tget transitionOptions() {\n\t\treturn this.$$.ctx[23];\n\t}\n\n\tset transitionOptions(transitionOptions) {\n\t\tthis.$$set({ transitionOptions });\n\t\tflush();\n\t}\n\n\tget inTransitionOptions() {\n\t\treturn this.$$.ctx[4];\n\t}\n\n\tset inTransitionOptions(inTransitionOptions) {\n\t\tthis.$$set({ inTransitionOptions });\n\t\tflush();\n\t}\n\n\tget outTransitionOptions() {\n\t\treturn this.$$.ctx[5];\n\t}\n\n\tset outTransitionOptions(outTransitionOptions) {\n\t\tthis.$$set({ outTransitionOptions });\n\t\tflush();\n\t}\n}\n\n/* src\\component\\core\\dialog\\DialogContent.svelte generated by Svelte v3.49.0 */\n\nfunction add_css(target) {\n\tappend_styles(target, \"svelte-14xg9ru\", \"div.dialog-buttons.svelte-14xg9ru{padding-top:8px}\");\n}\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[15] = list[i];\n\treturn child_ctx;\n}\n\n// (202:29) \nfunction create_if_block_3(ctx) {\n\tlet switch_instance;\n\tlet switch_instance_anchor;\n\tlet current;\n\tconst switch_instance_spread_levels = [/*dialogProps*/ ctx[5]];\n\tvar switch_value = /*dialogComponent*/ ctx[4];\n\n\tfunction switch_props(ctx) {\n\t\tlet switch_instance_props = {};\n\n\t\tfor (let i = 0; i < switch_instance_spread_levels.length; i += 1) {\n\t\t\tswitch_instance_props = assign(switch_instance_props, switch_instance_spread_levels[i]);\n\t\t}\n\n\t\treturn { props: switch_instance_props };\n\t}\n\n\tif (switch_value) {\n\t\tswitch_instance = new switch_value(switch_props());\n\t\t/*switch_instance_binding*/ ctx[12](switch_instance);\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tif (switch_instance) create_component(switch_instance.$$.fragment);\n\t\t\tswitch_instance_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (switch_instance) {\n\t\t\t\tmount_component(switch_instance, target, anchor);\n\t\t\t}\n\n\t\t\tinsert(target, switch_instance_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst switch_instance_changes = (dirty & /*dialogProps*/ 32)\n\t\t\t? get_spread_update(switch_instance_spread_levels, [get_spread_object(/*dialogProps*/ ctx[5])])\n\t\t\t: {};\n\n\t\t\tif (switch_value !== (switch_value = /*dialogComponent*/ ctx[4])) {\n\t\t\t\tif (switch_instance) {\n\t\t\t\t\tgroup_outros();\n\t\t\t\t\tconst old_component = switch_instance;\n\n\t\t\t\t\ttransition_out(old_component.$$.fragment, 1, 0, () => {\n\t\t\t\t\t\tdestroy_component(old_component, 1);\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (switch_value) {\n\t\t\t\t\tswitch_instance = new switch_value(switch_props());\n\t\t\t\t\t/*switch_instance_binding*/ ctx[12](switch_instance);\n\t\t\t\t\tcreate_component(switch_instance.$$.fragment);\n\t\t\t\t\ttransition_in(switch_instance.$$.fragment, 1);\n\t\t\t\t\tmount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);\n\t\t\t\t} else {\n\t\t\t\t\tswitch_instance = null;\n\t\t\t\t}\n\t\t\t} else if (switch_value) {\n\t\t\t\tswitch_instance.$set(switch_instance_changes);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\tif (switch_instance) transition_in(switch_instance.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tif (switch_instance) transition_out(switch_instance.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\t/*switch_instance_binding*/ ctx[12](null);\n\t\t\tif (detaching) detach(switch_instance_anchor);\n\t\t\tif (switch_instance) destroy_component(switch_instance, detaching);\n\t\t}\n\t};\n}\n\n// (200:3) {#if typeof content === 'string'}\nfunction create_if_block_2(ctx) {\n\tlet html_tag;\n\tlet html_anchor;\n\n\treturn {\n\t\tc() {\n\t\t\thtml_tag = new HtmlTag(false);\n\t\t\thtml_anchor = empty();\n\t\t\thtml_tag.a = html_anchor;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\thtml_tag.m(/*content*/ ctx[2], target, anchor);\n\t\t\tinsert(target, html_anchor, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*content*/ 4) html_tag.p(/*content*/ ctx[2]);\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(html_anchor);\n\t\t\tif (detaching) html_tag.d();\n\t\t}\n\t};\n}\n\n// (207:0) {#if buttons.length}\nfunction create_if_block$1(ctx) {\n\tlet div;\n\tlet each_blocks = [];\n\tlet each_1_lookup = new Map();\n\tlet each_value = /*buttons*/ ctx[1];\n\tconst get_key = ctx => /*button*/ ctx[15].id;\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\tlet child_ctx = get_each_context(ctx, each_value, i);\n\t\tlet key = get_key(child_ctx);\n\t\teach_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(div, \"class\", \"dialog-buttons svelte-14xg9ru\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(div, null);\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*buttons, currentButtonId, onClick*/ 74) {\n\t\t\t\teach_value = /*buttons*/ ctx[1];\n\t\t\t\teach_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, div, destroy_block, create_each_block, null, get_each_context);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].d();\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (214:33) {#if button.icon}\nfunction create_if_block_1(ctx) {\n\tlet html_tag;\n\tlet raw_value = /*button*/ ctx[15].icon + \"\";\n\tlet html_anchor;\n\n\treturn {\n\t\tc() {\n\t\t\thtml_tag = new HtmlTag(false);\n\t\t\thtml_anchor = empty();\n\t\t\thtml_tag.a = html_anchor;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\thtml_tag.m(raw_value, target, anchor);\n\t\t\tinsert(target, html_anchor, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*buttons*/ 2 && raw_value !== (raw_value = /*button*/ ctx[15].icon + \"\")) html_tag.p(raw_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(html_anchor);\n\t\t\tif (detaching) html_tag.d();\n\t\t}\n\t};\n}\n\n// (209:3) {#each buttons as button (button.id)}\nfunction create_each_block(key_1, ctx) {\n\tlet button;\n\tlet span;\n\tlet t0_value = /*button*/ ctx[15].label + \"\";\n\tlet t0;\n\tlet span_title_value;\n\tlet t1;\n\tlet button_class_value;\n\tlet applyStyles_action;\n\tlet mounted;\n\tlet dispose;\n\tlet if_block = /*button*/ ctx[15].icon && create_if_block_1(ctx);\n\n\tfunction click_handler() {\n\t\treturn /*click_handler*/ ctx[13](/*button*/ ctx[15]);\n\t}\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tspan = element(\"span\");\n\t\t\tif (if_block) if_block.c();\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\tattr(span, \"title\", span_title_value = /*button*/ ctx[15].title);\n\t\t\tattr(button, \"class\", button_class_value = \"dialog-button \" + /*button*/ ctx[15].id);\n\t\t\ttoggle_class(button, \"default\", /*button*/ ctx[15].id === /*currentButtonId*/ ctx[3]);\n\t\t\tthis.first = button;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tappend(button, span);\n\t\t\tif (if_block) if_block.m(span, null);\n\t\t\tappend(span, t0);\n\t\t\tappend(button, t1);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(button, \"click\", click_handler),\n\t\t\t\t\taction_destroyer(applyStyles_action = applyStyles.call(null, button, /*button*/ ctx[15].styles))\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (/*button*/ ctx[15].icon) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block_1(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(span, t0);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\n\t\t\tif (dirty & /*buttons*/ 2 && t0_value !== (t0_value = /*button*/ ctx[15].label + \"\")) set_data(t0, t0_value);\n\n\t\t\tif (dirty & /*buttons*/ 2 && span_title_value !== (span_title_value = /*button*/ ctx[15].title)) {\n\t\t\t\tattr(span, \"title\", span_title_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*buttons*/ 2 && button_class_value !== (button_class_value = \"dialog-button \" + /*button*/ ctx[15].id)) {\n\t\t\t\tattr(button, \"class\", button_class_value);\n\t\t\t}\n\n\t\t\tif (applyStyles_action && is_function(applyStyles_action.update) && dirty & /*buttons*/ 2) applyStyles_action.update.call(null, /*button*/ ctx[15].styles);\n\n\t\t\tif (dirty & /*buttons, buttons, currentButtonId*/ 10) {\n\t\t\t\ttoggle_class(button, \"default\", /*button*/ ctx[15].id === /*currentButtonId*/ ctx[3]);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(button);\n\t\t\tif (if_block) if_block.d();\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction create_fragment$1(ctx) {\n\tlet t0;\n\tlet div;\n\tlet current_block_type_index;\n\tlet if_block0;\n\tlet t1;\n\tlet if_block1_anchor;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tconst if_block_creators = [create_if_block_2, create_if_block_3];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (typeof /*content*/ ctx[2] === 'string') return 0;\n\t\tif (/*dialogComponent*/ ctx[4]) return 1;\n\t\treturn -1;\n\t}\n\n\tif (~(current_block_type_index = select_block_type(ctx))) {\n\t\tif_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t}\n\n\tlet if_block1 = /*buttons*/ ctx[1].length && create_if_block$1(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tt0 = space();\n\t\t\tdiv = element(\"div\");\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt1 = space();\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tif_block1_anchor = empty();\n\t\t\tattr(div, \"class\", \"dialog-content\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t0, anchor);\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].m(div, null);\n\t\t\t}\n\n\t\t\tinsert(target, t1, anchor);\n\t\t\tif (if_block1) if_block1.m(target, anchor);\n\t\t\tinsert(target, if_block1_anchor, anchor);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(document.body, \"keydown\", /*onKeydown*/ ctx[7]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif (~current_block_type_index) {\n\t\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tgroup_outros();\n\n\t\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (~current_block_type_index) {\n\t\t\t\t\tif_block0 = if_blocks[current_block_type_index];\n\n\t\t\t\t\tif (!if_block0) {\n\t\t\t\t\t\tif_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\t\tif_block0.c();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif_block0.p(ctx, dirty);\n\t\t\t\t\t}\n\n\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\tif_block0.m(div, null);\n\t\t\t\t} else {\n\t\t\t\t\tif_block0 = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (/*buttons*/ ctx[1].length) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block$1(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\tif_block1.m(if_block1_anchor.parentNode, if_block1_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tif_block1.d(1);\n\t\t\t\tif_block1 = null;\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block0);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block0);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(t0);\n\t\t\tif (detaching) detach(div);\n\n\t\t\tif (~current_block_type_index) {\n\t\t\t\tif_blocks[current_block_type_index].d();\n\t\t\t}\n\n\t\t\tif (detaching) detach(t1);\n\t\t\tif (if_block1) if_block1.d(detaching);\n\t\t\tif (detaching) detach(if_block1_anchor);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nconst s_REGEX_HTML = /^\\s*<.*>$/;\n\nfunction instance$1($$self, $$props, $$invalidate) {\n\tlet { data = {} } = $$props;\n\tlet { autoClose = true } = $$props;\n\tlet { preventDefault = false } = $$props;\n\tlet { stopPropagation = false } = $$props;\n\tlet { dialogInstance = void 0 } = $$props;\n\tlet buttons;\n\tlet content = void 0;\n\tlet dialogComponent;\n\tlet dialogProps = {};\n\tlet application = getContext('external').application;\n\tlet currentButtonId = data.default;\n\n\tasync function onClick(button) {\n\t\ttry {\n\t\t\tlet result = null;\n\n\t\t\t// Accept either callback or onclick as the function / data to invoke.\n\t\t\tconst invoke = button.callback ?? button.onclick;\n\n\t\t\tswitch (typeof invoke) {\n\t\t\t\tcase 'function':\n\t\t\t\t\t// Passing back the HTML element is to keep with the existing Foundry API, however second parameter is\n\t\t\t\t\t// the Svelte component instance.\n\t\t\t\t\tresult = await invoke(\n\t\t\t\t\t\tapplication.options.jQuery\n\t\t\t\t\t\t? application.element\n\t\t\t\t\t\t: application.element[0],\n\t\t\t\t\t\tdialogInstance\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'string':\n\t\t\t\t\t// Attempt lookup by function name in dialog instance component.\n\t\t\t\t\tif (dialogInstance !== void 0 && typeof dialogInstance[invoke] === 'function') {\n\t\t\t\t\t\tresult = await dialogInstance[invoke](\n\t\t\t\t\t\t\tapplication.options.jQuery\n\t\t\t\t\t\t\t? application.element\n\t\t\t\t\t\t\t: application.element[0],\n\t\t\t\t\t\t\tdialogInstance\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Delay closing to next clock tick to be able to return result.\n\t\t\tif (autoClose) {\n\t\t\t\tsetTimeout(() => application.close(), 0);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} catch(err) {\n\t\t\tui.notifications.error(err);\n\t\t\tthrow new Error(err);\n\t\t}\n\t}\n\n\tfunction onKeydown(event) {\n\t\t/**\r\n * If this dialog is not the activeWindow then return immediately. See {@link SvelteApplication.bringToTop} as\r\n * SvelteApplication overrides core Foundry and always sets the activeWindow when `bringToTop` is invoked.\r\n */\n\t\tif (event.key !== 'Escape' && ui.activeWindow !== application) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event.key) {\n\t\t\tcase 'ArrowLeft':\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tconst currentIndex = buttons.findIndex(button => button.id === currentButtonId);\n\n\t\t\t\t\tif (buttons.length && currentIndex > 0) {\n\t\t\t\t\t\t$$invalidate(3, currentButtonId = buttons[currentIndex - 1].id);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'ArrowRight':\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tconst currentIndex = buttons.findIndex(button => button.id === currentButtonId);\n\n\t\t\t\t\tif (buttons.length && currentIndex < buttons.length - 1) {\n\t\t\t\t\t\t$$invalidate(3, currentButtonId = buttons[currentIndex + 1].id);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'Escape':\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\treturn application.close();\n\t\t\tcase 'Enter':\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tif (currentButtonId && isObject(data.buttons) && currentButtonId in data.buttons) {\n\t\t\t\t\tonClick(data.buttons[currentButtonId]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (preventDefault) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tif (stopPropagation) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction switch_instance_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\tdialogInstance = $$value;\n\t\t\t$$invalidate(0, dialogInstance);\n\t\t});\n\t}\n\n\tconst click_handler = button => onClick(button);\n\n\t$$self.$$set = $$props => {\n\t\tif ('data' in $$props) $$invalidate(8, data = $$props.data);\n\t\tif ('autoClose' in $$props) $$invalidate(9, autoClose = $$props.autoClose);\n\t\tif ('preventDefault' in $$props) $$invalidate(10, preventDefault = $$props.preventDefault);\n\t\tif ('stopPropagation' in $$props) $$invalidate(11, stopPropagation = $$props.stopPropagation);\n\t\tif ('dialogInstance' in $$props) $$invalidate(0, dialogInstance = $$props.dialogInstance);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*data*/ 256) {\n\t\t\t// If `data.buttons` is not an object then set an empty array otherwise reduce the button data.\n\t\t\t{\n\t\t\t\t$$invalidate(1, buttons = !isObject(data.buttons)\n\t\t\t\t? []\n\t\t\t\t: Object.keys(data.buttons).reduce(\n\t\t\t\t\t\t(array, key) => {\n\t\t\t\t\t\t\tconst b = data.buttons[key];\n\n\t\t\t\t\t\t\t// Handle icon and treat bare strings as the icon class; otherwise assume the icon is fully formed HTML.\n\t\t\t\t\t\t\tconst icon = typeof b.icon !== 'string'\n\t\t\t\t\t\t\t? void 0\n\t\t\t\t\t\t\t: s_REGEX_HTML.test(b.icon)\n\t\t\t\t\t\t\t\t? b.icon\n\t\t\t\t\t\t\t\t: `<i class=\"${b.icon}\"></i>`;\n\n\t\t\t\t\t\t\tconst label = typeof b.label === 'string'\n\t\t\t\t\t\t\t? `${icon !== void 0 ? ' ' : ''}${localize(b.label)}`\n\t\t\t\t\t\t\t: '';\n\n\t\t\t\t\t\t\tconst title = typeof b.title === 'string' ? localize(b.title) : void 0;\n\n\t\t\t\t\t\t\t// Test any condition supplied otherwise default to true.\n\t\t\t\t\t\t\tconst condition = typeof b.condition === 'function'\n\t\t\t\t\t\t\t? b.condition.call(b)\n\t\t\t\t\t\t\t: b.condition ?? true;\n\n\t\t\t\t\t\t\tif (condition) {\n\t\t\t\t\t\t\t\tarray.push({ ...b, id: key, icon, label, title });\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn array;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[]\n\t\t\t\t\t));\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*buttons, currentButtonId*/ 10) {\n\t\t\t/**\r\n * This reactivity block will trigger on arrow left / right key presses _and_ when buttons change. It is OK for it to\r\n * trigger on both.\r\n */\n\t\t\tif (!buttons.find(button => button.id === currentButtonId)) {\n\t\t\t\t$$invalidate(3, currentButtonId = void 0);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*content, data*/ 260) {\n\t\t\tif (content !== data.content) {\n\t\t\t\t$$invalidate(2, content = data.content); // Only update the content if it has changed.\n\n\t\t\t\ttry {\n\t\t\t\t\tif (isSvelteComponent(content)) {\n\t\t\t\t\t\t$$invalidate(4, dialogComponent = content);\n\t\t\t\t\t\t$$invalidate(5, dialogProps = {});\n\t\t\t\t\t} else if (typeof content === 'object') {\n\t\t\t\t\t\tconst svelteConfig = parseSvelteConfig(content, application);\n\t\t\t\t\t\t$$invalidate(4, dialogComponent = svelteConfig.class);\n\t\t\t\t\t\t$$invalidate(5, dialogProps = svelteConfig.props ?? {});\n\n\t\t\t\t\t\t// Check for any children parsed and added to the external context.\n\t\t\t\t\t\tconst children = svelteConfig?.context?.get('external')?.children;\n\n\t\t\t\t\t\t// If so add to dialogProps.\n\t\t\t\t\t\tif (Array.isArray(children)) {\n\t\t\t\t\t\t\t$$invalidate(5, dialogProps.children = children, dialogProps);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$$invalidate(4, dialogComponent = void 0);\n\t\t\t\t\t\t$$invalidate(5, dialogProps = {});\n\t\t\t\t\t}\n\t\t\t\t} catch(err) {\n\t\t\t\t\t$$invalidate(4, dialogComponent = void 0);\n\t\t\t\t\t$$invalidate(5, dialogProps = {});\n\t\t\t\t\t$$invalidate(2, content = err.message);\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\tdialogInstance,\n\t\tbuttons,\n\t\tcontent,\n\t\tcurrentButtonId,\n\t\tdialogComponent,\n\t\tdialogProps,\n\t\tonClick,\n\t\tonKeydown,\n\t\tdata,\n\t\tautoClose,\n\t\tpreventDefault,\n\t\tstopPropagation,\n\t\tswitch_instance_binding,\n\t\tclick_handler\n\t];\n}\n\nclass DialogContent extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$1,\n\t\t\tcreate_fragment$1,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tdata: 8,\n\t\t\t\tautoClose: 9,\n\t\t\t\tpreventDefault: 10,\n\t\t\t\tstopPropagation: 11,\n\t\t\t\tdialogInstance: 0\n\t\t\t},\n\t\t\tadd_css\n\t\t);\n\t}\n}\n\n/* src\\component\\core\\dialog\\DialogShell.svelte generated by Svelte v3.49.0 */\n\nfunction create_else_block(ctx) {\n\tlet applicationshell;\n\tlet updating_elementRoot;\n\tlet updating_elementContent;\n\tlet current;\n\tconst applicationshell_spread_levels = [/*appProps*/ ctx[6], { appOffsetHeight: true }];\n\n\tfunction applicationshell_elementRoot_binding_1(value) {\n\t\t/*applicationshell_elementRoot_binding_1*/ ctx[16](value);\n\t}\n\n\tfunction applicationshell_elementContent_binding_1(value) {\n\t\t/*applicationshell_elementContent_binding_1*/ ctx[17](value);\n\t}\n\n\tlet applicationshell_props = {\n\t\t$$slots: { default: [create_default_slot_2] },\n\t\t$$scope: { ctx }\n\t};\n\n\tfor (let i = 0; i < applicationshell_spread_levels.length; i += 1) {\n\t\tapplicationshell_props = assign(applicationshell_props, applicationshell_spread_levels[i]);\n\t}\n\n\tif (/*elementRoot*/ ctx[1] !== void 0) {\n\t\tapplicationshell_props.elementRoot = /*elementRoot*/ ctx[1];\n\t}\n\n\tif (/*elementContent*/ ctx[0] !== void 0) {\n\t\tapplicationshell_props.elementContent = /*elementContent*/ ctx[0];\n\t}\n\n\tapplicationshell = new ApplicationShell({ props: applicationshell_props });\n\tbinding_callbacks.push(() => bind(applicationshell, 'elementRoot', applicationshell_elementRoot_binding_1));\n\tbinding_callbacks.push(() => bind(applicationshell, 'elementContent', applicationshell_elementContent_binding_1));\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(applicationshell.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(applicationshell, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst applicationshell_changes = (dirty & /*appProps*/ 64)\n\t\t\t? get_spread_update(applicationshell_spread_levels, [\n\t\t\t\t\tget_spread_object(/*appProps*/ ctx[6]),\n\t\t\t\t\tapplicationshell_spread_levels[1]\n\t\t\t\t])\n\t\t\t: {};\n\n\t\t\tif (dirty & /*$$scope, data, autoClose, dialogComponent*/ 1049100) {\n\t\t\t\tapplicationshell_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tif (!updating_elementRoot && dirty & /*elementRoot*/ 2) {\n\t\t\t\tupdating_elementRoot = true;\n\t\t\t\tapplicationshell_changes.elementRoot = /*elementRoot*/ ctx[1];\n\t\t\t\tadd_flush_callback(() => updating_elementRoot = false);\n\t\t\t}\n\n\t\t\tif (!updating_elementContent && dirty & /*elementContent*/ 1) {\n\t\t\t\tupdating_elementContent = true;\n\t\t\t\tapplicationshell_changes.elementContent = /*elementContent*/ ctx[0];\n\t\t\t\tadd_flush_callback(() => updating_elementContent = false);\n\t\t\t}\n\n\t\t\tapplicationshell.$set(applicationshell_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(applicationshell.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(applicationshell.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(applicationshell, detaching);\n\t\t}\n\t};\n}\n\n// (180:0) {#if modal}\nfunction create_if_block(ctx) {\n\tlet tjsglasspane;\n\tlet current;\n\n\tconst tjsglasspane_spread_levels = [\n\t\t{\n\t\t\tid: `${/*application*/ ctx[4].id}-glasspane`\n\t\t},\n\t\t{ preventDefault: false },\n\t\t{ stopPropagation: false },\n\t\t/*modalProps*/ ctx[7],\n\t\t{ zIndex: /*zIndex*/ ctx[8] }\n\t];\n\n\tlet tjsglasspane_props = {\n\t\t$$slots: { default: [create_default_slot] },\n\t\t$$scope: { ctx }\n\t};\n\n\tfor (let i = 0; i < tjsglasspane_spread_levels.length; i += 1) {\n\t\ttjsglasspane_props = assign(tjsglasspane_props, tjsglasspane_spread_levels[i]);\n\t}\n\n\ttjsglasspane = new TJSGlassPane({ props: tjsglasspane_props });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(tjsglasspane.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(tjsglasspane, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst tjsglasspane_changes = (dirty & /*application, modalProps, zIndex*/ 400)\n\t\t\t? get_spread_update(tjsglasspane_spread_levels, [\n\t\t\t\t\tdirty & /*application*/ 16 && {\n\t\t\t\t\t\tid: `${/*application*/ ctx[4].id}-glasspane`\n\t\t\t\t\t},\n\t\t\t\t\ttjsglasspane_spread_levels[1],\n\t\t\t\t\ttjsglasspane_spread_levels[2],\n\t\t\t\t\tdirty & /*modalProps*/ 128 && get_spread_object(/*modalProps*/ ctx[7]),\n\t\t\t\t\tdirty & /*zIndex*/ 256 && { zIndex: /*zIndex*/ ctx[8] }\n\t\t\t\t])\n\t\t\t: {};\n\n\t\t\tif (dirty & /*$$scope, appProps, elementRoot, elementContent, data, autoClose, dialogComponent*/ 1049167) {\n\t\t\t\ttjsglasspane_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ttjsglasspane.$set(tjsglasspane_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(tjsglasspane.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(tjsglasspane.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(tjsglasspane, detaching);\n\t\t}\n\t};\n}\n\n// (187:3) <ApplicationShell bind:elementRoot bind:elementContent {...appProps} appOffsetHeight={true}>\nfunction create_default_slot_2(ctx) {\n\tlet dialogcontent;\n\tlet updating_autoClose;\n\tlet updating_dialogInstance;\n\tlet current;\n\n\tfunction dialogcontent_autoClose_binding_1(value) {\n\t\t/*dialogcontent_autoClose_binding_1*/ ctx[14](value);\n\t}\n\n\tfunction dialogcontent_dialogInstance_binding_1(value) {\n\t\t/*dialogcontent_dialogInstance_binding_1*/ ctx[15](value);\n\t}\n\n\tlet dialogcontent_props = { data: /*data*/ ctx[3] };\n\n\tif (/*autoClose*/ ctx[9] !== void 0) {\n\t\tdialogcontent_props.autoClose = /*autoClose*/ ctx[9];\n\t}\n\n\tif (/*dialogComponent*/ ctx[2] !== void 0) {\n\t\tdialogcontent_props.dialogInstance = /*dialogComponent*/ ctx[2];\n\t}\n\n\tdialogcontent = new DialogContent({ props: dialogcontent_props });\n\tbinding_callbacks.push(() => bind(dialogcontent, 'autoClose', dialogcontent_autoClose_binding_1));\n\tbinding_callbacks.push(() => bind(dialogcontent, 'dialogInstance', dialogcontent_dialogInstance_binding_1));\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(dialogcontent.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(dialogcontent, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst dialogcontent_changes = {};\n\t\t\tif (dirty & /*data*/ 8) dialogcontent_changes.data = /*data*/ ctx[3];\n\n\t\t\tif (!updating_autoClose && dirty & /*autoClose*/ 512) {\n\t\t\t\tupdating_autoClose = true;\n\t\t\t\tdialogcontent_changes.autoClose = /*autoClose*/ ctx[9];\n\t\t\t\tadd_flush_callback(() => updating_autoClose = false);\n\t\t\t}\n\n\t\t\tif (!updating_dialogInstance && dirty & /*dialogComponent*/ 4) {\n\t\t\t\tupdating_dialogInstance = true;\n\t\t\t\tdialogcontent_changes.dialogInstance = /*dialogComponent*/ ctx[2];\n\t\t\t\tadd_flush_callback(() => updating_dialogInstance = false);\n\t\t\t}\n\n\t\t\tdialogcontent.$set(dialogcontent_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(dialogcontent.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(dialogcontent.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(dialogcontent, detaching);\n\t\t}\n\t};\n}\n\n// (182:6) <ApplicationShell bind:elementRoot bind:elementContent {...appProps} appOffsetHeight={true}>\nfunction create_default_slot_1(ctx) {\n\tlet dialogcontent;\n\tlet updating_autoClose;\n\tlet updating_dialogInstance;\n\tlet current;\n\n\tfunction dialogcontent_autoClose_binding(value) {\n\t\t/*dialogcontent_autoClose_binding*/ ctx[10](value);\n\t}\n\n\tfunction dialogcontent_dialogInstance_binding(value) {\n\t\t/*dialogcontent_dialogInstance_binding*/ ctx[11](value);\n\t}\n\n\tlet dialogcontent_props = {\n\t\tstopPropagation: true,\n\t\tdata: /*data*/ ctx[3]\n\t};\n\n\tif (/*autoClose*/ ctx[9] !== void 0) {\n\t\tdialogcontent_props.autoClose = /*autoClose*/ ctx[9];\n\t}\n\n\tif (/*dialogComponent*/ ctx[2] !== void 0) {\n\t\tdialogcontent_props.dialogInstance = /*dialogComponent*/ ctx[2];\n\t}\n\n\tdialogcontent = new DialogContent({ props: dialogcontent_props });\n\tbinding_callbacks.push(() => bind(dialogcontent, 'autoClose', dialogcontent_autoClose_binding));\n\tbinding_callbacks.push(() => bind(dialogcontent, 'dialogInstance', dialogcontent_dialogInstance_binding));\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(dialogcontent.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(dialogcontent, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst dialogcontent_changes = {};\n\t\t\tif (dirty & /*data*/ 8) dialogcontent_changes.data = /*data*/ ctx[3];\n\n\t\t\tif (!updating_autoClose && dirty & /*autoClose*/ 512) {\n\t\t\t\tupdating_autoClose = true;\n\t\t\t\tdialogcontent_changes.autoClose = /*autoClose*/ ctx[9];\n\t\t\t\tadd_flush_callback(() => updating_autoClose = false);\n\t\t\t}\n\n\t\t\tif (!updating_dialogInstance && dirty & /*dialogComponent*/ 4) {\n\t\t\t\tupdating_dialogInstance = true;\n\t\t\t\tdialogcontent_changes.dialogInstance = /*dialogComponent*/ ctx[2];\n\t\t\t\tadd_flush_callback(() => updating_dialogInstance = false);\n\t\t\t}\n\n\t\t\tdialogcontent.$set(dialogcontent_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(dialogcontent.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(dialogcontent.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(dialogcontent, detaching);\n\t\t}\n\t};\n}\n\n// (181:3) <TJSGlassPane id={`${application.id}-glasspane`} preventDefault={false} stopPropagation={false} {...modalProps} {zIndex}>\nfunction create_default_slot(ctx) {\n\tlet applicationshell;\n\tlet updating_elementRoot;\n\tlet updating_elementContent;\n\tlet current;\n\tconst applicationshell_spread_levels = [/*appProps*/ ctx[6], { appOffsetHeight: true }];\n\n\tfunction applicationshell_elementRoot_binding(value) {\n\t\t/*applicationshell_elementRoot_binding*/ ctx[12](value);\n\t}\n\n\tfunction applicationshell_elementContent_binding(value) {\n\t\t/*applicationshell_elementContent_binding*/ ctx[13](value);\n\t}\n\n\tlet applicationshell_props = {\n\t\t$$slots: { default: [create_default_slot_1] },\n\t\t$$scope: { ctx }\n\t};\n\n\tfor (let i = 0; i < applicationshell_spread_levels.length; i += 1) {\n\t\tapplicationshell_props = assign(applicationshell_props, applicationshell_spread_levels[i]);\n\t}\n\n\tif (/*elementRoot*/ ctx[1] !== void 0) {\n\t\tapplicationshell_props.elementRoot = /*elementRoot*/ ctx[1];\n\t}\n\n\tif (/*elementContent*/ ctx[0] !== void 0) {\n\t\tapplicationshell_props.elementContent = /*elementContent*/ ctx[0];\n\t}\n\n\tapplicationshell = new ApplicationShell({ props: applicationshell_props });\n\tbinding_callbacks.push(() => bind(applicationshell, 'elementRoot', applicationshell_elementRoot_binding));\n\tbinding_callbacks.push(() => bind(applicationshell, 'elementContent', applicationshell_elementContent_binding));\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(applicationshell.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(applicationshell, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst applicationshell_changes = (dirty & /*appProps*/ 64)\n\t\t\t? get_spread_update(applicationshell_spread_levels, [\n\t\t\t\t\tget_spread_object(/*appProps*/ ctx[6]),\n\t\t\t\t\tapplicationshell_spread_levels[1]\n\t\t\t\t])\n\t\t\t: {};\n\n\t\t\tif (dirty & /*$$scope, data, autoClose, dialogComponent*/ 1049100) {\n\t\t\t\tapplicationshell_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\tif (!updating_elementRoot && dirty & /*elementRoot*/ 2) {\n\t\t\t\tupdating_elementRoot = true;\n\t\t\t\tapplicationshell_changes.elementRoot = /*elementRoot*/ ctx[1];\n\t\t\t\tadd_flush_callback(() => updating_elementRoot = false);\n\t\t\t}\n\n\t\t\tif (!updating_elementContent && dirty & /*elementContent*/ 1) {\n\t\t\t\tupdating_elementContent = true;\n\t\t\t\tapplicationshell_changes.elementContent = /*elementContent*/ ctx[0];\n\t\t\t\tadd_flush_callback(() => updating_elementContent = false);\n\t\t\t}\n\n\t\t\tapplicationshell.$set(applicationshell_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(applicationshell.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(applicationshell.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(applicationshell, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet if_block_anchor;\n\tlet current;\n\tconst if_block_creators = [create_if_block, create_else_block];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*modal*/ ctx[5]) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif_blocks[current_block_type_index].m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block) {\n\t\t\t\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t} else {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif_blocks[current_block_type_index].d(detaching);\n\t\t\tif (detaching) detach(if_block_anchor);\n\t\t}\n\t};\n}\n\nconst s_MODAL_BACKGROUND = '#50505080';\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { elementContent } = $$props;\n\tlet { elementRoot } = $$props;\n\tlet { data = {} } = $$props;\n\tlet { dialogComponent = void 0 } = $$props;\n\tconst application = getContext('external').application;\n\tconst s_MODAL_TRANSITION = fade;\n\tconst s_MODAL_TRANSITION_OPTIONS = { duration: 200 };\n\tlet modal = void 0;\n\n\t// Stores props for the ApplicationShell.\n\tconst appProps = {\n\t\t// Stores any transition functions.\n\t\ttransition: void 0,\n\t\tinTransition: void 0,\n\t\toutTransition: void 0,\n\t\t// Stores properties to set for options for any transitions.\n\t\ttransitionOptions: void 0,\n\t\tinTransitionOptions: void 0,\n\t\toutTransitionOptions: void 0,\n\t\t// Stores any style overrides for application shell.\n\t\tstylesApp: void 0,\n\t\tstylesContent: void 0\n\t};\n\n\tconst modalProps = {\n\t\t// Background CSS style string.\n\t\tbackground: void 0,\n\t\t// Stores any transition functions.\n\t\ttransition: void 0,\n\t\tinTransition: void 0,\n\t\toutTransition: void 0,\n\t\t// Stores properties to set for options for any transitions.\n\t\ttransitionOptions: void 0,\n\t\tinTransitionOptions: void 0,\n\t\toutTransitionOptions: void 0\n\t};\n\n\tlet zIndex = void 0;\n\n\t// Automatically close the dialog on button click handler completion.\n\tlet autoClose = true;\n\n\t// Only set modal once on mount. You can't change between a modal an non-modal dialog during runtime.\n\tif (modal === void 0) {\n\t\tmodal = typeof data?.modal === 'boolean' ? data.modal : false;\n\t}\n\n\tfunction dialogcontent_autoClose_binding(value) {\n\t\tautoClose = value;\n\t\t(((($$invalidate(9, autoClose), $$invalidate(3, data)), $$invalidate(5, modal)), $$invalidate(8, zIndex)), $$invalidate(4, application));\n\t}\n\n\tfunction dialogcontent_dialogInstance_binding(value) {\n\t\tdialogComponent = value;\n\t\t$$invalidate(2, dialogComponent);\n\t}\n\n\tfunction applicationshell_elementRoot_binding(value) {\n\t\telementRoot = value;\n\t\t$$invalidate(1, elementRoot);\n\t}\n\n\tfunction applicationshell_elementContent_binding(value) {\n\t\telementContent = value;\n\t\t$$invalidate(0, elementContent);\n\t}\n\n\tfunction dialogcontent_autoClose_binding_1(value) {\n\t\tautoClose = value;\n\t\t(((($$invalidate(9, autoClose), $$invalidate(3, data)), $$invalidate(5, modal)), $$invalidate(8, zIndex)), $$invalidate(4, application));\n\t}\n\n\tfunction dialogcontent_dialogInstance_binding_1(value) {\n\t\tdialogComponent = value;\n\t\t$$invalidate(2, dialogComponent);\n\t}\n\n\tfunction applicationshell_elementRoot_binding_1(value) {\n\t\telementRoot = value;\n\t\t$$invalidate(1, elementRoot);\n\t}\n\n\tfunction applicationshell_elementContent_binding_1(value) {\n\t\telementContent = value;\n\t\t$$invalidate(0, elementContent);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('elementContent' in $$props) $$invalidate(0, elementContent = $$props.elementContent);\n\t\tif ('elementRoot' in $$props) $$invalidate(1, elementRoot = $$props.elementRoot);\n\t\tif ('data' in $$props) $$invalidate(3, data = $$props.data);\n\t\tif ('dialogComponent' in $$props) $$invalidate(2, dialogComponent = $$props.dialogComponent);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*data, modal, zIndex, application*/ 312) {\n\t\t\t// Retrieve values from the DialogData object and also potentially set any SvelteApplication accessors.\n\t\t\t// Explicit checks are performed against existing local variables as the only externally reactive variable is `data`.\n\t\t\t// All of the checks below trigger when there are any external changes to the `data` prop.\n\t\t\t// Prevent any unnecessary changing of local & `application` variables unless actual changes occur.\n\t\t\t// Foundry App options --------------------------------------------------------------------------------------------\n\t\t\tif (typeof data === 'object') {\n\t\t\t\t$$invalidate(9, autoClose = typeof data.autoClose === 'boolean'\n\t\t\t\t? data.autoClose\n\t\t\t\t: true);\n\n\t\t\t\tconst newZIndex = Number.isInteger(data.zIndex) || data.zIndex === null\n\t\t\t\t? data.zIndex\n\t\t\t\t: modal\n\t\t\t\t\t? Number.MAX_SAFE_INTEGER\n\t\t\t\t\t: Number.MAX_SAFE_INTEGER - 1;\n\n\t\t\t\tif (zIndex !== newZIndex) {\n\t\t\t\t\t$$invalidate(8, zIndex = newZIndex);\n\t\t\t\t}\n\n\t\t\t\t// Update the main foundry options when data changes. Perform explicit checks against existing data in `application`.\n\t\t\t\tconst newDraggable = data.draggable ?? true;\n\n\t\t\t\tif (application.reactive.draggable !== newDraggable) {\n\t\t\t\t\t$$invalidate(4, application.reactive.draggable = newDraggable, application);\n\t\t\t\t}\n\n\t\t\t\tconst newPopOut = data.popOut ?? true;\n\n\t\t\t\tif (application.reactive.popOut !== newPopOut) {\n\t\t\t\t\t$$invalidate(4, application.reactive.popOut = newPopOut, application);\n\t\t\t\t}\n\n\t\t\t\tconst newResizable = data.resizable ?? false;\n\n\t\t\t\tif (application.reactive.resizable !== newResizable) {\n\t\t\t\t\t$$invalidate(4, application.reactive.resizable = newResizable, application);\n\t\t\t\t}\n\n\t\t\t\t// Note application.title from Application localizes `options.title`, so compare with `application.options.title`.\n\t\t\t\tconst newTitle = data.title ?? 'Dialog';\n\n\t\t\t\tif (newTitle !== application?.options?.title) {\n\t\t\t\t\t$$invalidate(4, application.reactive.title = newTitle, application);\n\t\t\t\t}\n\n\t\t\t\tif (application.position.zIndex !== zIndex) {\n\t\t\t\t\t$$invalidate(4, application.position.zIndex = zIndex, application);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*data, appProps*/ 72) {\n\t\t\t// ApplicationShell transition options ----------------------------------------------------------------------------\n\t\t\tif (typeof data?.transition === 'object') {\n\t\t\t\t// Store data.transitions to shorten statements below.\n\t\t\t\tconst d = data.transition;\n\n\t\t\t\tif (d?.transition !== appProps.transition) {\n\t\t\t\t\t$$invalidate(6, appProps.transition = d.transition, appProps);\n\t\t\t\t}\n\n\t\t\t\tif (d?.inTransition !== appProps.inTransition) {\n\t\t\t\t\t$$invalidate(6, appProps.inTransition = d.inTransition, appProps);\n\t\t\t\t}\n\n\t\t\t\tif (d?.outTransition !== appProps.outTransition) {\n\t\t\t\t\t$$invalidate(6, appProps.outTransition = d.outTransition, appProps);\n\t\t\t\t}\n\n\t\t\t\tif (d?.transitionOptions !== appProps.transitionOptions) {\n\t\t\t\t\t$$invalidate(6, appProps.transitionOptions = d.transitionOptions, appProps);\n\t\t\t\t}\n\n\t\t\t\tif (d?.inTransitionOptions !== appProps.inTransitionOptions) {\n\t\t\t\t\t$$invalidate(6, appProps.inTransitionOptions = d.inTransitionOptions, appProps);\n\t\t\t\t}\n\n\t\t\t\tif (d?.outTransitionOptions !== appProps.outTransitionOptions) {\n\t\t\t\t\t$$invalidate(6, appProps.outTransitionOptions = d.outTransitionOptions, appProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*data, modalProps*/ 136) {\n\t\t\t// Modal options --------------------------------------------------------------------------------------------------\n\t\t\t{\n\t\t\t\tconst newModalBackground = typeof data?.modalOptions?.background === 'string'\n\t\t\t\t? data.modalOptions.background\n\t\t\t\t: s_MODAL_BACKGROUND;\n\n\t\t\t\tif (newModalBackground !== modalProps.background) {\n\t\t\t\t\t$$invalidate(7, modalProps.background = newModalBackground, modalProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*data, modalProps*/ 136) {\n\t\t\tif (typeof data?.modalOptions?.transition === 'object') {\n\t\t\t\t// Store data.transitions to shorten statements below.\n\t\t\t\tconst d = data.modalOptions.transition;\n\n\t\t\t\tif (d?.transition !== modalProps.transition) {\n\t\t\t\t\t$$invalidate(\n\t\t\t\t\t\t7,\n\t\t\t\t\t\tmodalProps.transition = typeof d?.transition === 'function'\n\t\t\t\t\t\t? d.transition\n\t\t\t\t\t\t: s_MODAL_TRANSITION,\n\t\t\t\t\t\tmodalProps\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (d?.inTransition !== modalProps.inTransition) {\n\t\t\t\t\t$$invalidate(7, modalProps.inTransition = d.inTransition, modalProps);\n\t\t\t\t}\n\n\t\t\t\tif (d?.outTransition !== modalProps.outTransition) {\n\t\t\t\t\t$$invalidate(7, modalProps.outTransition = d.outTransition, modalProps);\n\t\t\t\t}\n\n\t\t\t\t// Provide default transition options if not defined.\n\t\t\t\tif (d?.transitionOptions !== modalProps.transitionOptions) {\n\t\t\t\t\t$$invalidate(\n\t\t\t\t\t\t7,\n\t\t\t\t\t\tmodalProps.transitionOptions = typeof d?.transitionOptions === 'object'\n\t\t\t\t\t\t? d.transitionOptions\n\t\t\t\t\t\t: s_MODAL_TRANSITION_OPTIONS,\n\t\t\t\t\t\tmodalProps\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (d?.inTransitionOptions !== modalProps.inTransitionOptions) {\n\t\t\t\t\t$$invalidate(7, modalProps.inTransitionOptions = d.inTransitionOptions, modalProps);\n\t\t\t\t}\n\n\t\t\t\tif (d?.outTransitionOptions !== modalProps.outTransitionOptions) {\n\t\t\t\t\t$$invalidate(7, modalProps.outTransitionOptions = d.outTransitionOptions, modalProps);\n\t\t\t\t}\n\t\t\t} else // Provide a fallback / default glass pane transition when `data.modalOptions.transition` is not defined.\n\t\t\t{\n\t\t\t\tconst newModalTransition = typeof data?.modalOptions?.transition?.transition === 'function'\n\t\t\t\t? data.modalOptions.transition.transition\n\t\t\t\t: s_MODAL_TRANSITION;\n\n\t\t\t\tif (newModalTransition !== modalProps.transition) {\n\t\t\t\t\t$$invalidate(7, modalProps.transition = newModalTransition, modalProps);\n\t\t\t\t}\n\n\t\t\t\tconst newModalTransitionOptions = typeof data?.modalOptions?.transitionOptions === 'object'\n\t\t\t\t? data.modalOptions.transitionOptions\n\t\t\t\t: s_MODAL_TRANSITION_OPTIONS;\n\n\t\t\t\tif (newModalTransitionOptions !== modalProps.transitionOptions) {\n\t\t\t\t\t$$invalidate(7, modalProps.transitionOptions = newModalTransitionOptions, modalProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\telementContent,\n\t\telementRoot,\n\t\tdialogComponent,\n\t\tdata,\n\t\tapplication,\n\t\tmodal,\n\t\tappProps,\n\t\tmodalProps,\n\t\tzIndex,\n\t\tautoClose,\n\t\tdialogcontent_autoClose_binding,\n\t\tdialogcontent_dialogInstance_binding,\n\t\tapplicationshell_elementRoot_binding,\n\t\tapplicationshell_elementContent_binding,\n\t\tdialogcontent_autoClose_binding_1,\n\t\tdialogcontent_dialogInstance_binding_1,\n\t\tapplicationshell_elementRoot_binding_1,\n\t\tapplicationshell_elementContent_binding_1\n\t];\n}\n\nclass DialogShell extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, {\n\t\t\telementContent: 0,\n\t\t\telementRoot: 1,\n\t\t\tdata: 3,\n\t\t\tdialogComponent: 2\n\t\t});\n\t}\n\n\tget elementContent() {\n\t\treturn this.$$.ctx[0];\n\t}\n\n\tset elementContent(elementContent) {\n\t\tthis.$$set({ elementContent });\n\t\tflush();\n\t}\n\n\tget elementRoot() {\n\t\treturn this.$$.ctx[1];\n\t}\n\n\tset elementRoot(elementRoot) {\n\t\tthis.$$set({ elementRoot });\n\t\tflush();\n\t}\n\n\tget data() {\n\t\treturn this.$$.ctx[3];\n\t}\n\n\tset data(data) {\n\t\tthis.$$set({ data });\n\t\tflush();\n\t}\n\n\tget dialogComponent() {\n\t\treturn this.$$.ctx[2];\n\t}\n\n\tset dialogComponent(dialogComponent) {\n\t\tthis.$$set({ dialogComponent });\n\t\tflush();\n\t}\n}\n\nexport { ApplicationShell, DialogContent, DialogShell, EmptyApplicationShell, TJSApplicationHeader, TJSApplicationShell, TJSComponentShell, TJSContainer, TJSGlassPane, TJSHeaderButton };\n//# sourceMappingURL=index.js.map\n","<script>\r\n   import { ApplicationShell }   from '@typhonjs-fvtt/runtime/svelte/component/core';\r\n\r\n   export let elementRoot;\r\n</script>\r\n\r\n<!-- This is necessary for Svelte to generate accessors TRL can access for `elementRoot` -->\r\n<svelte:options accessors={true}/>\r\n\r\n<!-- ApplicationShell provides the popOut / application shell frame, header bar, content areas -->\r\n<!-- ApplicationShell exports `elementRoot` which is the outer application shell element -->\r\n<ApplicationShell bind:elementRoot>\r\n   <main>\r\n      <h1>Basic application</h1>\r\n   </main>\r\n</ApplicationShell>\r\n\r\n<style lang=\"scss\">\r\n   main {\r\n      text-align: center;\r\n      display: flex;\r\n      flex-direction: column;\r\n      color: red;\r\n   }\r\n</style>","import { SvelteApplication }  from '@typhonjs-fvtt/runtime/svelte/application';\r\n\r\nimport BasicAppShell          from './BasicAppShell.svelte';\r\n\r\nexport default class BasicApplication extends SvelteApplication\r\n{\r\n   /**\r\n    * Default Application options\r\n    *\r\n    * @returns {object} options - Application options.\r\n    * @see https://foundryvtt.com/api/Application.html#options\r\n    */\r\n   static get defaultOptions()\r\n   {\r\n      return foundry.utils.mergeObject(super.defaultOptions, {\r\n         title: 'TemplateESM.title',  // Automatically localized from `lang/en.json`.\r\n         width: 300,\r\n\r\n         svelte: {\r\n            class: BasicAppShell,\r\n            target: document.body\r\n         }\r\n      });\r\n   }\r\n}","import BasicApplication from './view/BasicApplication.js';\r\n\r\nHooks.once('ready', () => new BasicApplication().render(true, { focus: true }));"],"names":["get","writable$2","constants.animateKeys","constants.relativeRegex","lerp","linear","constants.transformOriginDefault","constants.transformKeysBitwise","constants.transformKeys","s_VALIDATION_DATA","constants.transformOrigins","constants.numericDefaults","constants.setNumericDefaults"],"mappings":"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"}